{"version":3,"sources":["data/databricksTerminology.js","data/databaseComparisonData.js","data/databaseExecutiveSummary.js","components/DatabaseComparison.js","data/glossaryData.js","components/DataEngineeringGlossary.js","data/serviceCategories.js","data/cloudExecutiveSummary.js","components/AwsVsAzureComparison.js","components/DataProcessingFlows.js","components/CloudStorageComparison.js","components/AzureDatabricksInfra.js","components/StoragePricingComparison.js","components/SimplifiedComparison.js","App.js","reportWebVitals.js","index.js"],"names":["databricksTerminology","id","term","definition","example","why","databaseComparisonData","category","title","singlestore","databricks","snowflake","details","metrics","type","description","winner","source","databaseExecutiveSummary","businessPriorities","icon","summary","strengths","businessCase","industryGuidance","industry","recommendation","keyConsiderations","implementationConsiderations","timeToValue","skillsGap","enterpriseReadiness","requiresSpecialists","organizationalFit","bestFor","challengesWith","teamStructure","culturalAlignment","migrationConsiderations","fromTraditional","complexity","timeline","challenges","businessContinuity","DatabaseComparison","expandedItem","setExpandedItem","useState","viewMode","setViewMode","platformFilter","setPlatformFilter","showQuickMetrics","setShowQuickMetrics","audienceView","setAudienceView","selectedPriority","setSelectedPriority","expandedPriority","setExpandedPriority","expandedIndustry","setExpandedIndustry","getMetricsSummaryColor","groupedByCategory","filter","item","_item$metrics","_item$metrics2","_item$metrics3","reduce","acc","push","getColumnWidth","filteredPriorities","priority","React","createElement","className","onClick","Fragment","role","aria-checked","aria-hidden","map","key","Object","entries","_ref","items","toggleExpand","badgeColor","renderMetricsBadge","summaryText","databricksMatch","match","trim","singlestoreMatch","snowflakeMatch","percentMatches","length","join","getMetricsSummary","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","xmlns","priorityId","togglePriorityExpansion","strength","idx","industryIndex","toggleIndustryExpansion","consideration","cidx","glossaryData","aws","azure","other","DataEngineeringGlossary","categoryFilter","setCategoryFilter","searchTerm","setSearchTerm","categories","name","filteredData","matchesCategory","matchesSearch","toLowerCase","includes","placeholder","value","onChange","e","target","scope","_categories$find","find","c","colSpan","serviceCategories","parent","service","children","cloudExecutiveSummary","databricksConsiderations","advantages","disadvantages","businessImpact","costProfile","enterpriseFit","savingsApproach","typicalSavings","hiddenCosts","partnersEcosystem","AwsVsAzureComparison","selectedService","setSelectedService","expandedServices","setExpandedServices","toggleServiceExpansion","categoryIndex","cloud","prev","[object Object]","isServiceExpanded","Array","from","Math","max","_","childIdx","adv","disadv","stopPropagation","style","animation","jsx","flowExplanations","architectureComparison","aspect","impact","DataProcessingFlows","selectedFlowStep","setSelectedFlowStep","activeTab","setActiveTab","width","height","points","strokeDasharray","borderTop","CloudStorageComparison","differences","diff","DatabricksArchitecture","activeTooltip","setActiveTooltip","handleMouseEnter","handleMouseLeave","Icons","Database","cx","cy","rx","ry","Cloud","Server","x","y","x1","y1","x2","y2","Box","Code","Table","Chart","Cogs","r","Network","Fire","Download","Info","Project","ArrowDown","Money","Scale","CheckSquare","Tooltip","content","ArchBox","_ref2","Icon","color","onMouseEnter","onMouseLeave","tooltip","blue","green","purple","orange","indigo","red","gray","yellow","ArrowConnector","_ref3","costData","tier","computing","sql","implementationSteps","phase","timeframe","tasks","useCaseData","examples","benefits","ArchitectureDiagram","CostScalingComponent","ImplementationComponent","step","task","taskIdx","useCase","exIdx","StoragePricingComparison","dataVolume","setDataVolume","formatCurrency","amount","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","notes","abs","small","scenario","monthly","year1","year2","year3","total","medium","large","factor","cost","SimplifiedComparison","label","tab","App","activeCategory","setActiveCategory","activeSubcategory","setActiveSubcategory","databaseViewMode","setDatabaseViewMode","navigation","cloud-compare","subcategories","overview","component","storage","storage-pricing","data-flows","database-compare","database","hasMutipleViews","architecture","AzureDatabricksInfraDetail","reference","glossary","keys","handleCategoryClick","subcategory","getCurrentComponent","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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lH,SAAU,UACVL,KAAM,eACNC,WAAY,qCACZC,QAAS,yDACTmH,IAAK,UACLC,MAAO,8BACPC,MAAO,0BAET,CACElH,SAAU,UACVL,KAAM,kBACNC,WAAY,sEACZC,QAAS,2DACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,uBAET,CACElH,SAAU,UACVL,KAAM,uBACNC,WAAY,4DACZC,QAAS,iEACTmH,IAAK,WACLC,MAAO,oBACPC,MAAO,gCAIT,CACElH,SAAU,OACVL,KAAM,MACNC,WAAY,8DACZC,QAAS,4CACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,KAET,CACElH,SAAU,OACVL,KAAM,OACNC,WAAY,kEACZC,QAAS,wDACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,KAET,CACElH,SAAU,OACVL,KAAM,UACNC,WAAY,oDACZC,QAAS,0DACTmH,IAAK,mBACLC,MAAO,oBACPC,MAAO,yBAET,CACElH,SAAU,OACVL,KAAM,OACNC,WAAY,kDACZC,QAAS,gDACTmH,IAAK,oBACLC,MAAO,wBACPC,MAAO,+BAET,CACElH,SAAU,OACVL,KAAM,MACNC,WAAY,oDACZC,QAAS,yDACTmH,IAAK,cACLC,MAAO,qBACPC,MAAO,oBAET,CACElH,SAAU,OACVL,KAAM,eACNC,WAAY,4DACZC,QAAS,uEACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,yBAIT,CACElH,SAAU,WACVL,KAAM,QACNC,WAAY,wCACZC,QAAS,oDACTmH,IAAK,cACLC,MAAO,eACPC,MAAO,6BAET,CACElH,SAAU,WACVL,KAAM,QACNC,WAAY,8CACZC,QAAS,uDACTmH,IAAK,uBACLC,MAAO,YACPC,MAAO,sBAET,CACElH,SAAU,WACVL,KAAM,OACNC,WAAY,wCACZC,QAAS,+CACTmH,IAAK,cACLC,MAAO,eACPC,MAAO,iBAET,CACElH,SAAU,WACVL,KAAM,OACNC,WAAY,uCACZC,QAAS,8CACTmH,IAAK,WACLC,MAAO,oBACPC,MAAO,uBAET,CACElH,SAAU,WACVL,KAAM,iBACNC,WAAY,oDACZC,QAAS,gEACTmH,IAAK,WACLC,MAAO,oBACPC,MAAO,yBAET,CACElH,SAAU,WACVL,KAAM,cACNC,WAAY,qDACZC,QAAS,2CACTmH,IAAK,cACLC,MAAO,eACPC,MAAO,qBAET,CACElH,SAAU,WACVL,KAAM,mBACNC,WAAY,2BACZC,QAAS,0CACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,KAET,CACElH,SAAU,WACVL,KAAM,mBACNC,WAAY,wDACZC,QAAS,oCACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,KAET,CACElH,SAAU,WACVL,KAAM,QACNC,WAAY,iCACZC,QAAS,+CACTmH,IAAK,uBACLC,MAAO,oBACPC,MAAO,wBAET,CACElH,SAAU,WACVL,KAAM,YACNC,WAAY,qDACZC,QAAS,yCACTmH,IAAK,eACLC,MAAO,gBACPC,MAAO,mBAIT,CACElH,SAAU,WACVL,KAAM,SACNC,WAAY,+CACZC,QAAS,+DACTmH,IAAK,oBACLC,MAAO,gBACPC,MAAO,qBAET,CACElH,SAAU,WACVL,KAAM,cACNC,WAAY,8CACZC,QAAS,2DACTmH,IAAK,WACLC,MAAO,oBACPC,MAAO,uBAET,CACElH,SAAU,WACVL,KAAM,mBACNC,WAAY,sDACZC,QAAS,gEACTmH,IAAK,WACLC,MAAO,oBACPC,MAAO,qBAET,CACElH,SAAU,WACVL,KAAM,uBACNC,WAAY,+CACZC,QAAS,4DACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,KAET,CACElH,SAAU,WACVL,KAAM,aACNC,WAAY,iDACZC,QAAS,+CACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,KAIT,CACElH,SAAU,YACVL,KAAM,iBACNC,WAAY,2CACZC,QAAS,mDACTmH,IAAK,WACLC,MAAO,oBACPC,MAAO,uBAET,CACElH,SAAU,YACVL,KAAM,YACNC,WAAY,0CACZC,QAAS,8DACTmH,IAAK,sBACLC,MAAO,YACPC,MAAO,kBAET,CACElH,SAAU,YACVL,KAAM,iBACNC,WAAY,sEACZC,QAAS,yCACTmH,IAAK,oBACLC,MAAO,oBACPC,MAAO,wBAET,CACElH,SAAU,YACVL,KAAM,MACNC,WAAY,mCACZC,QAAS,iDACTmH,IAAK,sBACLC,MAAO,eACPC,MAAO,uBAET,CACElH,SAAU,YACVL,KAAM,MACNC,WAAY,qCACZC,QAAS,kDACTmH,IAAK,eACLC,MAAO,wBACPC,MAAO,mBAET,CACElH,SAAU,YACVL,KAAM,YACNC,WAAY,0DACZC,QAAS,2DACTmH,IAAK,WACLC,MAAO,oBACPC,MAAO,aAIT,CACElH,SAAU,aACVL,KAAM,mBACNC,WAAY,+CACZC,QAAS,mDACTmH,IAAK,aACLC,MAAO,2BACPC,MAAO,qBAET,CACElH,SAAU,aACVL,KAAM,oBACNC,WAAY,iDACZC,QAAS,iDACTmH,IAAK,eACLC,MAAO,+BACPC,MAAO,gBAET,CACElH,SAAU,aACVL,KAAM,cACNC,WAAY,oDACZC,QAAS,+CACTmH,IAAK,UACLC,MAAO,mBACPC,MAAO,8BAET,CACElH,SAAU,aACVL,KAAM,uBACNC,WAAY,4CACZC,QAAS,2CACTmH,IAAK,mBACLC,MAAO,yBACPC,MAAO,wBAET,CACElH,SAAU,aACVL,KAAM,YACNC,WAAY,0DACZC,QAAS,uDACTmH,IAAK,MACLC,MAAO,YACPC,MAAO,iBAET,CACElH,SAAU,aACVL,KAAM,+BACNC,WAAY,kCACZC,QAAS,wDACTmH,IAAK,iBACLC,MAAO,aACPC,MAAO,6BAIT,CACElH,SAAU,QACVL,KAAM,wBACNC,WAAY,0DACZC,QAAS,6CACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,KAET,CACElH,SAAU,QACVL,KAAM,qBACNC,WAAY,gDACZC,QAAS,iDACTmH,IAAK,sBACLC,MAAO,OACPC,MAAO,cAET,CACElH,SAAU,QACVL,KAAM,mBACNC,WAAY,2CACZC,QAAS,mDACTmH,IAAK,sBACLC,MAAO,YACPC,MAAO,KAET,CACElH,SAAU,QACVL,KAAM,YACNC,WAAY,6CACZC,QAAS,2CACTmH,IAAK,WACLC,MAAO,2BACPC,MAAO,sBAET,CACElH,SAAU,QACVL,KAAM,aACNC,WAAY,iDACZC,QAAS,kDACTmH,IAAK,MACLC,MAAO,MACPC,MAAO,kBAET,CACElH,SAAU,QACVL,KAAM,gBACNC,WAAY,wDACZC,QAAS,4DACTmH,IAAK,mBACLC,MAAO,iBACPC,MAAO,sBAIT,CACElH,SAAU,aACVL,KAAM,aACNC,WAAY,oDACZC,QAAS,2DACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,yBAET,CACElH,SAAU,aACVL,KAAM,yBACNC,WAAY,6DACZC,QAAS,qEACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,cAET,CACElH,SAAU,aACVL,KAAM,YACNC,WAAY,0EACZC,QAAS,oDACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,wBAET,CACElH,SAAU,aACVL,KAAM,gBACNC,WAAY,6DACZC,QAAS,0DACTmH,IAAK,sBACLC,MAAO,UACPC,MAAO,4BAET,CACElH,SAAU,aACVL,KAAM,gBACNC,WAAY,wCACZC,QAAS,8CACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,qBAET,CACElH,SAAU,aACVL,KAAM,0BACNC,WAAY,yDACZC,QAAS,sDACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,kBAET,CACElH,SAAU,aACVL,KAAM,SACNC,WAAY,yCACZC,QAAS,wDACTmH,IAAK,YACLC,MAAO,WACPC,MAAO,4BAET,CACElH,SAAU,aACVL,KAAM,uBACNC,WAAY,2CACZC,QAAS,0DACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,8BAET,CACElH,SAAU,aACVL,KAAM,aACNC,WAAY,4DACZC,QAAS,uDACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,cAET,CACElH,SAAU,aACVL,KAAM,0BACNC,WAAY,sCACZC,QAAS,8CACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,cAET,CACElH,SAAU,aACVL,KAAM,YACNC,WAAY,4DACZC,QAAS,uCACTmH,IAAK,sBACLC,MAAO,kBACPC,MAAO,8BAET,CACElH,SAAU,aACVL,KAAM,YACNC,WAAY,kDACZC,QAAS,+CACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,wBAET,CACElH,SAAU,aACVL,KAAM,WACNC,WAAY,0CACZC,QAAS,2CACTmH,IAAK,MACLC,MAAO,qBACPC,MAAO,cAET,CACElH,SAAU,aACVL,KAAM,cACNC,WAAY,2DACZC,QAAS,qDACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,0BAIT,CACElH,SAAU,WACVL,KAAM,eACNC,WAAY,sDACZC,QAAS,gDACTmH,IAAK,uBACLC,MAAO,UACPC,MAAO,qBAET,CACElH,SAAU,WACVL,KAAM,kBACNC,WAAY,qDACZC,QAAS,yCACTmH,IAAK,iBACLC,MAAO,UACPC,MAAO,qBAET,CACElH,SAAU,WACVL,KAAM,eACNC,WAAY,qCACZC,QAAS,kDACTmH,IAAK,oBACLC,MAAO,UACPC,MAAO,qBAET,CACElH,SAAU,WACVL,KAAM,eACNC,WAAY,8CACZC,QAAS,qDACTmH,IAAK,gBACLC,MAAO,0BACPC,MAAO,2BAET,CACElH,SAAU,WACVL,KAAM,mBACNC,WAAY,8CACZC,QAAS,yDACTmH,IAAK,uBACLC,MAAO,kBACPC,MAAO,6BAET,CACElH,SAAU,WACVL,KAAM,4BACNC,WAAY,uCACZC,QAAS,wCACTmH,IAAK,MACLC,MAAO,eACPC,MAAO,oBAET,CACElH,SAAU,WACVL,KAAM,cACNC,WAAY,kEACZC,QAAS,gDACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,KAET,CACElH,SAAU,WACVL,KAAM,kBACNC,WAAY,qCACZC,QAAS,kDACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,KAET,CACElH,SAAU,WACVL,KAAM,6BACNC,WAAY,kDACZC,QAAS,kDACTmH,IAAK,IACLC,MAAO,IACPC,MAAO,KAIT,CACElH,SAAU,WACVL,KAAM,WACNC,WAAY,yCACZC,QAAS,+CACTmH,IAAK,KACLC,MAAO,IACPC,MAAO,KAET,CACElH,SAAU,WACVL,KAAM,uBACNC,WAAY,sCACZC,QAAS,6BACTmH,IAAK,IACLC,MAAO,eACPC,MAAO,KAET,CACElH,SAAU,WACVL,KAAM,iBACNC,WAAY,+BACZC,QAAS,iDACTmH,IAAK,WACLC,MAAO,IACPC,MAAO,KAET,CACElH,SAAU,WACVL,KAAM,4BACNC,WA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","file":"static/js/main.9e4967de.chunk.js","sourcesContent":["const databricksTerminology = [\n  {\n    id: 'delta-lake',\n    term: 'Delta Lake',\n    definition: 'An open-source storage layer that brings ACID transactions to big data workloads.',\n    example: 'When two data engineers update the same customer dataset simultaneously, Delta Lake ensures neither overrides the other\\'s changes.',\n    why: 'Provides reliability and consistency guarantees previously only available in traditional databases.'\n  },\n  {\n    id: 'medallion',\n    term: 'Medallion Architecture',\n    definition: 'A data organization framework using Bronze (raw), Silver (validated), and Gold (aggregated) layers.',\n    example: 'Raw JSON payment transactions go into Bronze, cleansed data with proper types into Silver, and daily merchant summaries into Gold.',\n    why: 'Creates clear separation of concerns and progressive data quality improvement through the pipeline.'\n  },\n  {\n    id: 'lakehouse',\n    term: 'Lakehouse',\n    definition: 'A hybrid architecture combining data lake storage with data warehouse functionality.',\n    example: 'Storing petabytes of raw data while still providing SQL query capabilities and BI tool connectivity.',\n    why: 'Eliminates need for separate systems for different data workloads (analytics, ML, BI).'\n  },\n  {\n    id: 'unity-catalog',\n    term: 'Unity Catalog',\n    definition: 'Unified governance layer for managing data assets across clouds with fine-grained access controls.',\n    example: 'Restricting access to PII columns in customer data while allowing aggregated metrics for analytics teams.',\n    why: 'Centralizes security, auditing, and lineage tracking across all data assets.'\n  },\n  {\n    id: 'photon',\n    term: 'Photon Engine',\n    definition: 'C++ vectorized query execution engine that accelerates Spark workloads without code changes.',\n    example: 'A complex aggregation query runs 5x faster with Photon enabled without modifying any SQL code.',\n    why: 'Delivers significant performance gains for data-intensive workloads, especially for analytics.'\n  },\n  {\n    id: 'delta-live-tables',\n    term: 'Delta Live Tables (DLT)',\n    definition: 'Declarative framework for building reliable data pipelines with quality controls and monitoring.',\n    example: 'Defining data quality expectations like \"all transaction_ids must be unique\" directly in pipeline code.',\n    why: 'Reduces boilerplate code and increases reliability by automating dependency management and quality checks.'\n  },\n  {\n    id: 'mlflow',\n    term: 'MLflow',\n    definition: 'Open-source platform for managing the ML lifecycle including experimentation, reproducibility, and deployment.',\n    example: 'Tracking model parameters, metrics, and artifacts during fraud detection model development.',\n    why: 'Standardizes the machine learning process from experiment to production.'\n  },\n  {\n    id: 'structured-streaming',\n    term: 'Structured Streaming',\n    definition: 'Spark API for continuous data processing with exactly-once guarantees.',\n    example: 'Processing a stream of payment events as they arrive, updating fraud detection models in real-time.',\n    why: 'Enables real-time data processing using the same APIs as batch processing.'\n  },\n  {\n    id: 'z-ordering',\n    term: 'Z-Ordering',\n    definition: 'Physical data organization technique that co-locates related data for faster queries.',\n    example: 'Z-ordering transaction data by date and merchant_id improves filtering performance by 10-100x.',\n    why: 'Optimizes read performance for specific query patterns without requiring index maintenance.'\n  },\n  {\n    id: 'dbus',\n    term: 'DBUs (Databricks Units)',\n    definition: 'Billing units representing compute resources consumed per hour.',\n    example: 'A Standard cluster with 4 cores might consume 0.75 DBUs per hour while running.',\n    why: 'Forms the basis of usage-based pricing model, allowing cost optimization via scaling.'\n  },\n  {\n    id: 'notebooks',\n    term: 'Notebooks',\n    definition: 'Interactive documents combining code, visualizations, and markdown in multiple languages.',\n    example: 'Creating an end-to-end data pipeline with SQL data preparation, Python modeling, and R visualizations in a single notebook.',\n    why: 'Enables collaborative, documented data workflows bridging data engineering and data science.'\n  },\n  {\n    id: 'workspace',\n    term: 'Workspace',\n    definition: 'Collaborative environment for organizing and developing Databricks assets.',\n    example: 'Organizing notebooks into folders for different departments while sharing common utilities.',\n    why: 'Provides team-based collaboration, access controls, and versioning for data assets.'\n  },\n  {\n    id: 'clusters',\n    term: 'Clusters',\n    definition: 'Managed compute resources that execute Databricks workloads with auto-scaling capabilities.',\n    example: 'Setting up an auto-scaling cluster that grows to 20 nodes during peak processing and scales down to 2 during quiet periods.',\n    why: 'Separates storage from compute, allowing flexible scaling based on workload demands.'\n  },\n  {\n    id: 'auto-loader',\n    term: 'Auto Loader',\n    definition: 'Efficient data ingestion service for incrementally processing new files in cloud storage.',\n    example: 'Automatically detecting and processing new transaction log files as they arrive in S3 without explicit listing operations.',\n    why: 'Simplifies data ingestion while optimizing for cost and performance compared to manual approaches.'\n  },\n  {\n    id: 'delta-sharing',\n    term: 'Delta Sharing',\n    definition: 'Open protocol for securely sharing data across organizations regardless of platform.',\n    example: 'Sharing payment transaction aggregates with partner organizations without giving direct access to your data lake.',\n    why: 'Enables secure, efficient data sharing workflows across organizational boundaries.'\n  }\n];\n\nexport default databricksTerminology;\n","// src/data/databaseComparisonData.js\n\nconst databaseComparisonData = [\n    {\n      id: 'primary-design',\n      category: 'Architecture',\n      title: 'Primary Design',\n      singlestore: 'Memory-optimized, transactional database with analytical capabilities',\n      databricks: 'Data lakehouse platform optimized for analytics and ML',\n      snowflake: 'Cloud-native data warehouse with separation of storage and compute',\n      details: 'SingleStore was designed as a distributed SQL database that combines in-memory performance with disk-based durability. Databricks was built around Apache Spark as a unified analytics platform, later evolving into the lakehouse paradigm combining data lake storage with data warehouse functionality. Snowflake was architected as a cloud-native data warehouse with complete separation of storage, compute, and services layers.',\n      metrics: {\n        type: 'qualitative',\n        description: 'Architectural differences make direct comparison difficult'\n      }\n    },\n    {\n      id: 'data-storage',\n      category: 'Architecture',\n      title: 'Data Storage',\n      singlestore: 'Primarily in-memory with disk persistence',\n      databricks: 'Primarily disk-based with intelligent caching',\n      snowflake: 'Cloud object storage with micro-partitioning',\n      details: 'SingleStore keeps active data in memory for fast access with disk-based persistence for durability. Databricks stores data in distributed file systems (typically cloud storage) with intelligent caching mechanisms to optimize frequently accessed data. Snowflake stores all data in cloud object storage organized into micro-partitions with automatic optimization and metadata management.',\n      metrics: {\n        type: 'performance',\n        winner: 'conditional',\n        description: 'SingleStore: Up to 10x faster for point lookups and small queries | Databricks: More cost-effective for large datasets (50-80% lower storage costs) | Snowflake: Best balance of performance and storage efficiency for medium to large datasets',\n        source: 'Published benchmarks from all vendors'\n      }\n    },\n    {\n      id: 'use-case',\n      category: 'Architecture',\n      title: 'Use Case Strength',\n      singlestore: 'High-throughput OLTP with some OLAP',\n      databricks: 'Primarily OLAP, ML and data engineering',\n      snowflake: 'Pure OLAP with focus on SQL analytics',\n      details: 'SingleStore excels at high-throughput transactional workloads while supporting analytical queries. Databricks is optimized for data engineering, analytics, and machine learning workflows rather than high-volume transaction processing. Snowflake specializes in analytical SQL workloads with high-concurrency support but lacks native OLTP capabilities.',\n      metrics: {\n        type: 'performance',\n        winner: 'conditional',\n        description: 'SingleStore: Up to 100x faster for high-volume OLTP | Databricks: 2-5x faster for complex ML analytics | Snowflake: 3-4x better for concurrent SQL analytics queries',\n        source: 'TPC-H, TPC-DS benchmarks, and vendor performance tests'\n      }\n    },\n    {\n      id: 'medallion',\n      category: 'Data Management',\n      title: 'Medallion Architecture',\n      singlestore: 'Would require manual implementation',\n      databricks: 'Native built-in concept',\n      snowflake: 'Supported via schemas and views',\n      details: 'The bronze-silver-gold medallion architecture is a core Databricks concept, with native tools for implementing each layer. In SingleStore, you would need to manually design and implement this architecture using schemas or separate databases. Snowflake can implement medallion architecture using schemas, views, and stored procedures, though not as inherently as Databricks.',\n      metrics: {\n        type: 'efficiency',\n        winner: 'databricks',\n        description: 'Databricks: 60-70% reduction in development time | Snowflake: 30-40% reduction vs manual implementation | SingleStore: Requires full manual implementation',\n        source: 'Customer case studies and implementation reports'\n      }\n    },\n    {\n      id: 'query-language',\n      category: 'Development',\n      title: 'Query Language',\n      singlestore: 'SQL',\n      databricks: 'SQL, Python, R, Scala',\n      snowflake: 'SQL with some JavaScript extensions',\n      details: 'SingleStore primarily uses SQL for data manipulation and queries. Databricks supports multiple languages including SQL, Python, R, and Scala, making it more flexible for different data science and engineering workflows. Snowflake primarily uses SQL with some JavaScript extensions for stored procedures and UDFs.',\n      metrics: {\n        type: 'efficiency',\n        winner: 'databricks',\n        description: 'Databricks: Multi-language support enables 25-40% broader team collaboration | Snowflake: SQL-first approach with limited extensibility | SingleStore: Standard SQL implementation',\n        source: 'Developer productivity studies'\n      }\n    },\n    {\n      id: 'ml-integration',\n      category: 'Development',\n      title: 'Machine Learning',\n      singlestore: 'Limited, requires external tools',\n      databricks: 'Deeply integrated',\n      snowflake: 'Snowpark for ML, external integrations',\n      details: 'Databricks has native ML capabilities with MLflow for experiment tracking, model registry, and deployment workflows. SingleStore has limited ML capabilities and typically requires integration with external tools or platforms for machine learning workflows. Snowflake offers Snowpark for ML, Java/Scala UDFs, and external integrations but lacks the native ML ecosystem of Databricks.',\n      metrics: {\n        type: 'efficiency',\n        winner: 'databricks',\n        description: 'Databricks: 3-5x faster ML deployment cycles with MLflow | Snowflake: Improving with Snowpark but requires 40-50% more integration work | SingleStore: Requires almost entirely external tooling',\n        source: 'MLflow documentation and ML implementation case studies'\n      }\n    },\n    {\n      id: 'scalability',\n      category: 'Performance',\n      title: 'Scalability',\n      singlestore: 'Horizontal scaling via sharding',\n      databricks: 'Elastic compute separate from storage',\n      snowflake: 'Multi-cluster, auto-scaling virtual warehouses',\n      details: 'SingleStore scales horizontally by adding nodes and distributing data via sharding. Databricks follows a cloud-native approach with separate compute and storage, allowing you to scale compute resources independently and elastically, even scaling to zero when not in use. Snowflake offers multi-cluster virtual warehouses that can scale automatically, with independent sizing and complete separation from storage.',\n      metrics: {\n        type: 'cost',\n        winner: 'conditional',\n        description: 'Databricks: 30-50% cost savings for variable workloads | Snowflake: Most elastic scaling with 20-40% lower operational overhead | SingleStore: Requires more planning but predictable scaling',\n        source: 'Cloud cost optimization studies'\n      }\n    },\n    {\n      id: 'data-integration',\n      category: 'Connectivity',\n      title: 'Data Integration',\n      singlestore: 'JDBC/ODBC, pipelines for specific sources',\n      databricks: 'Extensive native connectors ecosystem',\n      snowflake: 'Snowpipe, partner integrations, Kafka connectors',\n      details: 'Databricks offers extensive connectivity options including native connectors for various data sources, Delta Live Tables for ETL, and Auto Loader for data ingestion. SingleStore supports standard database connections and has dedicated pipelines for specific data sources. Snowflake provides Snowpipe for continuous data loading, partner integrations, and Kafka connectors for streaming data.',\n      metrics: {\n        type: 'efficiency',\n        winner: 'databricks',\n        description: 'Databricks: 40-60% reduction in integration development time | Snowflake: 25-35% reduction with Snowpipe | SingleStore: Standard integration capabilities',\n        source: 'Integration implementation benchmarks'\n      }\n    },\n    {\n      id: 'governance',\n      category: 'Management',\n      title: 'Governance & Security',\n      singlestore: 'Traditional database security model',\n      databricks: 'Unity Catalog with fine-grained controls',\n      snowflake: 'Column-level security, data masking, RBAC',\n      details: 'Databricks Unity Catalog provides fine-grained governance across clouds with comprehensive audit logging, lineage tracking, and access controls at the row/column level. SingleStore follows a more traditional database security model with roles and permissions. Snowflake offers robust security features including column-level security, data masking, RBAC, and comprehensive auditing capabilities.',\n      metrics: {\n        type: 'efficiency',\n        winner: 'conditional',\n        description: 'Databricks: 50-70% reduction in governance setup time with Unity Catalog | Snowflake: 40-60% reduction with native security features | SingleStore: Traditional setup requiring more manual configuration',\n        source: 'Enterprise security implementation studies'\n      }\n    },\n    {\n      id: 'cost-model',\n      category: 'Management',\n      title: 'Cost Model',\n      singlestore: 'Capacity-based licensing',\n      databricks: 'Compute usage-based pricing',\n      snowflake: 'Consumption-based pricing (credits)',\n      details: 'SingleStore typically uses capacity-based licensing models (RAM/CPU). Databricks follows a usage-based model centered around compute DBUs (Databricks Units). Snowflake uses a consumption-based model with credits that are consumed based on the virtual warehouse size and usage duration.',\n      metrics: {\n        type: 'cost',\n        winner: 'conditional',\n        description: 'Databricks: 20-40% cost savings for variable workloads | Snowflake: Most transparent pay-as-you-go model with 30-50% better cost predictability | SingleStore: Most economical for consistent, predictable workloads',\n        source: 'Cloud cost optimization analyses'\n      }\n    },\n    {\n      id: 'deployment',\n      category: 'Management',\n      title: 'Deployment Options',\n      singlestore: 'Cloud, on-premises, hybrid',\n      databricks: 'Multi-cloud, limited on-premises',\n      snowflake: 'Multi-cloud only (AWS, Azure, GCP)',\n      details: 'SingleStore offers flexible deployment across cloud platforms, on-premises, and hybrid environments. Databricks is primarily cloud-focused (AWS, Azure, GCP) with more limited on-premises options. Snowflake is exclusively cloud-based, available on major cloud platforms (AWS, Azure, GCP) with no on-premises deployment option.',\n      metrics: {\n        type: 'qualitative',\n        winner: 'singlestore',\n        description: 'SingleStore: Greatest deployment flexibility including on-premises | Databricks: Primarily cloud with limited on-premises | Snowflake: Cloud-only deployment model',\n        source: 'Vendor documentation'\n      }\n    },\n    {\n      id: 'streaming',\n      category: 'Data Processing',\n      title: 'Streaming Data Support',\n      singlestore: 'Fast ingest, limited processing',\n      databricks: 'Native structured streaming',\n      snowflake: 'Snowpipe Streaming, limited processing',\n      details: 'Databricks provides native structured streaming capabilities for real-time data processing with exactly-once semantics. SingleStore offers fast data ingestion but has more limited stream processing capabilities compared to Databricks. Snowflake provides Snowpipe Streaming for continuous data ingestion but has more limited real-time transformation capabilities.',\n      metrics: {\n        type: 'performance',\n        winner: 'conditional',\n        description: 'SingleStore: Up to 1M+ rows/sec for simple ingestion | Databricks: Superior for complex stream processing with 2-3x throughput for transformations | Snowflake: Optimized for ingestion with 500K+ rows/sec but limited transformation capabilities',\n        source: 'Streaming benchmarks and vendor documentation'\n      }\n    },\n    {\n      id: 'recovery',\n      category: 'Management',\n      title: 'Recovery & Backup',\n      singlestore: 'Traditional backup and restore',\n      databricks: 'Time travel and ACID transactions',\n      snowflake: 'Time travel, fail-safe, zero-copy cloning',\n      details: 'Databricks Delta Lake provides time travel capabilities allowing you to access previous versions of data and ACID transactions for reliability. SingleStore offers more traditional database backup and restore mechanisms. Snowflake provides time travel (data retention up to 90 days), fail-safe (additional 7 days beyond time travel), and zero-copy cloning for efficient development and testing.',\n      metrics: {\n        type: 'efficiency',\n        winner: 'snowflake',\n        description: 'Snowflake: Most comprehensive data protection with 90-day time travel and 7-day fail-safe | Databricks: Effective time travel with ACID transactions | SingleStore: Traditional backup/restore model with more operational overhead',\n        source: 'Recovery benchmark studies and vendor documentation'\n      }\n    },\n    {\n      id: 'perf-tuning',\n      category: 'Performance',\n      title: 'Performance Tuning',\n      singlestore: 'Query optimization, indexing, sharding',\n      databricks: 'Query optimization, Delta optimizations, Photon engine',\n      snowflake: 'Automatic optimization, search optimization, clustering keys',\n      details: 'SingleStore offers traditional database tuning approaches like indexing strategies, query optimization, and data distribution via sharding. Databricks provides Delta Lake optimizations (Z-ordering, compaction), the Photon execution engine for vectorized processing, and automated cluster optimization. Snowflake provides largely automatic optimization with minimal tuning required, plus search optimization and clustering keys for specialized workloads.',\n      metrics: {\n        type: 'efficiency',\n        winner: 'snowflake',\n        description: 'Snowflake: 70-90% reduction in manual tuning effort | Databricks: Photon engine delivers 2-7x performance improvement for analytical queries | SingleStore: Most control but requires more expertise and manual tuning',\n        source: 'Performance tuning studies and vendor documentation'\n      }\n    },\n    {\n      id: 'community',\n      category: 'Ecosystem',\n      title: 'Community & Ecosystem',\n      singlestore: 'Smaller community, commercial focus',\n      databricks: 'Large open-source ecosystem',\n      snowflake: 'Large commercial ecosystem, Snowflake Marketplace',\n      details: 'Databricks benefits from the large Apache Spark ecosystem and open-source communities around Delta Lake, MLflow, and other projects. SingleStore has a smaller, more commercially-focused community and ecosystem. Snowflake has a large commercial ecosystem with the Snowflake Marketplace for data sharing and numerous partner integrations.',\n      metrics: {\n        type: 'qualitative',\n        winner: 'databricks',\n        description: 'Databricks: 10x+ larger developer community with open-source foundations | Snowflake: Extensive partner ecosystem and data marketplace | SingleStore: Smaller but focused community',\n        source: 'GitHub activity, marketplace analysis, and community metrics'\n      }\n    },\n    {\n      id: 'etl-capabilities',\n      category: 'Data Processing',\n      title: 'ETL/ELT Capabilities',\n      singlestore: 'Basic transformation during load',\n      databricks: 'Advanced ETL with Delta Live Tables',\n      snowflake: 'Snowflake Tasks, Stored Procedures',\n      details: 'Databricks offers Delta Live Tables for declarative ETL pipelines with quality controls, monitoring, and automatic optimization. SingleStore provides more basic transformation capabilities during data loading. Snowflake provides tasks for orchestration, stored procedures for transformations, and external tool integration for complex ETL workflows.',\n      metrics: {\n        type: 'efficiency',\n        winner: 'databricks',\n        description: 'Databricks: 40-60% reduction in ETL development time with Delta Live Tables | Snowflake: 20-30% reduction with Tasks and Procedures | SingleStore: Basic capabilities requiring more custom development',\n        source: 'ETL implementation case studies'\n      }\n    },\n    {\n      id: 'data-sharing',\n      category: 'Connectivity',\n      title: 'Data Sharing',\n      singlestore: 'Traditional database link approaches',\n      databricks: 'Delta Sharing, Unity Catalog',\n      snowflake: 'Secure Data Sharing, Marketplace',\n      details: 'Snowflake provides native Secure Data Sharing allowing organizations to share live data without copying it, plus the Snowflake Marketplace for discovering and accessing third-party data. Databricks offers Delta Sharing as an open protocol for secure data sharing with external organizations. SingleStore relies on more traditional database approaches for sharing data.',\n      metrics: {\n        type: 'efficiency',\n        winner: 'snowflake',\n        description: 'Snowflake: Most mature data sharing ecosystem with zero-copy sharing | Databricks: Open standard but less mature implementation | SingleStore: Traditional approaches requiring more integration work',\n        source: 'Data sharing implementation studies'\n      }\n    },\n    {\n      id: 'concurrency',\n      category: 'Performance',\n      title: 'Query Concurrency',\n      singlestore: 'High concurrency for mixed workloads',\n      databricks: 'Limited by cluster resources',\n      snowflake: 'Extremely high concurrency with virtual warehouses',\n      details: 'Snowflake excels at high-concurrency workloads through its multi-cluster virtual warehouses that can be sized and scaled independently. SingleStore provides good concurrency for mixed OLTP/OLAP workloads. Databricks concurrency is limited by the resources allocated to a cluster, though it can be increased with larger clusters.',\n      metrics: {\n        type: 'performance',\n        winner: 'snowflake',\n        description: 'Snowflake: Supports 1000+ concurrent queries with optimal warehouse sizing | SingleStore: Effective for mixed workloads up to hundreds of concurrent queries | Databricks: More limited concurrency without significant cluster scaling',\n        source: 'Concurrency benchmarks and vendor documentation'\n      }\n    }\n  ];\n  \n  export default databaseComparisonData;","// Executive summary data for database platforms\n// Translates technical features into business outcomes and decision frameworks\nconst databaseExecutiveSummary = {\n    businessPriorities: [\n      {\n        id: 'total-cost',\n        title: 'Total Cost of Ownership',\n        icon: '💰',\n        singlestore: {\n          summary: 'Predictable cost model for consistent workloads, with potential for significant savings for specific high-performance transaction use cases.',\n          strengths: [\n            'Capacity-based pricing is predictable and budgetable',\n            'Lower cost for high-throughput transaction workloads',\n            'Reduced infrastructure needs through memory optimization'\n          ],\n          businessCase: 'Organizations with stable, predictable transaction-heavy workloads often achieve 20-30% lower TCO with SingleStore versus traditional databases.'\n        },\n        databricks: {\n          summary: 'More efficient for variable workloads with growing data volumes, especially when combining analytics and AI capabilities.',\n          strengths: [\n            'Usage-based model means you only pay for what you use',\n            'Lower storage costs (50-80% less than alternatives)',\n            'Built-in optimization to reduce compute requirements'\n          ],\n          businessCase: 'Organizations with variable analytical workloads typically see 30-40% cost savings with Databricks through elastic resource scaling.'\n        },\n        snowflake: {\n          summary: 'Most transparent pay-as-you-go pricing with separate storage and compute costs, optimal for departments with unpredictable usage patterns.',\n          strengths: [\n            'Independent scaling of storage and compute',\n            'Pay only for actual compute and storage used',\n            'Consumption model means idle resources cost nothing'\n          ],\n          businessCase: 'Organizations with fluctuating analytics demands report 40-50% cost reduction through Snowflakes ability to scale resources up and down automatically.'\n        }\n      },\n      {\n        id: 'time-to-value',\n        title: 'Time to Market',\n        icon: '🚀',\n        singlestore: {\n          summary: 'Fastest deployment for transactional applications needing immediate performance, with minimal tuning required for standard workloads.',\n          strengths: [\n            'Familiar SQL interface reduces learning curve',\n            'Minimal configuration for high performance',\n            'Fast deployment for transaction-oriented applications'\n          ],\n          businessCase: 'Development teams can typically implement high-performance transactional systems 30-40% faster than with traditional databases.'\n        },\n        databricks: {\n          summary: 'Optimal for rapidly developing data science and AI/ML applications, with unified platform across the analytics lifecycle.',\n          strengths: [\n            '40-60% reduction in ETL development time',\n            'Integrated ML capabilities accelerate model deployment',\n            'Open-source ecosystem with extensive community resources'\n          ],\n          businessCase: 'Data science teams report 50-60% faster time-to-production for ML models with Databricks integrated platform.'\n        },\n        snowflake: {\n          summary: 'Rapid deployment for business intelligence and analytics with minimal administration and tuning required.',\n          strengths: [\n            '70-90% reduction in performance tuning effort',\n            'Minimal administration overhead for scaling',\n            'Broad ecosystem of integrated BI tools'\n          ],\n          businessCase: 'Analytics teams can deliver business intelligence solutions 40-50% faster with Snowflakes near-zero administration requirements.'\n        }\n      },\n      {\n        id: 'innovation',\n        title: 'Innovation & Advanced Analytics',\n        icon: '💡',\n        singlestore: {\n          summary: 'Limited native innovation capabilities, requiring integration with external tools for advanced analytics.',\n          strengths: [\n            'High performance foundation for real-time applications',\n            'Vector database capabilities for AI applications',\n            'Fast data ingest for timely analytics'\n          ],\n          businessCase: 'Organizations requiring both transaction processing and real-time analytics can reduce architecture complexity by 30-40%.'\n        },\n        databricks: {\n          summary: 'Superior platform for AI/ML innovation with native tools for the entire data science workflow and deep integration with open-source frameworks.',\n          strengths: [\n            'Native machine learning capabilities with MLflow',\n            'Multi-language support for diverse data science needs',\n            'Large open-source ecosystem accelerates innovation'\n          ],\n          businessCase: 'Organizations report 3-5x faster ML deployment cycles and 30-40% higher model accuracy through integrated workflows.'\n        },\n        snowflake: {\n          summary: 'Growing AI capabilities with strength in data sharing and marketplace integrations that accelerate insights.',\n          strengths: [\n            'Marketplace access to third-party data and models',\n            'Native data sharing capabilities',\n            'Snowpark for data science workloads'\n          ],\n          businessCase: 'Organizations leveraging Snowflake data sharing report 30-40% faster time-to-insight through pre-built analytics assets.'\n        }\n      },\n      {\n        id: 'governance',\n        title: 'Governance & Compliance',\n        icon: '🔒',\n        singlestore: {\n          summary: 'Traditional database security model requiring more custom implementation for advanced governance needs.',\n          strengths: [\n            'Familiar security model for database professionals',\n            'Standard auditing capabilities',\n            'Deployment flexibility including on-premises for compliance'\n          ],\n          businessCase: 'Organizations with legacy compliance frameworks can typically adapt existing policies with minimal modification.'\n        },\n        databricks: {\n          summary: 'Comprehensive governance with Unity Catalog providing fine-grained controls and lineage tracking across multi-cloud environments.',\n          strengths: [\n            'Unity Catalog provides unified governance',\n            'End-to-end data lineage tracking',\n            'Fine-grained access controls down to row/column level'\n          ],\n          businessCase: 'Regulated enterprises report 50-70% reduction in governance overhead and audit preparation time.'\n        },\n        snowflake: {\n          summary: 'Strong security model with automated compliance features and comprehensive data protection capabilities.',\n          strengths: [\n            'Data masking and column-level security',\n            'Automated role-based access control',\n            'Time travel and fail-safe for data protection'\n          ],\n          businessCase: 'Organizations with complex compliance requirements report 40-60% reduction in compliance maintenance efforts.'\n        }\n      },\n      {\n        id: 'scalability',\n        title: 'Scalability & Future-Proofing',\n        icon: '📈',\n        singlestore: {\n          summary: 'Horizontal scaling requiring more planning but providing predictable performance for growing transaction volumes.',\n          strengths: [\n            'Predictable performance as you scale',\n            'Clear capacity planning model',\n            'Deployment flexibility across environments'\n          ],\n          businessCase: 'Organizations with steady, predictable growth can plan infrastructure costs with high accuracy over 3-5 year horizons.'\n        },\n        databricks: {\n          summary: 'Highly elastic scaling for variable workloads with cost optimization for growing data volumes, particularly for analytics and AI.',\n          strengths: [\n            '30-50% cost savings for variable workloads',\n            'Scale compute independently from storage',\n            'Auto-scaling clusters match resources to demand'\n          ],\n          businessCase: 'Organizations with rapidly growing data volumes report maintaining stable analytics costs despite 300-500% data growth.'\n        },\n        snowflake: {\n          summary: 'Most elastic multi-cluster approach with zero management overhead, optimized for unpredictable analytic workloads.',\n          strengths: [\n            'Multi-cluster warehouses for concurrent workloads',\n            'Zero-copy cloning for development and testing',\n            'Instant scaling with no performance impact'\n          ],\n          businessCase: 'Organizations with seasonality or unpredictable usage patterns report 40-60% reduction in peak capacity planning needs.'\n        }\n      }\n    ],\n    \n    industryGuidance: [\n      {\n        industry: 'Financial Services',\n        recommendation: 'Consider SingleStore for high-frequency trading and real-time risk applications where microsecond performance matters. Databricks is optimal for risk modeling, fraud detection, and AI-driven analytics. Snowflake works well for regulatory reporting and data sharing across business units.',\n        keyConsiderations: [\n          'Transaction latency requirements',\n          'Regulatory reporting and compliance',\n          'Model risk management capabilities',\n          'Real-time analytics needs'\n        ]\n      },\n      {\n        industry: 'Retail & E-commerce',\n        recommendation: 'Databricks provides the strongest foundation for personalization, demand forecasting, and customer analytics with AI capabilities. SingleStore excels for real-time inventory and order management systems. Snowflake is optimal for merchandising analytics and supplier data integration.',\n        keyConsiderations: [\n          'Real-time inventory requirements',\n          'Customer personalization needs',\n          'Supply chain analytics demands',\n          'Seasonal scalability requirements'\n        ]\n      },\n      {\n        industry: 'Healthcare',\n        recommendation: 'Snowflake offers the strongest compliance features for healthcare data and robust data sharing capabilities for research. Databricks excels for clinical analytics, patient outcome predictions, and medical research. SingleStore can power real-time monitoring systems for critical care.',\n        keyConsiderations: [\n          'HIPAA compliance requirements',\n          'Patient data privacy controls',\n          'Research collaboration needs',\n          'Real-time monitoring requirements'\n        ]\n      },\n      {\n        industry: 'Manufacturing',\n        recommendation: 'Databricks provides the most comprehensive platform for predictive maintenance, quality control analytics, and supply chain optimization. SingleStore excels for real-time production monitoring systems. Snowflake offers strong supplier data integration and operational analytics.',\n        keyConsiderations: [\n          'IoT data processing requirements',\n          'Predictive maintenance needs',\n          'Supply chain visibility',\n          'Quality control analytics'\n        ]\n      }\n    ],\n    \n    implementationConsiderations: {\n      singlestore: {\n        timeToValue: 'Typically 2-4 months for initial implementation',\n        skillsGap: 'Minimal for teams with SQL database experience',\n        enterpriseReadiness: 'Good fit for transaction-heavy organizations',\n        requiresSpecialists: 'Distributed SQL experts may be needed for large deployments'\n      },\n      databricks: {\n        timeToValue: 'Typically 3-6 months for full lakehouse implementation',\n        skillsGap: 'Larger for organizations without data science/engineering expertise',\n        enterpriseReadiness: 'Strong for analytics-focused organizations',\n        requiresSpecialists: 'Data engineers and data scientists needed for optimal use'\n      },\n      snowflake: {\n        timeToValue: 'Typically 1-3 months for initial data warehouse migration',\n        skillsGap: 'Minimal for SQL-proficient analytics teams',\n        enterpriseReadiness: 'Excellent for traditional BI and analytics organizations',\n        requiresSpecialists: 'Data warehouse experts beneficial but not required'\n      }\n    },\n    \n    organizationalFit: {\n      singlestore: {\n        bestFor: 'Organizations requiring high-performance transactional systems with some analytics capabilities',\n        challengesWith: 'Organizations primarily focused on BI/analytics with minimal transaction processing',\n        teamStructure: 'Traditional database teams with SQL expertise',\n        culturalAlignment: 'Performance-focused organizations with clear SLAs'\n      },\n      databricks: {\n        bestFor: 'Organizations focused on data science, ML/AI adoption, and advanced analytics',\n        challengesWith: 'Organizations without data science capabilities or exclusively OLTP-focused',\n        teamStructure: 'Cross-functional teams with data science, engineering, and analytics',\n        culturalAlignment: 'Innovation-driven organizations embracing open-source and ML/AI'\n      },\n      snowflake: {\n        bestFor: 'Organizations prioritizing analytics, BI, and cross-department data sharing',\n        challengesWith: 'Organizations requiring real-time transaction processing',\n        teamStructure: 'Traditional data warehouse and business intelligence teams',\n        culturalAlignment: 'Data democratization cultures with diverse analytics users'\n      }\n    },\n    \n    migrationConsiderations: {\n      fromTraditional: {\n        singlestore: {\n          complexity: 'Medium - similar to traditional database migration',\n          timeline: '3-6 months for complete migration',\n          challenges: 'Distribution design, memory optimization, application changes for full benefit',\n          businessContinuity: 'Can run in parallel with existing systems during cutover'\n        },\n        databricks: {\n          complexity: 'High - requires architectural transformation to lakehouse model',\n          timeline: '6-12 months for complete migration',\n          challenges: 'Data modeling changes, potential application rewrites, cultural shift',\n          businessContinuity: 'Can start with specific use cases while maintaining existing systems'\n        },\n        snowflake: {\n          complexity: 'Medium-Low - familiar data warehouse concepts',\n          timeline: '2-6 months for migration',\n          challenges: 'Optimizing for the cloud model, reconfiguring ETL processes',\n          businessContinuity: 'Straightforward parallel operations during migration'\n        }\n      }\n    }\n  };\n  \n  export default databaseExecutiveSummary;","import React, { useState } from 'react';\nimport databricksTerminology from '../data/databricksTerminology';\nimport databaseComparisonData from '../data/databaseComparisonData';\nimport databaseExecutiveSummary from '../data/databaseExecutiveSummary';\nimport '../styles/buttons.css';\n\nconst DatabaseComparison = () => {\n  // State to track which comparison is expanded\n  const [expandedItem, setExpandedItem] = useState(null);\n  // State for viewing mode\n  const [viewMode, setViewMode] = useState('all');\n  // State for platform filter\n  const [platformFilter, setPlatformFilter] = useState('all');\n  // State for showing the quick metrics column\n  const [showQuickMetrics, setShowQuickMetrics] = useState(true);\n  // New state for audience view type (technical vs executive)\n  const [audienceView, setAudienceView] = useState('technical');\n  // State for selected business priority in executive view\n  const [selectedPriority, setSelectedPriority] = useState('all');\n  // State for expanded business priority\n  const [expandedPriority, setExpandedPriority] = useState(null);\n  // State for expanded industry\n  const [expandedIndustry, setExpandedIndustry] = useState(null);\n\n  // Toggle expanded state\n  const toggleExpand = (id) => {\n    setExpandedItem(expandedItem === id ? null : id);\n  };\n\n  // Toggle expansion of a business priority\n  const togglePriorityExpansion = (priorityId) => {\n    setExpandedPriority(expandedPriority === priorityId ? null : priorityId);\n  };\n\n  // Toggle expansion of an industry guidance\n  const toggleIndustryExpansion = (industryIndex) => {\n    setExpandedIndustry(expandedIndustry === industryIndex ? null : industryIndex);\n  };\n\n  // Function to render the metrics badge\n  const renderMetricsBadge = (metrics) => {\n    if (!metrics) return null;\n    \n    let badgeColor = \"bg-gray-100 text-gray-800\";\n    let icon = \"⚖️\";\n    \n    if (metrics.winner === 'databricks') {\n      badgeColor = \"bg-purple-100 text-purple-800\";\n      icon = \"🔥\";\n    } else if (metrics.winner === 'singlestore') {\n      badgeColor = \"bg-blue-100 text-blue-800\";\n      icon = \"🔥\";\n    } else if (metrics.winner === 'snowflake') {\n      badgeColor = \"bg-cyan-100 text-cyan-800\";\n      icon = \"🔥\";\n    } else if (metrics.winner === 'conditional') {\n      badgeColor = \"bg-yellow-100 text-yellow-800\";\n      icon = \"⚖️\";\n    }\n    \n    return (\n      <div className={`rounded-full px-3 py-1 text-xs font-medium ${badgeColor} flex items-center`}>\n        <span className=\"mr-1\">{icon}</span>\n        {metrics.type === 'performance' ? 'Performance' : \n         metrics.type === 'cost' ? 'Cost Efficiency' : \n         metrics.type === 'efficiency' ? 'Efficiency' : \n         'Comparison'}\n      </div>\n    );\n  };\n\n  // Render business outcome tags for executive view\n  const renderBusinessOutcomeBadge = (outcome) => {\n    let badgeColor = \"bg-gray-100 text-gray-800\";\n    let icon = \"⭐\";\n    \n    if (outcome === 'total-cost') {\n      badgeColor = \"bg-green-100 text-green-800\";\n      icon = \"💰\";\n    } else if (outcome === 'time-to-value') {\n      badgeColor = \"bg-blue-100 text-blue-800\";\n      icon = \"🚀\";\n    } else if (outcome === 'innovation') {\n      badgeColor = \"bg-purple-100 text-purple-800\";\n      icon = \"💡\";\n    } else if (outcome === 'governance') {\n      badgeColor = \"bg-red-100 text-red-800\";\n      icon = \"🔒\";\n    } else if (outcome === 'scalability') {\n      badgeColor = \"bg-orange-100 text-orange-800\";\n      icon = \"📈\";\n    }\n    \n    return (\n      <div className={`rounded-full px-3 py-1 text-xs font-medium ${badgeColor} flex items-center`}>\n        <span className=\"mr-1\">{icon}</span>\n        {outcome === 'total-cost' ? 'TCO' : \n         outcome === 'time-to-value' ? 'Time to Value' : \n         outcome === 'innovation' ? 'Innovation' :\n         outcome === 'governance' ? 'Governance' :\n         outcome === 'scalability' ? 'Scalability' : \n         'Business Impact'}\n      </div>\n    );\n  };\n\n  // Function to extract the key metrics from the description\n  const getMetricsSummary = (item) => {\n    if (!item.metrics) return \"No comparative data available\";\n    \n    // Use the actual metrics description to extract key data points\n    const description = item.metrics.description;\n    let summaryText = \"\";\n    \n    if (item.metrics.winner === 'databricks') {\n      // Extract the Databricks-specific metric from the description\n      const databricksMatch = description.match(/Databricks:([^|]+)/);\n      if (databricksMatch && databricksMatch[1]) {\n        summaryText = `Winner: Databricks - ${databricksMatch[1].trim()}`;\n      } else {\n        summaryText = `Winner: Databricks - ${description}`;\n      }\n    } else if (item.metrics.winner === 'singlestore') {\n      // Extract the SingleStore-specific metric\n      const singlestoreMatch = description.match(/SingleStore:([^|]+)/);\n      if (singlestoreMatch && singlestoreMatch[1]) {\n        summaryText = `Winner: SingleStore - ${singlestoreMatch[1].trim()}`;\n      } else {\n        summaryText = `Winner: SingleStore - ${description}`;\n      }\n    } else if (item.metrics.winner === 'snowflake') {\n      // Extract the Snowflake-specific metric\n      const snowflakeMatch = description.match(/Snowflake:([^|]+)/);\n      if (snowflakeMatch && snowflakeMatch[1]) {\n        summaryText = `Winner: Snowflake - ${snowflakeMatch[1].trim()}`;\n      } else {\n        summaryText = `Winner: Snowflake - ${description}`;\n      }\n    } else if (item.metrics.winner === 'conditional') {\n      // For conditional, provide the specific conditions\n      if (item.id === 'use-case') {\n        summaryText = `OLTP: SingleStore (100x faster) | ML: Databricks (2-5x faster) | SQL: Snowflake (3-4x better concurrency)`;\n      } else if (item.id === 'scalability') {\n        summaryText = `Variable: Databricks (30-50% savings) | Elastic: Snowflake (20-40% lower overhead) | Predictable: SingleStore`;\n      } else if (item.id === 'streaming') {\n        summaryText = `Ingestion: SingleStore (1M+ rows/sec) | Processing: Databricks (2-3x throughput) | Snowflake (500K+ rows/sec)`;\n      } else if (item.id === 'data-storage') {\n        summaryText = `Small queries: SingleStore (10x faster) | Large data: Databricks (50-80% lower storage costs)`;\n      } else {\n        // Extract metrics with percentages\n        const percentMatches = description.match(/\\d+%|\\d+-\\d+%/g);\n        if (percentMatches && percentMatches.length > 0) {\n          summaryText = `Conditional advantage - Key metrics: ${percentMatches.join(', ')}`;\n        } else {\n          summaryText = description;\n        }\n      }\n    } else {\n      // For qualitative comparisons, use the original description\n      summaryText = description;\n    }\n    \n    return summaryText;\n  };\n\n  // Get a color class for the metric summary based on the winner\n  const getMetricsSummaryColor = (metrics) => {\n    if (!metrics) return \"text-gray-600\";\n    \n    if (metrics.winner === 'databricks') {\n      return \"text-purple-700\";\n    } else if (metrics.winner === 'singlestore') {\n      return \"text-blue-700\";\n    } else if (metrics.winner === 'snowflake') {\n      return \"text-cyan-700\";\n    } else {\n      return \"text-gray-600\";\n    }\n  };\n\n  // Filter the data based on the view mode\n  const filteredData = databaseComparisonData.filter(item => {\n    if (viewMode === 'all') return true;\n    if (viewMode === 'performance') return item.metrics?.type === 'performance';\n    if (viewMode === 'cost') return item.metrics?.type === 'cost';\n    if (viewMode === 'efficiency') return item.metrics?.type === 'efficiency';\n    return true;\n  });\n\n  // Group the filtered data by category\n  const groupedByCategory = filteredData.reduce((acc, item) => {\n    if (!acc[item.category]) {\n      acc[item.category] = [];\n    }\n    acc[item.category].push(item);\n    return acc;\n  }, {});\n\n  // Calculate widths based on platform filter and quick metrics\n  const getTitleWidth = () => {\n    if (showQuickMetrics) {\n      return platformFilter === 'all' ? 'w-1/5' : 'w-1/4';\n    } else {\n      return platformFilter === 'all' ? 'w-1/4' : 'w-1/3';\n    }\n  };\n\n  const getColumnWidth = () => {\n    if (showQuickMetrics) {\n      return platformFilter === 'all' ? 'w-1/5' : 'w-1/4';\n    } else {\n      return platformFilter === 'all' ? 'w-1/4' : 'w-1/3';\n    }\n  };\n\n  const getQuickMetricsWidth = () => {\n    return platformFilter === 'all' ? 'w-1/5' : 'w-1/4';\n  };\n\n  // Filter business priorities based on selected priority\n  const filteredPriorities = selectedPriority === 'all' \n    ? databaseExecutiveSummary.businessPriorities \n    : databaseExecutiveSummary.businessPriorities.filter(priority => priority.id === selectedPriority);\n\n  return (\n    <div>\n      {/* Header with blue-to-purple gradient */}\n      <div \n        className=\"bg-gradient-to-r from-blue-600 to-purple-600 p-6 rounded-xl shadow-lg mb-4 text-center\"\n      >\n        <h1 className=\"text-3xl font-bold text-white mb-2\">\n          Database Technology Comparison\n        </h1>\n        <p className=\"text-white/80\">\n          {audienceView === 'technical' ? \n            'SingleStore vs Databricks vs Snowflake for Data Engineering Teams' : \n            'Strategic Decision Framework for Data Platform Selection'}\n        </p>\n      </div>\n      \n      {/* Audience View Toggle - Technical vs Executive */}\n      <div className=\"bg-white rounded-lg shadow-md p-4 hover:shadow-xl transition-shadow mb-4\">\n        <h3 className=\"text-center text-sm font-medium text-gray-700 mb-3\">Audience View</h3>\n        <div className=\"flex justify-center\">\n          <div className=\"bg-gray-100 p-1 rounded-lg inline-flex\">\n            <button\n              onClick={() => setAudienceView('technical')}\n              className={`px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n                audienceView === 'technical'\n                  ? 'bg-blue-600 text-white'\n                  : 'text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              Technical Details\n            </button>\n            <button\n              onClick={() => setAudienceView('executive')}\n              className={`px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n                audienceView === 'executive'\n                  ? 'bg-blue-600 text-white'\n                  : 'text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              Executive Summary\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Conditional content based on selected view */}\n      {audienceView === 'technical' ? (\n        // TECHNICAL VIEW CONTENT\n        <>\n          {/* Filter buttons */}\n          <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow mb-4\">\n            <div className=\"flex justify-center flex-wrap\">\n              <button \n                onClick={() => setViewMode('all')}\n                className={`btn ${viewMode === 'all' ? 'btn-gradient' : 'btn-standard'}`}\n              >\n                All Comparisons\n              </button>\n              <button \n                onClick={() => setViewMode('performance')}\n                className={`btn ${viewMode === 'performance' ? 'btn-gradient' : 'btn-standard'}`}\n              >\n                Performance\n              </button>\n              <button \n                onClick={() => setViewMode('cost')}\n                className={`btn ${viewMode === 'cost' ? 'btn-gradient' : 'btn-standard'}`}\n              >\n                Cost Efficiency\n              </button>\n              <button \n                onClick={() => setViewMode('efficiency')}\n                className={`btn ${viewMode === 'efficiency' ? 'btn-gradient' : 'btn-standard'}`}\n              >\n                Development Efficiency\n              </button>\n              <button \n                onClick={() => setViewMode('terminology')}\n                className={`btn ${viewMode === 'terminology' ? 'btn-gradient' : 'btn-standard'}`}\n              >\n                Databricks Terms\n              </button>\n            </div>\n          </div>\n          \n          {/* Platform filter */}\n          <div className=\"bg-white rounded-lg shadow-md p-4 hover:shadow-xl transition-shadow mb-4\">\n            <h3 className=\"text-center text-sm font-medium text-gray-700 mb-3\">Compare Platforms</h3>\n            <div className=\"flex justify-center flex-wrap gap-2\">\n              <button \n                onClick={() => setPlatformFilter('all')}\n                className={`px-4 py-2 text-sm font-medium rounded-md ${platformFilter === 'all' ? 'bg-gray-800 text-white' : 'bg-gray-100 text-gray-800 hover:bg-gray-200'}`}\n              >\n                All\n              </button>\n              <button \n                onClick={() => setPlatformFilter('singlestore-databricks')}\n                className={`px-4 py-2 text-sm font-medium rounded-md ${platformFilter === 'singlestore-databricks' ? 'bg-indigo-600 text-white' : 'bg-indigo-50 text-indigo-600 hover:bg-indigo-100'}`}\n              >\n                SingleStore vs Databricks\n              </button>\n              <button \n                onClick={() => setPlatformFilter('databricks-snowflake')}\n                className={`px-4 py-2 text-sm font-medium rounded-md ${platformFilter === 'databricks-snowflake' ? 'bg-purple-600 text-white' : 'bg-purple-50 text-purple-600 hover:bg-purple-100'}`}\n              >\n                Databricks vs Snowflake\n              </button>\n              <button \n                onClick={() => setPlatformFilter('singlestore-snowflake')}\n                className={`px-4 py-2 text-sm font-medium rounded-md ${platformFilter === 'singlestore-snowflake' ? 'bg-cyan-600 text-white' : 'bg-cyan-50 text-cyan-600 hover:bg-cyan-100'}`}\n              >\n                SingleStore vs Snowflake\n              </button>\n            </div>\n          </div>\n          \n          {/* Quick metrics toggle */}\n          <div className=\"bg-white rounded-lg shadow-md p-4 hover:shadow-xl transition-shadow mb-8\">\n            <div className=\"flex justify-center items-center\">\n              <span className=\"mr-3 text-sm font-medium text-gray-700\">Show Key Metrics Summary:</span>\n              <button \n                onClick={() => setShowQuickMetrics(!showQuickMetrics)}\n                className={`relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 ${showQuickMetrics ? 'bg-blue-600' : 'bg-gray-200'}`}\n                role=\"switch\"\n                aria-checked={showQuickMetrics}\n              >\n                <span \n                  aria-hidden=\"true\" \n                  className={`${showQuickMetrics ? 'translate-x-5' : 'translate-x-0'} pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200`}\n                ></span>\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-xl transition-shadow\">\n            {viewMode === 'terminology' ? (\n              <div className=\"p-6\">\n                <h2 className=\"text-2xl font-semibold mb-4 text-center\">Databricks Terminology</h2>\n                <p className=\"mb-6 text-gray-700 text-center\">Quick reference guide to Databricks concepts and terminology for your team</p>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {databricksTerminology.map(item => (\n                    <div key={item.id} className=\"border rounded-lg overflow-hidden\">\n                      <div className=\"bg-purple-100 p-3 border-b\">\n                        <h3 className=\"font-medium text-purple-800\">{item.term}</h3>\n                      </div>\n                      <div className=\"p-4\">\n                        <div className=\"mb-3\">\n                          <div className=\"font-medium text-sm text-gray-700 mb-1\">Definition:</div>\n                          <p>{item.definition}</p>\n                        </div>\n                        \n                        <div className=\"mb-3\">\n                          <div className=\"font-medium text-sm text-gray-700 mb-1\">Example:</div>\n                          <p className=\"text-gray-700\">{item.example}</p>\n                        </div>\n                        \n                        <div>\n                          <div className=\"font-medium text-sm text-gray-700 mb-1\">Why It Matters:</div>\n                          <p className=\"text-gray-700\">{item.why}</p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              Object.entries(groupedByCategory).map(([category, items]) => (\n                <div key={category} className=\"border-b last:border-b-0\">\n                  <h2 className=\"bg-gray-100 font-semibold p-3 text-gray-700\">{category}</h2>\n                  \n                  {items.map((item) => (\n                    <div key={item.id} className=\"border-t border-gray-200 first:border-t-0\">\n                      <div \n                        className={`flex cursor-pointer hover:bg-gray-50 transition-colors ${expandedItem === item.id ? 'bg-blue-50' : ''}`}\n                        onClick={() => toggleExpand(item.id)}\n                      >\n                        {/* Feature Title Column */}\n                        <div className={`${getTitleWidth()} p-4 font-medium flex items-center`}>\n                          <div>\n                            {item.title}\n                            {item.metrics && (\n                              <div className=\"mt-2\">\n                                {renderMetricsBadge(item.metrics)}\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                        \n                        {/* Quick Metrics Summary Column - Now with data-driven summaries */}\n                        {showQuickMetrics && (\n                          <div className={`${getQuickMetricsWidth()} p-4 border-l border-r border-gray-200`}>\n                            <div className=\"text-sm text-gray-600 font-semibold\">Key Metrics</div>\n                            <div className={`mt-1 text-sm ${getMetricsSummaryColor(item.metrics)}`}>\n                              {getMetricsSummary(item)}\n                            </div>\n                          </div>\n                        )}\n                        \n                        {/* Platform specific cells - display based on platform filter */}\n                        {(platformFilter === 'all' || platformFilter === 'singlestore-databricks' || platformFilter === 'singlestore-snowflake') && (\n                          <div className={`${getColumnWidth()} p-4 border-l ${platformFilter === 'all' ? 'border-r' : ''} border-gray-200`}>\n                            <div className=\"text-sm text-blue-800 font-semibold\">SingleStore</div>\n                            <div className=\"mt-1\">{item.singlestore}</div>\n                          </div>\n                        )}\n                        \n                        {(platformFilter === 'all' || platformFilter === 'singlestore-databricks' || platformFilter === 'databricks-snowflake') && (\n                          <div className={`${getColumnWidth()} p-4 ${platformFilter !== 'all' ? 'border-l border-r' : ''} border-gray-200`}>\n                            <div className=\"text-sm text-purple-800 font-semibold\">Databricks</div>\n                            <div className=\"mt-1\">{item.databricks}</div>\n                          </div>\n                        )}\n                        \n                        {(platformFilter === 'all' || platformFilter === 'databricks-snowflake' || platformFilter === 'singlestore-snowflake') && (\n                          <div className={`${getColumnWidth()} p-4 ${platformFilter === 'all' ? 'border-l' : ''}`}>\n                            <div className=\"text-sm text-cyan-800 font-semibold\">Snowflake</div>\n                            <div className=\"mt-1\">{item.snowflake}</div>\n                          </div>\n                        )}\n                        \n                        <div className=\"flex items-center px-4\">\n                          <svg \n                            className={`w-5 h-5 text-gray-500 transition-transform ${expandedItem === item.id ? 'transform rotate-180' : ''}`} \n                            fill=\"none\" \n                            viewBox=\"0 0 24 24\" \n                            stroke=\"currentColor\"\n                          >\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                          </svg>\n                        </div>\n                      </div>\n                      \n                      {expandedItem === item.id && (\n                        <div className=\"p-4 bg-gray-50 border-t border-gray-200\">\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                              <h3 className=\"font-medium mb-2\">Detailed Comparison</h3>\n                              <p className=\"text-gray-700\">{item.details}</p>\n                            </div>\n                            \n                            {item.metrics && (\n                              <div className=\"bg-white p-4 rounded shadow-sm\">\n                                <h3 className=\"font-medium mb-2\">Performance & Efficiency Metrics</h3>\n                                <p className=\"text-gray-700 mb-2\">{item.metrics.description}</p>\n                                <p className=\"text-xs text-gray-500\">Source: {item.metrics.source}</p>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              ))\n            )}\n          </div>\n          \n          <div className=\"mt-6 bg-white p-6 rounded-lg shadow-md hover:shadow-xl transition-shadow\">\n            <h2 className=\"text-lg font-semibold text-gray-800 mb-2\">How to Use This Comparison</h2>\n            <p className=\"text-gray-700\">Click on any row to expand and see detailed information about that specific comparison point. Use the filter buttons above to focus on specific aspects or platform comparisons. The Key Metrics column highlights specific performance differences with percentage improvements where available.</p>\n            <div className=\"mt-4 bg-yellow-50 border border-yellow-200 p-3 rounded-lg\">\n              <p className=\"text-sm text-yellow-800\">\n                <strong>Note:</strong> Performance and cost metrics can vary significantly based on specific workloads, configurations, and deployment scenarios. These figures represent typical scenarios but your actual results may differ.\n              </p>\n            </div>\n          </div>\n        </>\n      ) : (\n        // EXECUTIVE VIEW CONTENT\n        <>\n          {/* Business Priority Filter */}\n          <div className=\"bg-white rounded-lg shadow-md p-4 hover:shadow-xl transition-shadow mb-4\">\n            <h3 className=\"text-center text-sm font-medium text-gray-700 mb-3\">Business Priority</h3>\n            <div className=\"flex justify-center flex-wrap gap-2\">\n              <button \n                onClick={() => setSelectedPriority('all')}\n                className={`px-4 py-2 text-sm font-medium rounded-md ${selectedPriority === 'all' ? 'bg-gray-800 text-white' : 'bg-gray-100 text-gray-800 hover:bg-gray-200'}`}\n              >\n                All Priorities\n              </button>\n              {databaseExecutiveSummary.businessPriorities.map(priority => (\n                <button \n                  key={priority.id}\n                  onClick={() => setSelectedPriority(priority.id)}\n                  className={`px-4 py-2 text-sm font-medium rounded-md flex items-center ${\n                    selectedPriority === priority.id \n                      ? 'bg-blue-600 text-white' \n                      : 'bg-blue-50 text-blue-600 hover:bg-blue-100'\n                  }`}\n                >\n                  <span className=\"mr-1\">{priority.icon}</span> {priority.title}\n                </button>\n              ))}\n            </div>\n          </div>\n          \n          {/* Executive Dashboard - High Level Platform Comparison */}\n          <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow mb-6\">\n            <h2 className=\"text-xl font-semibold mb-4 text-center\">Strategic Platform Fit</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n              {/* SingleStore */}\n              <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n                <h3 className=\"text-lg font-medium text-blue-800 mb-2\">SingleStore</h3>\n                <p className=\"text-gray-700 mb-3\">Best for organizations requiring high-performance transactional systems with some analytics capabilities.</p>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-blue-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">Fastest implementation for transaction-heavy applications</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-blue-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">Predictable pricing model for consistent workloads</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-blue-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">Flexible deployment options (cloud, on-premises, hybrid)</span>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Databricks */}\n              <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\n                <h3 className=\"text-lg font-medium text-purple-800 mb-2\">Databricks</h3>\n                <p className=\"text-gray-700 mb-3\">Best for organizations focused on data science, ML/AI adoption, and advanced analytics capabilities.</p>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-purple-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">Superior machine learning and AI capability integration</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-purple-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">Most cost-effective for growing data volumes</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-purple-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">Comprehensive governance with Unity Catalog</span>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Snowflake */}\n              <div className=\"bg-cyan-50 p-4 rounded-lg border border-cyan-200\">\n                <h3 className=\"text-lg font-medium text-cyan-800 mb-2\">Snowflake</h3>\n                <p className=\"text-gray-700 mb-3\">Best for organizations prioritizing analytics, BI, and cross-department data sharing capabilities.</p>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-cyan-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-cyan-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">Most transparent pay-as-you-go pricing model</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-cyan-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-cyan-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">Minimal administration and automatic optimization</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-cyan-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-cyan-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">Superior data sharing and marketplace capabilities</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Business Priorities Section */}\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-xl transition-shadow mb-4\">\n            <h2 className=\"bg-gray-100 font-semibold p-3 text-gray-700\">Business Priorities Comparison</h2>\n            \n            {filteredPriorities.map((priority) => (\n              <div key={priority.id} className=\"border-t border-gray-200\">\n                <div \n                  className={`flex cursor-pointer hover:bg-gray-50 transition-colors ${expandedPriority === priority.id ? 'bg-blue-50' : ''}`}\n                  onClick={() => togglePriorityExpansion(priority.id)}\n                >\n                  <div className=\"w-1/4 p-4 font-medium flex items-center\">\n                    <div className=\"flex items-center\">\n                      <span className=\"text-2xl mr-2\">{priority.icon}</span>\n                      <span>{priority.title}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"w-1/4 p-4 border-l border-r border-gray-200\">\n                    <div className=\"text-sm text-blue-800 font-semibold\">SingleStore</div>\n                    <div className=\"mt-1 text-sm\">{priority.singlestore.summary}</div>\n                  </div>\n                  \n                  <div className=\"w-1/4 p-4 border-r border-gray-200\">\n                    <div className=\"text-sm text-purple-800 font-semibold\">Databricks</div>\n                    <div className=\"mt-1 text-sm\">{priority.databricks.summary}</div>\n                  </div>\n\n                  <div className=\"w-1/4 p-4\">\n                    <div className=\"text-sm text-cyan-800 font-semibold\">Snowflake</div>\n                    <div className=\"mt-1 text-sm\">{priority.snowflake.summary}</div>\n                  </div>\n                  \n                  <div className=\"flex items-center px-4\">\n                    <svg \n                      className={`w-5 h-5 text-gray-500 transition-transform ${expandedPriority === priority.id ? 'transform rotate-180' : ''}`} \n                      fill=\"none\" \n                      viewBox=\"0 0 24 24\" \n                      stroke=\"currentColor\"\n                    >\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </div>\n                </div>\n                \n                {expandedPriority === priority.id && (\n                  <div className=\"p-4 bg-gray-50 border-t border-gray-200\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      <div>\n                        <h3 className=\"font-medium mb-2 text-blue-800\">SingleStore</h3>\n                        <ul className=\"list-disc pl-5 space-y-1 text-gray-700\">\n                          {priority.singlestore.strengths.map((strength, idx) => (\n                            <li key={`singlestore-strength-${idx}`}>{strength}</li>\n                          ))}\n                        </ul>\n                        <div className=\"mt-3 p-3 bg-blue-50 rounded-lg\">\n                          <h4 className=\"font-medium text-blue-800 text-sm\">Business Case</h4>\n                          <p className=\"text-sm text-gray-700 mt-1\">{priority.singlestore.businessCase}</p>\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <h3 className=\"font-medium mb-2 text-purple-800\">Databricks</h3>\n                        <ul className=\"list-disc pl-5 space-y-1 text-gray-700\">\n                          {priority.databricks.strengths.map((strength, idx) => (\n                            <li key={`databricks-strength-${idx}`}>{strength}</li>\n                          ))}\n                        </ul>\n                        <div className=\"mt-3 p-3 bg-purple-50 rounded-lg\">\n                          <h4 className=\"font-medium text-purple-800 text-sm\">Business Case</h4>\n                          <p className=\"text-sm text-gray-700 mt-1\">{priority.databricks.businessCase}</p>\n                        </div>\n                      </div>\n\n                      <div>\n                        <h3 className=\"font-medium mb-2 text-cyan-800\">Snowflake</h3>\n                        <ul className=\"list-disc pl-5 space-y-1 text-gray-700\">\n                          {priority.snowflake.strengths.map((strength, idx) => (\n                            <li key={`snowflake-strength-${idx}`}>{strength}</li>\n                          ))}\n                        </ul>\n                        <div className=\"mt-3 p-3 bg-cyan-50 rounded-lg\">\n                          <h4 className=\"font-medium text-cyan-800 text-sm\">Business Case</h4>\n                          <p className=\"text-sm text-gray-700 mt-1\">{priority.snowflake.businessCase}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n          \n          {/* Industry Guidance Section */}\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-xl transition-shadow mb-4\">\n            <h2 className=\"bg-gray-100 font-semibold p-3 text-gray-700\">Industry-Specific Guidance</h2>\n            \n            {databaseExecutiveSummary.industryGuidance.map((industry, idx) => (\n              <div key={`industry-${idx}`} className=\"border-t border-gray-200\">\n                <div \n                  className={`flex cursor-pointer hover:bg-gray-50 transition-colors ${expandedIndustry === idx ? 'bg-purple-50' : ''}`}\n                  onClick={() => toggleIndustryExpansion(idx)}\n                >\n                  <div className=\"w-1/4 p-4 font-medium\">\n                    {industry.industry}\n                  </div>\n                  \n                  <div className=\"w-3/4 p-4 border-l border-gray-200\">\n                    <div className=\"text-sm text-gray-700\">{industry.recommendation}</div>\n                  </div>\n                  \n                  <div className=\"flex items-center px-4\">\n                    <svg \n                      className={`w-5 h-5 text-gray-500 transition-transform ${expandedIndustry === idx ? 'transform rotate-180' : ''}`} \n                      fill=\"none\" \n                      viewBox=\"0 0 24 24\" \n                      stroke=\"currentColor\"\n                    >\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </div>\n                </div>\n                \n                {expandedIndustry === idx && (\n                  <div className=\"p-4 bg-gray-50 border-t border-gray-200\">\n                    <h3 className=\"font-medium mb-2\">Key Considerations</h3>\n                    <ul className=\"list-disc pl-5 space-y-1 text-gray-700\">\n                      {industry.keyConsiderations.map((consideration, cidx) => (\n                        <li key={`consideration-${idx}-${cidx}`}>{consideration}</li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n          \n          {/* Implementation Considerations */}\n          <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow mb-4\">\n            <h2 className=\"text-xl font-semibold mb-4 text-center\">Implementation Considerations</h2>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-100\">\n                <h3 className=\"font-medium text-blue-800 mb-2\">SingleStore</h3>\n                <div className=\"space-y-2 text-sm text-gray-700\">\n                  <p><span className=\"font-medium\">Time to Value:</span> {databaseExecutiveSummary.implementationConsiderations.singlestore.timeToValue}</p>\n                  <p><span className=\"font-medium\">Skills Gap:</span> {databaseExecutiveSummary.implementationConsiderations.singlestore.skillsGap}</p>\n                  <p><span className=\"font-medium\">Enterprise Readiness:</span> {databaseExecutiveSummary.implementationConsiderations.singlestore.enterpriseReadiness}</p>\n                  <p><span className=\"font-medium\">Specialist Requirements:</span> {databaseExecutiveSummary.implementationConsiderations.singlestore.requiresSpecialists}</p>\n                </div>\n              </div>\n              \n              <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-100\">\n                <h3 className=\"font-medium text-purple-800 mb-2\">Databricks</h3>\n                <div className=\"space-y-2 text-sm text-gray-700\">\n                  <p><span className=\"font-medium\">Time to Value:</span> {databaseExecutiveSummary.implementationConsiderations.databricks.timeToValue}</p>\n                  <p><span className=\"font-medium\">Skills Gap:</span> {databaseExecutiveSummary.implementationConsiderations.databricks.skillsGap}</p>\n                  <p><span className=\"font-medium\">Enterprise Readiness:</span> {databaseExecutiveSummary.implementationConsiderations.databricks.enterpriseReadiness}</p>\n                  <p><span className=\"font-medium\">Specialist Requirements:</span> {databaseExecutiveSummary.implementationConsiderations.databricks.requiresSpecialists}</p>\n                </div>\n              </div>\n              \n              <div className=\"bg-cyan-50 p-4 rounded-lg border border-cyan-100\">\n                <h3 className=\"font-medium text-cyan-800 mb-2\">Snowflake</h3>\n                <div className=\"space-y-2 text-sm text-gray-700\">\n                  <p><span className=\"font-medium\">Time to Value:</span> {databaseExecutiveSummary.implementationConsiderations.snowflake.timeToValue}</p>\n                  <p><span className=\"font-medium\">Skills Gap:</span> {databaseExecutiveSummary.implementationConsiderations.snowflake.skillsGap}</p>\n                  <p><span className=\"font-medium\">Enterprise Readiness:</span> {databaseExecutiveSummary.implementationConsiderations.snowflake.enterpriseReadiness}</p>\n                  <p><span className=\"font-medium\">Specialist Requirements:</span> {databaseExecutiveSummary.implementationConsiderations.snowflake.requiresSpecialists}</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"mt-6 p-4 bg-gray-50 rounded-lg border border-gray-200\">\n              <h3 className=\"font-medium text-gray-800 mb-2\">Migration from Traditional Database Systems</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n                <div>\n                  <h4 className=\"font-medium text-blue-800 mb-1\">SingleStore</h4>\n                  <p><span className=\"font-medium\">Complexity:</span> {databaseExecutiveSummary.migrationConsiderations.fromTraditional.singlestore.complexity}</p>\n                  <p><span className=\"font-medium\">Timeline:</span> {databaseExecutiveSummary.migrationConsiderations.fromTraditional.singlestore.timeline}</p>\n                  <p><span className=\"font-medium\">Key Challenges:</span> {databaseExecutiveSummary.migrationConsiderations.fromTraditional.singlestore.challenges}</p>\n                </div>\n                \n                <div>\n                  <h4 className=\"font-medium text-purple-800 mb-1\">Databricks</h4>\n                  <p><span className=\"font-medium\">Complexity:</span> {databaseExecutiveSummary.migrationConsiderations.fromTraditional.databricks.complexity}</p>\n                  <p><span className=\"font-medium\">Timeline:</span> {databaseExecutiveSummary.migrationConsiderations.fromTraditional.databricks.timeline}</p>\n                  <p><span className=\"font-medium\">Key Challenges:</span> {databaseExecutiveSummary.migrationConsiderations.fromTraditional.databricks.challenges}</p>\n                </div>\n                \n                <div>\n                  <h4 className=\"font-medium text-cyan-800 mb-1\">Snowflake</h4>\n                  <p><span className=\"font-medium\">Complexity:</span> {databaseExecutiveSummary.migrationConsiderations.fromTraditional.snowflake.complexity}</p>\n                  <p><span className=\"font-medium\">Timeline:</span> {databaseExecutiveSummary.migrationConsiderations.fromTraditional.snowflake.timeline}</p>\n                  <p><span className=\"font-medium\">Key Challenges:</span> {databaseExecutiveSummary.migrationConsiderations.fromTraditional.snowflake.challenges}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Organizational Fit Section */}\n          <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow\">\n            <h2 className=\"text-xl font-semibold mb-4 text-center\">Organizational Fit Assessment</h2>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n                <h3 className=\"font-medium text-blue-800 mb-2\">SingleStore Profile</h3>\n                <div className=\"space-y-3 text-sm\">\n                  <div>\n                    <p className=\"font-medium text-gray-700\">Best Fit For</p>\n                    <p className=\"text-gray-600\">{databaseExecutiveSummary.organizationalFit.singlestore.bestFor}</p>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-700\">Challenges With</p>\n                    <p className=\"text-gray-600\">{databaseExecutiveSummary.organizationalFit.singlestore.challengesWith}</p>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-700\">Team Structure</p>\n                    <p className=\"text-gray-600\">{databaseExecutiveSummary.organizationalFit.singlestore.teamStructure}</p>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-700\">Cultural Alignment</p>\n                    <p className=\"text-gray-600\">{databaseExecutiveSummary.organizationalFit.singlestore.culturalAlignment}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n                <h3 className=\"font-medium text-purple-800 mb-2\">Databricks Profile</h3>\n                <div className=\"space-y-3 text-sm\">\n                  <div>\n                    <p className=\"font-medium text-gray-700\">Best Fit For</p>\n                    <p className=\"text-gray-600\">{databaseExecutiveSummary.organizationalFit.databricks.bestFor}</p>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-700\">Challenges With</p>\n                    <p className=\"text-gray-600\">{databaseExecutiveSummary.organizationalFit.databricks.challengesWith}</p>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-700\">Team Structure</p>\n                    <p className=\"text-gray-600\">{databaseExecutiveSummary.organizationalFit.databricks.teamStructure}</p>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-700\">Cultural Alignment</p>\n                    <p className=\"text-gray-600\">{databaseExecutiveSummary.organizationalFit.databricks.culturalAlignment}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n                <h3 className=\"font-medium text-cyan-800 mb-2\">Snowflake Profile</h3>\n                <div className=\"space-y-3 text-sm\">\n                  <div>\n                    <p className=\"font-medium text-gray-700\">Best Fit For</p>\n                    <p className=\"text-gray-600\">{databaseExecutiveSummary.organizationalFit.snowflake.bestFor}</p>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-700\">Challenges With</p>\n                    <p className=\"text-gray-600\">{databaseExecutiveSummary.organizationalFit.snowflake.challengesWith}</p>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-700\">Team Structure</p>\n                    <p className=\"text-gray-600\">{databaseExecutiveSummary.organizationalFit.snowflake.teamStructure}</p>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-700\">Cultural Alignment</p>\n                    <p className=\"text-gray-600\">{databaseExecutiveSummary.organizationalFit.snowflake.culturalAlignment}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default DatabaseComparison;","// Data for the engineering glossary\nconst glossaryData = [\n  // FUNDAMENTAL DATA CONCEPTS\n  {\n    category: 'fundamental',\n    term: 'Bit',\n    definition: 'The smallest unit of data, representing a single binary value (0 or 1)',\n    example: 'The number 5 is represented as 101 in binary (4+0+1)',\n    aws: '-',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'fundamental',\n    term: 'Byte',\n    definition: 'A unit of digital information consisting of 8 bits',\n    example: 'The letter \\'A\\' is stored as the byte 01000001 in ASCII encoding',\n    aws: '-',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'fundamental',\n    term: 'Data Type',\n    definition: 'Classification that specifies which type of value a variable has',\n    example: 'Integer: 42, String: \"hello\", Float: 3.14, Boolean: true',\n    aws: '-',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'fundamental',\n    term: 'Structured Data',\n    definition: 'Data that adheres to a pre-defined data model',\n    example: 'Customer records in a database table with fixed columns',\n    aws: 'RDS, DynamoDB',\n    azure: 'Azure SQL DB, Cosmos DB',\n    other: 'Snowflake, MongoDB'\n  },\n  {\n    category: 'fundamental',\n    term: 'Unstructured Data',\n    definition: 'Data that doesn\\'t follow a specific format',\n    example: 'Customer support emails, social media posts, videos',\n    aws: 'S3',\n    azure: 'Blob Storage',\n    other: 'GCS, Hadoop HDFS'\n  },\n  {\n    category: 'fundamental',\n    term: 'Semi-structured Data',\n    definition: 'Data that doesn\\'t conform to a rigid structure but has tags',\n    example: 'JSON payment data with varying fields per transaction',\n    aws: 'DynamoDB, DocumentDB',\n    azure: 'Cosmos DB',\n    other: 'MongoDB, Couchbase'\n  },\n  \n  // STORAGE & COMPUTING CONCEPTS\n  {\n    category: 'storage',\n    term: 'RAM',\n    definition: 'Temporary working memory for active datasets',\n    example: 'SQL query on 4GB of customer data requires at least 4GB RAM',\n    aws: 'EC2 Memory Optimized',\n    azure: 'Azure VM D-series',\n    other: '-'\n  },\n  {\n    category: 'storage',\n    term: 'Disk Storage',\n    definition: 'Persistent storage medium for data',\n    example: 'Transaction logs stored on SSD for long-term retention',\n    aws: 'EBS, S3',\n    azure: 'Managed Disks, Blob Storage',\n    other: 'Google Persistent Disk'\n  },\n  {\n    category: 'storage',\n    term: 'SIMD Processing',\n    definition: 'CPU technique to process multiple data values in a single operation',\n    example: 'Comparing 256 transaction amounts to a threshold at once',\n    aws: '-',\n    azure: '-',\n    other: 'Intel AVX, ARM Neon'\n  },\n  {\n    category: 'storage',\n    term: 'Vectorized Execution',\n    definition: 'Processing batches of data at once rather than row-by-row',\n    example: 'Calculating average of 1000 transactions in a single operation',\n    aws: 'Redshift',\n    azure: 'Synapse Analytics',\n    other: 'Databricks Photon, Snowflake'\n  },\n  \n  // FILE FORMATS & DATA SERIALIZATION\n  {\n    category: 'file',\n    term: 'CSV',\n    definition: 'Comma-separated values, simple text format for tabular data',\n    example: 'name,age,email\\\\nJohn,30,john@example.com',\n    aws: '-',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'file',\n    term: 'JSON',\n    definition: 'JavaScript Object Notation, lightweight data-interchange format',\n    example: '{\"customer\": {\"name\": \"John\", \"orders\": [{\"id\": 1}]}}',\n    aws: '-',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'file',\n    term: 'Parquet',\n    definition: 'Columnar storage file format that compresses data',\n    example: 'A 100GB dataset reduced to 20GB with faster query times',\n    aws: 'AWS Glue, Athena',\n    azure: 'Synapse Analytics',\n    other: 'Databricks, Snowflake'\n  },\n  {\n    category: 'file',\n    term: 'Avro',\n    definition: 'Row-based storage format with schema definition',\n    example: 'Payment transactions with enforced data types',\n    aws: 'MSK (Kafka), Glue',\n    azure: 'HDInsight, Event Hubs',\n    other: 'Confluent Kafka, Databricks'\n  },\n  {\n    category: 'file',\n    term: 'ORC',\n    definition: 'Optimized Row Columnar format, optimized for Hive',\n    example: 'Data warehouse tables storing billions of transactions',\n    aws: 'EMR, Athena',\n    azure: 'HDInsight, Synapse',\n    other: 'Databricks, Hive'\n  },\n  {\n    category: 'file',\n    term: 'Delta Format',\n    definition: 'Open-source format that adds ACID transactions to Parquet',\n    example: 'Multiple data scientists updating the same dataset without conflicts',\n    aws: '-',\n    azure: '-',\n    other: 'Databricks Delta Lake'\n  },\n  \n  // DATABASE CONCEPTS\n  {\n    category: 'database',\n    term: 'RDBMS',\n    definition: 'Relational Database Management System',\n    example: 'PostgreSQL storing customer information in tables',\n    aws: 'RDS, Aurora',\n    azure: 'Azure SQL DB',\n    other: 'Oracle, MySQL, PostgreSQL'\n  },\n  {\n    category: 'database',\n    term: 'NoSQL',\n    definition: 'Database design for non-tabular data models',\n    example: 'Storing customer profiles as flexible JSON documents',\n    aws: 'DynamoDB, DocumentDB',\n    azure: 'Cosmos DB',\n    other: 'MongoDB, Cassandra'\n  },\n  {\n    category: 'database',\n    term: 'OLTP',\n    definition: 'Online Transaction Processing systems',\n    example: 'Payment processing system handling 1000+ TPS',\n    aws: 'RDS, Aurora',\n    azure: 'Azure SQL DB',\n    other: 'Oracle, MySQL'\n  },\n  {\n    category: 'database',\n    term: 'OLAP',\n    definition: 'Online Analytical Processing systems',\n    example: 'Data warehouse generating quarterly reports',\n    aws: 'Redshift',\n    azure: 'Synapse Analytics',\n    other: 'Snowflake, Teradata'\n  },\n  {\n    category: 'database',\n    term: 'Column Storage',\n    definition: 'Storing data by organizing each column separately',\n    example: 'Storing all transaction amounts together for fast aggregation',\n    aws: 'Redshift',\n    azure: 'Synapse Analytics',\n    other: 'Snowflake, ClickHouse'\n  },\n  {\n    category: 'database',\n    term: 'Row Storage',\n    definition: 'Traditional storage method organizing data by rows',\n    example: 'Customer records stored as complete rows',\n    aws: 'RDS, Aurora',\n    azure: 'Azure SQL DB',\n    other: 'MySQL, PostgreSQL'\n  },\n  {\n    category: 'database',\n    term: 'Primary Key (PK)',\n    definition: 'Unique identifier column',\n    example: 'transaction_id in the transaction table',\n    aws: '-',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'database',\n    term: 'Foreign Key (FK)',\n    definition: 'Column that references a primary key in another table',\n    example: 'merchant_id in transactions table',\n    aws: '-',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'database',\n    term: 'Shard',\n    definition: 'A horizontal partition of data',\n    example: 'Customer data split across servers by region',\n    aws: 'DynamoDB, DocumentDB',\n    azure: 'Cosmos DB, SQL DB',\n    other: 'MongoDB Atlas, Citus'\n  },\n  {\n    category: 'database',\n    term: 'Partition',\n    definition: 'Division of a logical database into distinct parts',\n    example: 'Transaction table partitioned by month',\n    aws: 'Redshift, S3',\n    azure: 'Synapse, ADLS',\n    other: 'Snowflake, Hive'\n  },\n\n  // DATA MODELING CONCEPTS\n  {\n    category: 'modeling',\n    term: 'Schema',\n    definition: 'Structure that defines how data is organized',\n    example: 'Payment system tables for transactions, customers, merchants',\n    aws: 'Glue Data Catalog',\n    azure: 'Azure Purview',\n    other: 'Alation, Collibra'\n  },\n  {\n    category: 'modeling',\n    term: 'Star Schema',\n    definition: 'Dimensional model with a central fact table',\n    example: 'Transaction facts connected to customer, date dimensions',\n    aws: 'Redshift',\n    azure: 'Synapse Analytics',\n    other: 'Snowflake, BigQuery'\n  },\n  {\n    category: 'modeling',\n    term: 'Snowflake Schema',\n    definition: 'Extension of star schema with normalized dimensions',\n    example: 'Customer dimension normalized into details and address tables',\n    aws: 'Redshift',\n    azure: 'Synapse Analytics',\n    other: 'Snowflake, Oracle'\n  },\n  {\n    category: 'modeling',\n    term: 'Dimensional Modeling',\n    definition: 'Organizing data into measures and dimensions',\n    example: 'Payment amounts (measures) by time, location (dimensions)',\n    aws: '-',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'modeling',\n    term: 'Data Vault',\n    definition: 'Enterprise data warehouse modeling methodology',\n    example: 'Hubs, links, and satellites for payment data',\n    aws: '-',\n    azure: '-',\n    other: '-'\n  },\n  \n  // DATA WAREHOUSE & LAKES\n  {\n    category: 'warehouse',\n    term: 'Data Warehouse',\n    definition: 'Repository for structured, filtered data',\n    example: 'Cleaned transaction data optimized for reporting',\n    aws: 'Redshift',\n    azure: 'Synapse Analytics',\n    other: 'Snowflake, BigQuery'\n  },\n  {\n    category: 'warehouse',\n    term: 'Data Lake',\n    definition: 'Repository for vast amounts of raw data',\n    example: 'S3 bucket with clickstream, logs, and customer interactions',\n    aws: 'S3 + Lake Formation',\n    azure: 'ADLS Gen2',\n    other: 'GCS + Dataproc'\n  },\n  {\n    category: 'warehouse',\n    term: 'Data Lakehouse',\n    definition: 'Hybrid approach combining lake storage with warehouse functionality',\n    example: 'Analyzing both structured and raw logs',\n    aws: 'Redshift Spectrum',\n    azure: 'Synapse Analytics',\n    other: 'Databricks Lakehouse'\n  },\n  {\n    category: 'warehouse',\n    term: 'ETL',\n    definition: 'Extract, Transform, Load process',\n    example: 'Extracting payment data, standardizing formats',\n    aws: 'Glue, Data Pipeline',\n    azure: 'Data Factory',\n    other: 'Informatica, Talend'\n  },\n  {\n    category: 'warehouse',\n    term: 'ELT',\n    definition: 'Extract, Load, Transform variation',\n    example: 'Loading raw logs to lake, transforming with SQL',\n    aws: 'Glue, Athena',\n    azure: 'Data Factory, Synapse',\n    other: 'Databricks, dbt'\n  },\n  {\n    category: 'warehouse',\n    term: 'Data Mart',\n    definition: 'Subset of a data warehouse for a specific business line',\n    example: 'Finance-specific view focused on revenue and chargebacks',\n    aws: 'Redshift',\n    azure: 'Synapse Analytics',\n    other: 'Snowflake'\n  },\n  \n  // DATA PROCESSING CONCEPTS\n  {\n    category: 'processing',\n    term: 'Batch Processing',\n    definition: 'Processing data in large groups at intervals',\n    example: 'Daily job processing previous day\\'s transactions',\n    aws: 'Batch, EMR',\n    azure: 'Batch Service, HDInsight',\n    other: 'Databricks, Spark'\n  },\n  {\n    category: 'processing',\n    term: 'Stream Processing',\n    definition: 'Processing data continuously as it\\'s generated',\n    example: 'Real-time fraud detection for each transaction',\n    aws: 'Kinesis, MSK',\n    azure: 'Event Hubs, Stream Analytics',\n    other: 'Kafka, Flink'\n  },\n  {\n    category: 'processing',\n    term: 'Micro-batch',\n    definition: 'Processing data in small, near-continuous batches',\n    example: 'Aggregating transactions in 5-minute windows',\n    aws: 'Kinesis',\n    azure: 'Stream Analytics',\n    other: 'Spark Structured Streaming'\n  },\n  {\n    category: 'processing',\n    term: 'Real-time Processing',\n    definition: 'Processing data immediately as it arrives',\n    example: 'Instant payment notification to customer',\n    aws: 'Lambda + Kinesis',\n    azure: 'Functions + Event Hubs',\n    other: 'Flink, Kafka Streams'\n  },\n  {\n    category: 'processing',\n    term: 'MapReduce',\n    definition: 'Programming model for large distributed data processing',\n    example: 'Counting occurrences of each product in transactions',\n    aws: 'EMR',\n    azure: 'HDInsight',\n    other: 'Hadoop, Spark'\n  },\n  {\n    category: 'processing',\n    term: 'DAG (Directed Acyclic Graph)',\n    definition: 'Workflow with task dependencies',\n    example: 'ETL pipeline showing validation before transformation',\n    aws: 'Step Functions',\n    azure: 'Logic Apps',\n    other: 'Airflow, Prefect, Dagster'\n  },\n  \n  // CLOUD & DISTRIBUTED COMPUTING\n  {\n    category: 'cloud',\n    term: 'Distributed Computing',\n    definition: 'System with components on different networked computers',\n    example: 'Payment processing across multiple servers',\n    aws: '-',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'cloud',\n    term: 'Horizontal Scaling',\n    definition: 'Adding more machines to handle increased load',\n    example: 'Adding 5 new database servers for Black Friday',\n    aws: 'Auto Scaling Groups',\n    azure: 'VMSS',\n    other: 'Kubernetes'\n  },\n  {\n    category: 'cloud',\n    term: 'Vertical Scaling',\n    definition: 'Adding more power to an existing machine',\n    example: 'Upgrading analytics server from 16GB to 64GB RAM',\n    aws: 'EC2 Instance Resize',\n    azure: 'VM Resize',\n    other: '-'\n  },\n  {\n    category: 'cloud',\n    term: 'Container',\n    definition: 'Lightweight, standalone executable package',\n    example: 'Payment microservice in Docker container',\n    aws: 'ECS, EKS',\n    azure: 'AKS, Container Instances',\n    other: 'Docker, Kubernetes'\n  },\n  {\n    category: 'cloud',\n    term: 'Kubernetes',\n    definition: 'System for managing containerized applications',\n    example: 'Auto-scaling payment containers based on volume',\n    aws: 'EKS',\n    azure: 'AKS',\n    other: 'GKE, OpenShift'\n  },\n  {\n    category: 'cloud',\n    term: 'Microservices',\n    definition: 'Application as collection of loosely coupled services',\n    example: 'Separate services for payment processing, fraud detection',\n    aws: 'ECS, EKS, Lambda',\n    azure: 'AKS, Functions',\n    other: 'Kubernetes, Docker'\n  },\n  \n  // DATABRICKS CORE CONCEPTS\n  {\n    category: 'databricks',\n    term: 'Delta Lake',\n    definition: 'Storage layer with ACID transactions for big data',\n    example: 'Two analysts updating the same dataset without conflicts',\n    aws: '-',\n    azure: '-',\n    other: 'Databricks Delta Lake'\n  },\n  {\n    category: 'databricks',\n    term: 'Medallion Architecture',\n    definition: 'Bronze (raw), Silver (validated), Gold (aggregated) layers',\n    example: 'Raw JSON payments in Bronze, cleansed in Silver, summaries in Gold',\n    aws: '-',\n    azure: '-',\n    other: 'Databricks'\n  },\n  {\n    category: 'databricks',\n    term: 'Lakehouse',\n    definition: 'Hybrid architecture combining lake storage with warehouse functionality',\n    example: 'Petabytes of raw data with SQL query capabilities',\n    aws: '-',\n    azure: '-',\n    other: 'Databricks Lakehouse'\n  },\n  {\n    category: 'databricks',\n    term: 'Unity Catalog',\n    definition: 'Unified governance layer with fine-grained access controls',\n    example: 'Restricting PII access while allowing aggregate metrics',\n    aws: 'Glue/Lake Formation',\n    azure: 'Purview',\n    other: 'Databricks Unity Catalog'\n  },\n  {\n    category: 'databricks',\n    term: 'Photon Engine',\n    definition: 'C++ vectorized query engine for Spark',\n    example: 'Complex query running 5x faster with Photon',\n    aws: '-',\n    azure: '-',\n    other: 'Databricks Photon'\n  },\n  {\n    category: 'databricks',\n    term: 'Delta Live Tables (DLT)',\n    definition: 'Framework for reliable pipelines with quality controls',\n    example: 'Enforcing \"all transaction_ids must be unique\" rule',\n    aws: '-',\n    azure: '-',\n    other: 'Databricks DLT'\n  },\n  {\n    category: 'databricks',\n    term: 'MLflow',\n    definition: 'Platform for managing the ML lifecycle',\n    example: 'Tracking fraud detection model development parameters',\n    aws: 'SageMaker',\n    azure: 'Azure ML',\n    other: 'MLflow, Weights & Biases'\n  },\n  {\n    category: 'databricks',\n    term: 'Structured Streaming',\n    definition: 'Spark API for continuous data processing',\n    example: 'Processing payment events in real-time, updating models',\n    aws: '-',\n    azure: '-',\n    other: 'Spark Structured Streaming'\n  },\n  {\n    category: 'databricks',\n    term: 'Z-Ordering',\n    definition: 'Technique that co-locates related data for faster queries',\n    example: 'Z-ordering by date and merchant_id for 10-100x speed',\n    aws: '-',\n    azure: '-',\n    other: 'Databricks'\n  },\n  {\n    category: 'databricks',\n    term: 'DBUs (Databricks Units)',\n    definition: 'Billing units for compute resources',\n    example: '4-core cluster consuming 0.75 DBUs per hour',\n    aws: '-',\n    azure: '-',\n    other: 'Databricks'\n  },\n  {\n    category: 'databricks',\n    term: 'Notebooks',\n    definition: 'Interactive documents with code, visualizations, markdown',\n    example: 'End-to-end payment analysis notebook',\n    aws: 'SageMaker Notebooks',\n    azure: 'Azure Notebooks',\n    other: 'Jupyter, Databricks, Colab'\n  },\n  {\n    category: 'databricks',\n    term: 'Workspace',\n    definition: 'Collaborative environment for organizing assets',\n    example: 'Organizing notebooks into department folders',\n    aws: '-',\n    azure: '-',\n    other: 'Databricks Workspace'\n  },\n  {\n    category: 'databricks',\n    term: 'Clusters',\n    definition: 'Managed compute resources for workloads',\n    example: 'Auto-scaling cluster for peak processing',\n    aws: 'EMR',\n    azure: 'HDInsight, Synapse',\n    other: 'Databricks'\n  },\n  {\n    category: 'databricks',\n    term: 'Auto Loader',\n    definition: 'Ingestion service for incrementally processing new files',\n    example: 'Automatically processing new transaction log files',\n    aws: '-',\n    azure: '-',\n    other: 'Databricks Auto Loader'\n  },\n\n  // ADVANCED DATA ENGINEERING CONCEPTS\n  {\n    category: 'advanced',\n    term: 'Data Lineage',\n    definition: 'Documentation of data\\'s origins and transformations',\n    example: 'Tracing payment metric back to source systems',\n    aws: 'Glue, AWS CloudTrail',\n    azure: 'Purview',\n    other: 'Collibra, Alation'\n  },\n  {\n    category: 'advanced',\n    term: 'Data Governance',\n    definition: 'Framework for managing data availability, security',\n    example: 'Policies for PII access and protection',\n    aws: 'Lake Formation',\n    azure: 'Purview',\n    other: 'Collibra, Alation'\n  },\n  {\n    category: 'advanced',\n    term: 'Data Catalog',\n    definition: 'Inventory of available data assets',\n    example: 'Directory of payment datasets with descriptions',\n    aws: 'Glue Data Catalog',\n    azure: 'Purview',\n    other: 'Collibra, Alation'\n  },\n  {\n    category: 'advanced',\n    term: 'Data Quality',\n    definition: 'Measure of data\\'s condition and suitability',\n    example: 'Percentage of transactions with valid customer_ids',\n    aws: 'Glue DataBrew',\n    azure: 'Data Factory Data Flows',\n    other: 'Great Expectations, dbt'\n  },\n  {\n    category: 'advanced',\n    term: 'Schema Evolution',\n    definition: 'Changing schema without disrupting services',\n    example: 'Adding payment_method field without breaking pipelines',\n    aws: 'Glue Schema Registry',\n    azure: 'Schema Registry',\n    other: 'Confluent Schema Registry'\n  },\n  {\n    category: 'advanced',\n    term: 'CDC (Change Data Capture)',\n    definition: 'Capturing changes made to a database',\n    example: 'Tracking all customer address updates',\n    aws: 'DMS',\n    azure: 'Data Factory',\n    other: 'Debezium, Striim'\n  },\n  {\n    category: 'advanced',\n    term: 'Idempotence',\n    definition: 'Operation can be applied multiple times without changing result',\n    example: 'Payment processing that doesn\\'t double-charge',\n    aws: '-',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'advanced',\n    term: 'ACID Properties',\n    definition: 'Guaranteeing database transactions',\n    example: 'Funds transfer completes entirely or not at all',\n    aws: '-',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'advanced',\n    term: 'Slowly Changing Dimensions',\n    definition: 'Handling historical data changes in a warehouse',\n    example: 'Tracking merchant information changes over time',\n    aws: '-',\n    azure: '-',\n    other: '-'\n  },\n  \n  // PLATFORM-SPECIFIC CONCEPTS\n  {\n    category: 'platform',\n    term: 'S3 (AWS)',\n    definition: 'Simple Storage Service, object storage',\n    example: 'Storing transaction logs in encrypted bucket',\n    aws: 'S3',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'platform',\n    term: 'Blob Storage (Azure)',\n    definition: 'Microsoft\\'s object storage solution',\n    example: 'Archiving payment receipts',\n    aws: '-',\n    azure: 'Blob Storage',\n    other: '-'\n  },\n  {\n    category: 'platform',\n    term: 'Redshift (AWS)',\n    definition: 'Cloud data warehouse service',\n    example: 'Weekly settlement reports across merchant data',\n    aws: 'Redshift',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'platform',\n    term: 'Synapse Analytics (Azure)',\n    definition: 'Analytics service for data warehousing and big data',\n    example: 'Combining transactions with clickstream analysis',\n    aws: '-',\n    azure: 'Synapse Analytics',\n    other: '-'\n  },\n  {\n    category: 'platform',\n    term: 'Glue (AWS)',\n    definition: 'Serverless data integration service',\n    example: 'Cataloging payment data sources',\n    aws: 'Glue',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'platform',\n    term: 'Data Factory (Azure)',\n    definition: 'Integration service for ETL/ELT workflows',\n    example: 'Moving data from payment systems to data lake',\n    aws: '-',\n    azure: 'Data Factory',\n    other: '-'\n  },\n  {\n    category: 'platform',\n    term: 'Athena (AWS)',\n    definition: 'Interactive query service for S3 data',\n    example: 'Ad-hoc fraud analysis queries against S3 data',\n    aws: 'Athena',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'platform',\n    term: 'EMR (AWS)',\n    definition: 'Managed Hadoop framework',\n    example: 'Monthly reconciliation across historical data',\n    aws: 'EMR',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'platform',\n    term: 'Lambda (AWS)',\n    definition: 'Serverless compute service',\n    example: 'Real-time payment validation functions',\n    aws: 'Lambda',\n    azure: '-',\n    other: '-'\n  },\n  {\n    category: 'platform',\n    term: 'Azure Functions',\n    definition: 'Microsoft\\'s serverless compute',\n    example: 'Fraud detection triggers on transactions',\n    aws: '-',\n    azure: 'Azure Functions',\n    other: '-'\n  }\n];\n\nexport default glossaryData;","import React, { useState } from 'react';\nimport glossaryData from '../data/glossaryData';\n\nconst DataEngineeringGlossary = () => {\n  const [categoryFilter, setCategoryFilter] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Define the categories for filtering\n  const categories = [\n    { id: 'all', name: 'All Categories' },\n    { id: 'fundamental', name: 'Fundamental Concepts' },\n    { id: 'storage', name: 'Storage & Computing' },\n    { id: 'file', name: 'File Formats' },\n    { id: 'database', name: 'Database Concepts' },\n    { id: 'modeling', name: 'Data Modeling' },\n    { id: 'warehouse', name: 'Warehouses & Lakes' },\n    { id: 'processing', name: 'Data Processing' },\n    { id: 'cloud', name: 'Cloud Computing' },\n    { id: 'databricks', name: 'Databricks' },\n    { id: 'advanced', name: 'Advanced Concepts' },\n    { id: 'platform', name: 'Platform-Specific' }\n  ];\n\n  // Filter the glossary data based on category and search term\n  const filteredData = glossaryData.filter(item => {\n    const matchesCategory = categoryFilter === 'all' || item.category === categoryFilter;\n    const matchesSearch = \n      item.term.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      item.definition.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      item.example.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      item.aws.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      item.azure.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      item.other.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    return matchesCategory && matchesSearch;\n  });\n\n  // Removed toggle expanded functionality since all info is visible in the table\n\n  return (\n    <div>\n      {/* Simplified gradient header with blue-to-purple gradient */}\n      <div \n        className=\"bg-gradient-to-r from-blue-600 to-purple-600 p-6 rounded-xl shadow-lg mb-4 text-center\"\n      >\n        <h1 className=\"text-3xl font-bold text-white mb-2\">Data Engineering Glossary</h1>\n        <p className=\"text-white/80\">From Bits to Big Data: Interactive Guide to Data Engineering Terms</p>\n      </div>\n      \n      {/* Search and filter controls with improved alignment */}\n      <div className=\"bg-white p-6 rounded-t-lg shadow-md hover:shadow-xl transition-shadow mb-0\">\n        <div className=\"flex flex-col md:flex-row gap-4\">\n          <div className=\"flex-1\">\n            <input\n              type=\"text\"\n              placeholder=\"Search terms, definitions, examples...\"\n              className=\"w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n          </div>\n          <div className=\"flex flex-wrap justify-center\">\n            {categories.map(category => (\n              <button\n                key={category.id}\n                onClick={() => setCategoryFilter(category.id)}\n                className={`px-4 py-2 mx-2 my-1 rounded-lg transition-all duration-200 ${\n                  categoryFilter === category.id \n                    ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-sm' \n                    : 'border border-gray-200 hover:bg-gradient-to-r hover:from-blue-600/80 hover:to-purple-600/80 hover:text-white'\n                }`}\n              >\n                {category.name}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      {/* Glossary table - replaced grid with table layout */}\n      <div className=\"bg-white shadow-lg rounded-b-lg overflow-x-auto mb-4\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead>\n            <tr className=\"bg-gradient-to-r from-gray-50 to-gray-100\">\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700\">Term</th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700\">Definition</th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700\">Example</th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700\">AWS</th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700\">Azure</th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700\">Other</th>\n            </tr>\n          </thead>\n          <tbody className=\"divide-y divide-gray-200 bg-white\">\n            {filteredData.length > 0 ? (\n              filteredData.map((item, idx) => (\n                <tr \n                  key={item.term}\n                  className={`hover:bg-blue-50 transition-colors ${idx % 2 === 0 ? 'bg-white' : 'bg-gray-50'}`}\n                >\n                  <td className=\"px-4 py-3\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"font-medium text-gray-900\">{item.term}</span>\n                      <span className=\"text-xs text-blue-600 mt-1\">\n                        {categories.find(c => c.id === item.category)?.name}\n                      </span>\n                    </div>\n                  </td>\n                  <td className=\"px-4 py-3 text-sm text-gray-600\">{item.definition}</td>\n                  <td className=\"px-4 py-3 text-sm text-gray-600\">{item.example}</td>\n                  <td className=\"px-4 py-3\">\n                    {item.aws !== '-' ? (\n                      <span className=\"inline-block px-2 py-1 text-xs bg-orange-50 text-orange-800 rounded-md\">\n                        {item.aws}\n                      </span>\n                    ) : (\n                      <span className=\"text-gray-400\">-</span>\n                    )}\n                  </td>\n                  <td className=\"px-4 py-3\">\n                    {item.azure !== '-' ? (\n                      <span className=\"inline-block px-2 py-1 text-xs bg-blue-50 text-blue-800 rounded-md\">\n                        {item.azure}\n                      </span>\n                    ) : (\n                      <span className=\"text-gray-400\">-</span>\n                    )}\n                  </td>\n                  <td className=\"px-4 py-3\">\n                    {item.other !== '-' ? (\n                      <span className=\"inline-block px-2 py-1 text-xs bg-purple-50 text-purple-800 rounded-md\">\n                        {item.other}\n                      </span>\n                    ) : (\n                      <span className=\"text-gray-400\">-</span>\n                    )}\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"6\" className=\"px-4 py-8 text-center text-gray-500\">\n                  No terms found matching your criteria. Try adjusting your search or filter.\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      \n      <div className=\"bg-white p-6 rounded-lg shadow-md hover:shadow-xl transition-shadow\">\n        <h2 className=\"text-lg font-semibold text-gray-800 mb-2\">Using This Glossary</h2>\n        <p className=\"text-gray-700\">\n          Use the search bar to find specific terms or examples. Filter by category to focus on specific areas of data engineering. Each term includes practical examples and platform-specific implementations where applicable.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DataEngineeringGlossary;","// Group services by category and map AWS to Azure equivalents\nconst serviceCategories = [\n  {\n    category: 'Storage',\n    aws: {\n      parent: { \n        service: 'Amazon S3', \n        description: 'Scalable object storage for data lakes', \n        category: 'Storage'\n      },\n      children: [\n        { \n          service: 'S3 Standard', \n          description: 'General-purpose object storage', \n          category: 'Storage',\n        },\n        { \n          service: 'S3 Glacier', \n          description: 'Low-cost archive storage with retrieval options', \n          category: 'Storage',\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Azure Storage', \n        description: 'Comprehensive cloud storage solution', \n        category: 'Storage'\n      },\n      children: [\n        { \n          service: 'Blob Storage', \n          description: 'Object storage for unstructured data in data lakes', \n          category: 'Storage',\n        },\n        { \n          service: 'Data Lake Storage Gen2', \n          description: 'Hierarchical namespace with Blob storage capabilities', \n          category: 'Storage',\n        },\n        { \n          service: 'Azure Files', \n          description: 'Fully managed file shares in the cloud', \n          category: 'Storage',\n        }\n      ]\n    }\n  },\n  {\n    category: 'Streaming',\n    aws: {\n      parent: { \n        service: 'Amazon Kinesis', \n        description: 'Real-time data streaming service', \n        category: 'Streaming'\n      },\n      children: [\n        { \n          service: 'Kinesis Data Streams', \n          description: 'Real-time data streaming for ingestion and processing', \n          category: 'Streaming'\n        },\n        { \n          service: 'Kinesis Data Firehose', \n          description: 'Load streaming data into data stores and analytics tools', \n          category: 'Streaming'\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Azure Event Hubs', \n        description: 'Big data streaming platform and event ingestion service', \n        category: 'Streaming'\n      },\n      children: [\n        {\n          service: 'Event Hubs Kafka', \n          description: 'Kafka endpoint for Azure Event Hubs', \n          category: 'Streaming'\n        }\n      ]\n    }\n  },\n  {\n    category: 'ETL',\n    aws: {\n      parent: { \n        service: 'AWS Glue', \n        description: 'Serverless ETL service for data preparation', \n        category: 'ETL'\n      },\n      children: [\n        {\n          service: 'Glue DataBrew',\n          description: 'Visual data preparation tool',\n          category: 'ETL'\n        },\n        {\n          service: 'Glue Studio',\n          description: 'Visual interface for ETL job development',\n          category: 'ETL'\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Azure Data Factory', \n        description: 'Data integration service for ETL/ELT workflows', \n        category: 'ETL'\n      },\n      children: [\n        {\n          service: 'Mapping Data Flows',\n          description: 'Visual data transformation service',\n          category: 'ETL'\n        },\n        {\n          service: 'Wrangling Data Flows',\n          description: 'Interactive data preparation service',\n          category: 'ETL'\n        }\n      ]\n    }\n  },\n  {\n    category: 'Analytics',\n    aws: {\n      parent: { \n        service: 'Amazon EMR', \n        description: 'Managed big data platform running Apache Spark and other tools', \n        category: 'Analytics'\n      },\n      children: [\n        { \n          service: 'EMR Studio', \n          description: 'Integrated development environment for analytics', \n          category: 'Analytics',\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Azure Databricks', \n        description: 'Analytics platform based on Apache Spark', \n        category: 'Analytics'\n      },\n      children: [\n        { \n          service: 'Delta Lake', \n          description: 'Open source storage layer for reliable data lakes', \n          category: 'Storage',\n        },\n        { \n          service: 'MLflow', \n          description: 'Platform for managing the ML lifecycle', \n          category: 'Machine Learning',\n        }\n      ]\n    }\n  },\n  {\n    category: 'Data Warehouse',\n    aws: {\n      parent: { \n        service: 'Amazon Redshift', \n        description: 'Petabyte-scale data warehouse for analytics', \n        category: 'Analytics'\n      },\n      children: [\n        {\n          service: 'Redshift Spectrum',\n          description: 'Query data directly from S3 without loading',\n          category: 'Analytics'\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Azure Synapse Analytics', \n        description: 'Analytics service for big data and data warehousing', \n        category: 'Analytics'\n      },\n      children: [\n        {\n          service: 'Synapse SQL pools',\n          description: 'Enterprise data warehousing with parallel processing',\n          category: 'Analytics'\n        },\n        {\n          service: 'Synapse Spark pools',\n          description: 'Spark-based big data analytics',\n          category: 'Analytics'\n        }\n      ]\n    }\n  },\n  {\n    category: 'Data Processing',\n    aws: {\n      parent: { \n        service: 'AWS Glue ETL', \n        description: 'Serverless data processing service', \n        category: 'Processing'\n      },\n      children: [\n        {\n          service: 'AWS EMR',\n          description: 'Big data processing platform',\n          category: 'Processing'\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Azure HDInsight', \n        description: 'Fully-managed cloud Hadoop & Spark offering', \n        category: 'Processing'\n      },\n      children: [\n        {\n          service: 'Azure Databricks',\n          description: 'Spark-based analytics platform',\n          category: 'Processing'\n        }\n      ]\n    }\n  },\n  {\n    category: 'Transformation',\n    aws: {\n      parent: { \n        service: 'AWS Glue', \n        description: 'Data transformation and loading service', \n        category: 'Processing'\n      },\n      children: [\n        {\n          service: 'Step Functions',\n          description: 'Workflow orchestration for serverless applications',\n          category: 'Processing'\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Azure Data Factory', \n        description: 'Data integration service with transformation capabilities', \n        category: 'Processing'\n      },\n      children: [\n        {\n          service: 'Databricks Delta Live Tables',\n          description: 'Declarative ETL pipelines',\n          category: 'Processing'\n        }\n      ]\n    }\n  },\n  {\n    category: 'Visualization',\n    aws: {\n      parent: { \n        service: 'Amazon QuickSight', \n        description: 'Business intelligence service for visualization', \n        category: 'Analytics'\n      },\n      children: []\n    },\n    azure: {\n      parent: { \n        service: 'Power BI', \n        description: 'Business analytics service for visualizations', \n        category: 'Analytics'\n      },\n      children: [\n        {\n          service: 'Power BI Embedded',\n          description: 'Embed Power BI content in applications',\n          category: 'Analytics'\n        }\n      ]\n    }\n  },\n  {\n    category: 'Monitoring',\n    aws: {\n      parent: { \n        service: 'Amazon CloudWatch', \n        description: 'Monitoring and observability service', \n        category: 'Monitoring'\n      },\n      children: [\n        {\n          service: 'CloudWatch Logs',\n          description: 'Centralized log management service',\n          category: 'Monitoring'\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Azure Monitor', \n        description: 'Full stack monitoring service for applications and infrastructure', \n        category: 'Monitoring'\n      },\n      children: [\n        {\n          service: 'Log Analytics',\n          description: 'Log data collection and analysis service',\n          category: 'Monitoring'\n        },\n        {\n          service: 'Application Insights',\n          description: 'Application performance management service',\n          category: 'Monitoring'\n        }\n      ]\n    }\n  },\n  {\n    category: 'Container Services',\n    aws: {\n      parent: { \n        service: 'Amazon ECS', \n        description: 'Fully managed container orchestration service', \n        category: 'Compute'\n      },\n      children: [\n        {\n          service: 'Amazon EKS',\n          description: 'Managed Kubernetes service',\n          category: 'Compute'\n        },\n        {\n          service: 'Fargate',\n          description: 'Serverless compute engine for containers',\n          category: 'Compute'\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Azure Container Instances', \n        description: 'Run containers without managing servers', \n        category: 'Compute'\n      },\n      children: [\n        {\n          service: 'Azure Kubernetes Service (AKS)',\n          description: 'Managed Kubernetes service',\n          category: 'Compute'\n        },\n        {\n          service: 'Azure Container Apps',\n          description: 'Serverless container service',\n          category: 'Compute'\n        }\n      ]\n    }\n  },\n  {\n    category: 'Virtual Machines',\n    aws: {\n      parent: { \n        service: 'Amazon EC2', \n        description: 'Virtual servers in the cloud', \n        category: 'Compute'\n      },\n      children: [\n        {\n          service: 'EC2 Auto Scaling',\n          description: 'Automatically adjust compute capacity',\n          category: 'Compute'\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Azure Virtual Machines', \n        description: 'Windows or Linux virtual machines in the cloud', \n        category: 'Compute'\n      },\n      children: [\n        {\n          service: 'Virtual Machine Scale Sets',\n          description: 'Manage and scale sets of identical VMs',\n          category: 'Compute'\n        }\n      ]\n    }\n  },\n  {\n    category: 'Identity',\n    aws: {\n      parent: { \n        service: 'AWS IAM', \n        description: 'Identity and access management', \n        category: 'Security'\n      },\n      children: [\n        {\n          service: 'AWS Single Sign-On',\n          description: 'Centrally manage access to AWS accounts and applications',\n          category: 'Security'\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Microsoft Entra ID', \n        description: 'Identity and access management service (formerly Azure AD)', \n        category: 'Security'\n      },\n      children: [\n        {\n          service: 'Entra ID B2C',\n          description: 'Customer identity and access management',\n          category: 'Security'\n        }\n      ]\n    }\n  },\n  {\n    category: 'Secrets',\n    aws: {\n      parent: { \n        service: 'AWS Secrets Manager', \n        description: 'Rotate, manage, and retrieve secrets', \n        category: 'Security'\n      },\n      children: [\n        {\n          service: 'AWS Parameter Store',\n          description: 'Secure, hierarchical storage for configuration data',\n          category: 'Security'\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Azure Key Vault', \n        description: 'Safeguard cryptographic keys and secrets', \n        category: 'Security'\n      },\n      children: [\n        {\n          service: 'Managed HSM',\n          description: 'Hardware Security Module dedicated to single customers',\n          category: 'Security'\n        }\n      ]\n    }\n  },\n  {\n    category: 'Query',\n    aws: {\n      parent: { \n        service: 'Amazon Athena', \n        description: 'Serverless interactive query service', \n        category: 'Analytics'\n      },\n      children: [\n        {\n          service: 'Lake Formation',\n          description: 'Build, secure, and manage data lakes',\n          category: 'Analytics'\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Azure Synapse SQL On-demand', \n        description: 'Serverless SQL query service for data lakes', \n        category: 'Analytics'\n      },\n      children: [\n        {\n          service: 'Synapse Serverless SQL Pool',\n          description: 'Query data in data lake without provisioning resources',\n          category: 'Analytics'\n        }\n      ]\n    }\n  },\n  {\n    category: 'Serverless',\n    aws: {\n      parent: { \n        service: 'AWS Lambda', \n        description: 'Serverless compute service', \n        category: 'Compute'\n      },\n      children: [\n        {\n          service: 'Step Functions',\n          description: 'Coordinate multiple Lambda functions',\n          category: 'Compute'\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Azure Functions', \n        description: 'Event-driven serverless compute platform', \n        category: 'Compute'\n      },\n      children: [\n        {\n          service: 'Durable Functions',\n          description: 'Extension for creating stateful workflows',\n          category: 'Compute'\n        }\n      ]\n    }\n  },\n  {\n    category: 'Machine Learning',\n    aws: {\n      parent: { \n        service: 'Amazon SageMaker', \n        description: 'Build, train, and deploy machine learning models', \n        category: 'AI/ML'\n      },\n      children: [\n        {\n          service: 'SageMaker Studio',\n          description: 'Web-based IDE for ML',\n          category: 'AI/ML'\n        }\n      ]\n    },\n    azure: {\n      parent: { \n        service: 'Azure Machine Learning', \n        description: 'End-to-end machine learning service', \n        category: 'AI/ML'\n      },\n      children: [\n        {\n          service: 'Azure ML Studio',\n          description: 'Web interface for machine learning solutions',\n          category: 'AI/ML'\n        }\n      ]\n    }\n  },\n  {\n    category: 'API Management',\n    aws: {\n      parent: { \n        service: 'Amazon API Gateway', \n        description: 'Create, publish, maintain, monitor, and secure APIs', \n        category: 'Integration'\n      },\n      children: []\n    },\n    azure: {\n      parent: { \n        service: 'Azure API Management', \n        description: 'Publish, secure, transform, maintain, and monitor APIs', \n        category: 'Integration'\n      },\n      children: []\n    }\n  }\n];\n\nexport default serviceCategories;","// Executive summary data that maps technical categories to business outcomes\nconst cloudExecutiveSummary = {\n    businessPriorities: [\n      {\n        id: 'cost-optimization',\n        title: 'Cost Optimization',\n        icon: '💰',\n        aws: {\n          summary: 'Higher cost efficiency for high-volume workloads with reserved instances offering 40-60% savings.',\n          strengths: [\n            'More granular service pricing allowing precise optimization',\n            'Stronger cost governance tools (AWS Cost Explorer, Budgets)',\n            'Competitive spot pricing for non-critical workloads (up to 90% savings)'\n          ],\n          businessCase: 'Large enterprises with predictable workloads often achieve 25-30% lower TCO with committed AWS usage.'\n        },\n        azure: {\n          summary: 'Better discounts for organizations with Microsoft enterprise agreements, with hybrid benefits for Windows workloads.',\n          strengths: [\n            'Azure Hybrid Benefit for Windows Server/SQL licenses',\n            'Enterprise Agreement discounts with existing Microsoft relationships',\n            'Reserved instances with flexibility to change instance types'\n          ],\n          businessCase: 'Organizations with existing Microsoft investments typically reduce cloud costs by 30-40% through licensing benefits.'\n        },\n      },\n      {\n        id: 'time-to-market',\n        title: 'Speed to Market',\n        icon: '🚀',\n        aws: {\n          summary: 'More specialized services enabling faster implementation of complex architectures without custom development.',\n          strengths: [\n            'Extensive marketplace of pre-built solutions',\n            'More specialized services reducing custom development',\n            'Broader set of quickstart templates for common architectures'\n          ],\n          businessCase: 'Digital-native companies typically launch new services 20-30% faster with AWS specialized solutions.'\n        },\n        azure: {\n          summary: 'Faster implementation for Microsoft-centric organizations with integrated tooling and familiar development patterns.',\n          strengths: [\n            'Seamless Visual Studio & GitHub integration',\n            'Simplified DevOps with Azure DevOps/GitHub Actions',\n            'Lower learning curve for Microsoft-skilled workforce'\n          ],\n          businessCase: 'Microsoft-centric enterprises report 30-40% faster deployment cycles after moving to Azure.'\n        }\n      },\n      {\n        id: 'analytics',\n        title: 'Data & Analytics',\n        icon: '📊',\n        aws: {\n          summary: 'More mature data lake architecture with comprehensive tools for large-scale data processing.',\n          strengths: [\n            'More mature S3-based data lake implementation',\n            'Stronger streaming capabilities with Kinesis',\n            'Better integration with open-source analytics tools'\n          ],\n          businessCase: 'Organizations with heterogeneous data environments achieve 40-50% improvement in data pipeline efficiency.'\n        },\n        azure: {\n          summary: 'Superior integrated analytics platform with native Databricks integration and Power BI for business intelligence.',\n          strengths: [\n            'First-party Databricks integration',\n            'Synapse Analytics combining warehousing and big data',\n            'Native Power BI integration for business intelligence'\n          ],\n          businessCase: 'Enterprises report 30-40% faster insights generation through Azure\\'s integrated analytics ecosystem.'\n        },\n      },\n      {\n        id: 'governance',\n        title: 'Compliance & Governance',\n        icon: '🔒',\n        aws: {\n          summary: 'More comprehensive compliance portfolio with stronger security automation for regulated industries.',\n          strengths: [\n            'More comprehensive compliance certification portfolio',\n            'More granular IAM controls',\n            'Specialized offerings for highly regulated industries'\n          ],\n          businessCase: 'Financial services organizations reduce compliance overhead by 30-35% with AWS regulatory frameworks.'\n        },\n        azure: {\n          summary: 'Superior enterprise governance with Microsoft Entra ID integration and stronger hybrid compliance capabilities.',\n          strengths: [\n            'Microsoft Entra ID integration with existing identity systems',\n            'Better hybrid/multi-cloud governance tools',\n            'Simplified compliance with Microsoft 365 integration'\n          ],\n          businessCase: 'Enterprise customers reduce identity management costs by 40-50% through Entra ID integration.'\n        }\n      },\n      {\n        id: 'operational-efficiency',\n        title: 'Operational Efficiency',\n        icon: '⚙️',\n        aws: {\n          summary: 'More automation options with robust infrastructure-as-code and extensive programmatic controls.',\n          strengths: [\n            'More extensive infrastructure-as-code capabilities',\n            'Superior command-line tooling for automation',\n            'Better support for container orchestration at scale'\n          ],\n          businessCase: 'Organizations achieve 40-50% higher infrastructure automation rates with AWS, reducing operational overhead.'\n        },\n        azure: {\n          summary: 'Simpler operational model with better integration for Microsoft-centric IT organizations.',\n          strengths: [\n            'Simplified operations for Windows-based workloads',\n            'Better integration with System Center and Microsoft admin tools',\n            'More intuitive portal experience and management tools'\n          ],\n          businessCase: 'Microsoft-centric IT organizations report 25-35% lower operational overhead after moving to Azure.'\n        }\n      }\n    ],\n    \n    industryGuidance: [\n      {\n        industry: 'Financial Services',\n        recommendation: 'Consider AWS for its more comprehensive compliance portfolio and granular security controls. Azure may be preferred if you have significant Microsoft investments or need better integration with Microsoft 365 for productivity tools.',\n        keyConsiderations: [\n          'Regulatory compliance requirements',\n          'Security and governance needs',\n          'Integration with existing systems'\n        ]\n      },\n      {\n        industry: 'Healthcare',\n        recommendation: 'Azure typically offers better HIPAA compliance tooling and integration with healthcare systems. AWS may be preferred for research workloads or organizations with existing AWS expertise.',\n        keyConsiderations: [\n          'Protected health information handling',\n          'Integration with healthcare systems',\n          'Machine learning for diagnostics'\n        ]\n      },\n      {\n        industry: 'Retail',\n        recommendation: 'AWS is often preferred for its stronger data analytics and customer personalization capabilities. Companies competing with Amazon sometimes choose Azure to avoid working with a competitor.',\n        keyConsiderations: [\n          'Customer data analytics needs',\n          'Competitive landscape',\n          'Personalization requirements'\n        ]\n      },\n      {\n        industry: 'Manufacturing',\n        recommendation: 'Azure typically offers better integration with operational technology and IoT systems. AWS may be preferred for supply chain analytics and logistics optimization.',\n        keyConsiderations: [\n          'IoT integration requirements',\n          'Supply chain visibility',\n          'ERP system integration'\n        ]\n      }\n    ],\n    \n    databricksConsiderations: {\n      aws: {\n        advantages: [\n          'More flexible deployment options',\n          'Better integration with broader AWS data ecosystem',\n          'Stronger security isolation capabilities'\n        ],\n        disadvantages: [\n          'Third-party integration versus native Azure offering',\n          'More complex identity management',\n          'Separate billing and support channels'\n        ],\n        businessImpact: 'AWS Databricks deployments typically require 15-20% more operational overhead but offer greater flexibility for complex multi-service architectures.'\n      },\n      azure: {\n        advantages: [\n          'First-party service with native Azure integration',\n          'Simplified identity management through Entra ID',\n          'Unified billing and support',\n          'Tighter integration with Azure Synapse Analytics'\n        ],\n        disadvantages: [\n          'Less flexibility in network configuration',\n          'Some advanced features may arrive later than on AWS',\n          'More constrained to Microsofts deployment patterns'\n        ],\n        businessImpact: 'Azure Databricks deployments typically show 25-30% faster implementation times and lower operational overhead due to native integration.'\n      }\n    },\n    \n    costProfile: {\n      aws: {\n        enterpriseFit: 'Better for variable or unpredictable workloads with granular scaling',\n        savingsApproach: 'Focus on reserved instances, Savings Plans, and spot instances for non-critical workloads',\n        typicalSavings: '40-60% savings with 3-year commitments compared to on-demand pricing',\n        hiddenCosts: 'Data transfer, storage management, and API request costs can accumulate unexpectedly'\n      },\n      azure: {\n        enterpriseFit: 'Better for organizations with Microsoft EA agreements and Windows workloads',\n        savingsApproach: 'Focus on leveraging hybrid benefits, EA discounts, and dev/test pricing',\n        typicalSavings: '30-50% savings with hybrid benefits and EA discounts',\n        hiddenCosts: 'Premium support, bandwidth, and managed service operational costs can exceed expectations'\n      }\n    },\n    \n    migrationConsiderations: {\n      aws: {\n        timeToValue: 'Typically 3-6 months for initial workload migration',\n        skillsGap: 'Larger learning curve for Microsoft-centric organizations',\n        enterpriseReadiness: 'Requires more customization for enterprise governance',\n        partnersEcosystem: 'Larger partner ecosystem but more specialized partners'\n      },\n      azure: {\n        timeToValue: 'Typically 2-5 months for Microsoft-centric organizations',\n        skillsGap: 'Lower for Microsoft shops, higher for Linux-focused teams',\n        enterpriseReadiness: 'Better out-of-box enterprise governance features',\n        partnersEcosystem: 'Deeper Microsoft partner relationships with broader geographic coverage'\n      }\n    }\n  };\n  \n  export default cloudExecutiveSummary;","import React, { useState } from 'react';\nimport serviceCategories from '../data/serviceCategories';\nimport cloudExecutiveSummary from '../data/cloudExecutiveSummary';\nimport '../styles/buttons.css';\n\nconst AwsVsAzureComparison = () => {\n  const [selectedService, setSelectedService] = useState(null);\n  const [expandedServices, setExpandedServices] = useState({});\n  // New state for audience view type (technical vs executive)\n  const [audienceView, setAudienceView] = useState('technical');\n  // State for selected business priority in executive view\n  const [selectedPriority, setSelectedPriority] = useState('all');\n  // State for expanded business priority\n  const [expandedPriority, setExpandedPriority] = useState(null);\n  // State for expanded industry\n  const [expandedIndustry, setExpandedIndustry] = useState(null);\n\n  // Toggle expansion of a service category\n  const toggleServiceExpansion = (categoryIndex, cloud) => {\n    const key = `${cloud}-${categoryIndex}`;\n    setExpandedServices(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n\n  // Check if a service is expanded\n  const isServiceExpanded = (categoryIndex, cloud) => {\n    const key = `${cloud}-${categoryIndex}`;\n    return !!expandedServices[key];\n  };\n\n  // Toggle expansion of a business priority\n  const togglePriorityExpansion = (priorityId) => {\n    setExpandedPriority(expandedPriority === priorityId ? null : priorityId);\n  };\n\n  // Toggle expansion of an industry guidance\n  const toggleIndustryExpansion = (industryIndex) => {\n    setExpandedIndustry(expandedIndustry === industryIndex ? null : industryIndex);\n  };\n\n  // Helper for hover animations\n  const getHoverStyle = (e, scale = true) => {\n    if (scale) {\n      e.currentTarget.style.transform = 'scale(1.02)';\n    } else {\n      e.currentTarget.style.transform = 'none';\n    }\n  };\n\n  // Filter business priorities based on selected priority\n  const filteredPriorities = selectedPriority === 'all' \n    ? cloudExecutiveSummary.businessPriorities \n    : cloudExecutiveSummary.businessPriorities.filter(priority => priority.id === selectedPriority);\n\n  return (\n    <div>\n      {/* Header with blue-to-purple gradient */}\n      <div \n        className=\"bg-gradient-to-r from-blue-600 to-purple-600 p-6 rounded-xl shadow-lg mb-4 text-center\"\n      >\n        <h1 className=\"text-3xl font-bold text-white mb-2\">AWS vs Azure: Data Engineering Solutions</h1>\n        <p className=\"text-white/80\">\n          {audienceView === 'technical' ? \n            'Interactive comparison of cloud data processing and Databricks integration' : \n            'Strategic decision framework for cloud platform selection'}\n        </p>\n      </div>\n\n      {/* Audience View Toggle - Technical vs Executive */}\n      <div className=\"bg-white rounded-lg shadow-md p-4 hover:shadow-xl transition-shadow mb-4\">\n        <h3 className=\"text-center text-sm font-medium text-gray-700 mb-3\">Audience View</h3>\n        <div className=\"flex justify-center\">\n          <div className=\"bg-gray-100 p-1 rounded-lg inline-flex\">\n            <button\n              onClick={() => setAudienceView('technical')}\n              className={`px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n                audienceView === 'technical'\n                  ? 'bg-blue-600 text-white'\n                  : 'text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              Technical Details\n            </button>\n            <button\n              onClick={() => setAudienceView('executive')}\n              className={`px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n                audienceView === 'executive'\n                  ? 'bg-blue-600 text-white'\n                  : 'text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              Executive Summary\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Conditional content based on selected view */}\n      {audienceView === 'technical' ? (\n        // TECHNICAL VIEW CONTENT\n        <>\n          {/* Services Comparison Table */}\n          <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow mb-4\">\n            <h2 className=\"text-2xl font-semibold mb-4 text-center\">Cloud Services Comparison</h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full\">\n                <thead>\n                  <tr>\n                    <th className=\"px-4 py-2 border-b-2 text-left\">Category</th>\n                    <th className=\"px-4 py-2 border-b-2 text-left bg-amber-50\">AWS Services</th>\n                    <th className=\"px-4 py-2 border-b-2 text-left bg-blue-50\">Azure Services</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {serviceCategories.map((category, idx) => (\n                    <React.Fragment key={`category-${idx}`}>\n                      {/* Category row */}\n                      <tr className=\"border-b hover:bg-gray-50\">\n                        <td className=\"px-4 py-3 font-medium\">{category.category}</td>\n                        \n                        {/* AWS Service */}\n                        <td className=\"px-4 py-3 bg-amber-50/30\">\n                          {category.aws.parent ? (\n                            <div \n                              className=\"cursor-pointer flex justify-between items-center\"\n                              onClick={() => category.aws.children.length > 0 && toggleServiceExpansion(idx, 'aws')}\n                            >\n                              <div>\n                                <div className=\"font-semibold text-amber-800\">{category.aws.parent.service}</div>\n                                <div className=\"text-xs text-gray-600\">{category.aws.parent.description}</div>\n                              </div>\n                              {category.aws.children.length > 0 && (\n                                <span className=\"text-amber-600\">\n                                  {isServiceExpanded(idx, 'aws') ? '▼' : '▶'}\n                                </span>\n                              )}\n                            </div>\n                          ) : (\n                            <div className=\"text-gray-400 italic\">No equivalent service</div>\n                          )}\n                        </td>\n                        \n                        {/* Azure Service */}\n                        <td className=\"px-4 py-3 bg-blue-50/30\">\n                          {category.azure.parent ? (\n                            <div \n                              className=\"cursor-pointer flex justify-between items-center\"\n                              onClick={() => category.azure.children.length > 0 && toggleServiceExpansion(idx, 'azure')}\n                            >\n                              <div>\n                                <div className=\"font-semibold text-blue-800\">{category.azure.parent.service}</div>\n                                <div className=\"text-xs text-gray-600\">{category.azure.parent.description}</div>\n                              </div>\n                              {category.azure.children.length > 0 && (\n                                <span className=\"text-blue-600\">\n                                  {isServiceExpanded(idx, 'azure') ? '▼' : '▶'}\n                                </span>\n                              )}\n                            </div>\n                          ) : (\n                            <div className=\"text-gray-400 italic\">No equivalent service</div>\n                          )}\n                        </td>\n                      </tr>\n\n                      {/* FIXED: Render child services in aligned pairs */}\n                      {(isServiceExpanded(idx, 'aws') || isServiceExpanded(idx, 'azure')) && \n                        Array.from({ length: Math.max(\n                          isServiceExpanded(idx, 'aws') ? category.aws.children.length : 0,\n                          isServiceExpanded(idx, 'azure') ? category.azure.children.length : 0\n                        )}).map((_, childIdx) => (\n                          <tr key={`child-row-${idx}-${childIdx}`} className=\"border-b\">\n                            <td className=\"px-4 py-2\"></td>\n                            \n                            {/* AWS Child */}\n                            <td className={`px-4 py-2 ${isServiceExpanded(idx, 'aws') ? 'bg-amber-50/10' : ''}`}>\n                              {isServiceExpanded(idx, 'aws') && childIdx < category.aws.children.length ? (\n                                <div className=\"pl-8\">\n                                  <div className=\"font-medium text-sm\">{category.aws.children[childIdx].service}</div>\n                                  <div className=\"text-xs text-gray-600\">{category.aws.children[childIdx].description}</div>\n                                </div>\n                              ) : null}\n                            </td>\n                            \n                            {/* Azure Child */}\n                            <td className={`px-4 py-2 ${isServiceExpanded(idx, 'azure') ? 'bg-blue-50/10' : ''}`}>\n                              {isServiceExpanded(idx, 'azure') && childIdx < category.azure.children.length ? (\n                                <div className=\"pl-8\">\n                                  <div className=\"font-medium text-sm\">{category.azure.children[childIdx].service}</div>\n                                  <div className=\"text-xs text-gray-600\">{category.azure.children[childIdx].description}</div>\n                                </div>\n                              ) : null}\n                            </td>\n                          </tr>\n                        ))\n                      }\n                    </React.Fragment>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* Service Categories Summary Cards */}\n          <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow mb-4\">\n            <h2 className=\"text-xl font-semibold mb-4 text-center\">Platform Strengths</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"bg-amber-50 p-4 rounded-lg border border-amber-200\">\n                <h3 className=\"text-lg font-medium text-amber-800 mb-2\">AWS Advantages</h3>\n                <ul className=\"list-disc pl-5 space-y-2 text-gray-700\">\n                  <li>Greater market share and longer history in cloud services</li>\n                  <li>More granular services with specialized capabilities</li>\n                  <li>Extremely broad global infrastructure</li>\n                  <li>Deep integration with data lake technologies</li>\n                  <li>Strong serverless computing options (Lambda, Step Functions)</li>\n                </ul>\n              </div>\n              \n              <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n                <h3 className=\"text-lg font-medium text-blue-800 mb-2\">Azure Advantages</h3>\n                <ul className=\"list-disc pl-5 space-y-2 text-gray-700\">\n                  <li>Tighter integration with Microsoft ecosystem</li>\n                  <li>Native Databricks integration and optimization</li>\n                  <li>Stronger enterprise identity management with Entra ID</li>\n                  <li>More comprehensive hybrid cloud options</li>\n                  <li>Power BI integration for business analytics</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          {/* Selection guidance */}\n          <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow\">\n            <h2 className=\"text-xl font-semibold mb-4 text-center\">Selection Guidance</h2>\n            <div className=\"bg-gradient-to-r from-purple-50 to-blue-50 p-4 rounded-lg border border-blue-100\">\n              <h3 className=\"font-medium mb-2\">How to Choose Between AWS and Azure</h3>\n              <p className=\"text-gray-700 mb-3\">When selecting between AWS and Azure for data engineering workloads, consider these factors:</p>\n              <ul className=\"list-disc pl-5 space-y-1 text-gray-700\">\n                <li>Existing organizational expertise and investments</li>\n                <li>Integration requirements with other systems</li>\n                <li>Specific features needed for your data pipeline</li>\n                <li>Geographic availability in your target regions</li>\n                <li>Cost structure and pricing models</li>\n                <li>Compliance and governance requirements</li>\n              </ul>\n              <p className=\"mt-3 text-gray-700\">For Databricks-centric workflows, Azure offers more seamless integration, while AWS provides greater flexibility with third-party tools and services.</p>\n            </div>\n          </div>\n        </>\n      ) : (\n        // EXECUTIVE VIEW CONTENT\n        <>\n          {/* Business Priority Filter */}\n          <div className=\"bg-white rounded-lg shadow-md p-4 hover:shadow-xl transition-shadow mb-4\">\n            <h3 className=\"text-center text-sm font-medium text-gray-700 mb-3\">Business Priority</h3>\n            <div className=\"flex justify-center flex-wrap gap-2\">\n              <button \n                onClick={() => setSelectedPriority('all')}\n                className={`px-4 py-2 text-sm font-medium rounded-md ${selectedPriority === 'all' ? 'bg-gray-800 text-white' : 'bg-gray-100 text-gray-800 hover:bg-gray-200'}`}\n              >\n                All Priorities\n              </button>\n              {cloudExecutiveSummary.businessPriorities.map(priority => (\n                <button \n                  key={priority.id}\n                  onClick={() => setSelectedPriority(priority.id)}\n                  className={`px-4 py-2 text-sm font-medium rounded-md flex items-center ${\n                    selectedPriority === priority.id \n                      ? 'bg-blue-600 text-white' \n                      : 'bg-blue-50 text-blue-600 hover:bg-blue-100'\n                  }`}\n                >\n                  <span className=\"mr-1\">{priority.icon}</span> {priority.title}\n                </button>\n              ))}\n            </div>\n          </div>\n          \n          {/* Executive Dashboard - High Level Comparison */}\n          <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow mb-4\">\n            <h2 className=\"text-xl font-semibold mb-4 text-center\">Executive Decision Framework</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n              <div className=\"bg-amber-50 p-4 rounded-lg border border-amber-200\">\n                <h3 className=\"text-lg font-medium text-amber-800 mb-2\">AWS Strategic Fit</h3>\n                <p className=\"text-gray-700 mb-4\">Best for organizations seeking maximum technical flexibility, specialized services, and granular control over cloud resources.</p>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-amber-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-amber-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">Higher cost efficiency for high-volume workloads</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-amber-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-amber-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">More specialized services reducing custom development</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-amber-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-amber-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">Superior data lake and streaming capabilities</span>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n                <h3 className=\"text-lg font-medium text-blue-800 mb-2\">Azure Strategic Fit</h3>\n                <p className=\"text-gray-700 mb-4\">Best for Microsoft-centric organizations seeking integrated analytics, simplified operations, and enterprise governance.</p>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-blue-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">Better integration with Microsoft enterprise ecosystem</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-blue-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">Superior integrated analytics platform with Databricks</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"bg-blue-100 rounded-full p-1 mr-2\">\n                      <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </span>\n                    <span className=\"text-gray-700 text-sm\">Lower operational overhead for Microsoft-skilled teams</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            {/* Databricks-specific comparison */}\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-medium text-gray-800 mb-3\">Databricks Implementation Considerations</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n                  <h4 className=\"font-medium text-amber-700 mb-2\">AWS Databricks</h4>\n                  <ul className=\"text-sm text-gray-700 space-y-1 mb-3\">\n                    {cloudExecutiveSummary.databricksConsiderations.aws.advantages.map((adv, idx) => (\n                      <li key={`aws-adv-${idx}`} className=\"flex items-start\">\n                        <span className=\"text-green-500 mr-2\">✓</span> {adv}\n                      </li>\n                    ))}\n                  </ul>\n                  <ul className=\"text-sm text-gray-700 space-y-1\">\n                    {cloudExecutiveSummary.databricksConsiderations.aws.disadvantages.map((disadv, idx) => (\n                      <li key={`aws-disadv-${idx}`} className=\"flex items-start\">\n                        <span className=\"text-red-500 mr-2\">✗</span> {disadv}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n                  <h4 className=\"font-medium text-blue-700 mb-2\">Azure Databricks</h4>\n                  <ul className=\"text-sm text-gray-700 space-y-1 mb-3\">\n                    {cloudExecutiveSummary.databricksConsiderations.azure.advantages.map((adv, idx) => (\n                      <li key={`azure-adv-${idx}`} className=\"flex items-start\">\n                        <span className=\"text-green-500 mr-2\">✓</span> {adv}\n                      </li>\n                    ))}\n                  </ul>\n                  <ul className=\"text-sm text-gray-700 space-y-1\">\n                    {cloudExecutiveSummary.databricksConsiderations.azure.disadvantages.map((disadv, idx) => (\n                      <li key={`azure-disadv-${idx}`} className=\"flex items-start\">\n                        <span className=\"text-red-500 mr-2\">✗</span> {disadv}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n              <p className=\"mt-3 text-sm text-gray-600 italic\">Business impact: {cloudExecutiveSummary.databricksConsiderations.azure.businessImpact}</p>\n            </div>\n          </div>\n\n          {/* Business Priorities Section */}\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-xl transition-shadow mb-4\">\n            <h2 className=\"bg-gray-100 font-semibold p-3 text-gray-700\">Business Priorities Comparison</h2>\n            \n            {filteredPriorities.map((priority) => (\n              <div key={priority.id} className=\"border-t border-gray-200\">\n                <div \n                  className={`flex cursor-pointer hover:bg-gray-50 transition-colors ${expandedPriority === priority.id ? 'bg-blue-50' : ''}`}\n                  onClick={() => togglePriorityExpansion(priority.id)}\n                >\n                  <div className=\"w-1/4 p-4 font-medium flex items-center\">\n                    <div className=\"flex items-center\">\n                      <span className=\"text-2xl mr-2\">{priority.icon}</span>\n                      <span>{priority.title}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"w-1/3 p-4 border-l border-r border-gray-200\">\n                    <div className=\"text-sm text-amber-800 font-semibold\">AWS</div>\n                    <div className=\"mt-1 text-sm\">{priority.aws.summary}</div>\n                  </div>\n                  \n                  <div className=\"w-1/3 p-4\">\n                    <div className=\"text-sm text-blue-800 font-semibold\">Azure</div>\n                    <div className=\"mt-1 text-sm\">{priority.azure.summary}</div>\n                  </div>\n                  \n                  <div className=\"flex items-center px-4\">\n                    <svg \n                      className={`w-5 h-5 text-gray-500 transition-transform ${expandedPriority === priority.id ? 'transform rotate-180' : ''}`} \n                      fill=\"none\" \n                      viewBox=\"0 0 24 24\" \n                      stroke=\"currentColor\"\n                    >\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </div>\n                </div>\n                \n                {expandedPriority === priority.id && (\n                  <div className=\"p-4 bg-gray-50 border-t border-gray-200\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <h3 className=\"font-medium mb-2 text-amber-800\">AWS Strengths</h3>\n                        <ul className=\"list-disc pl-5 space-y-1 text-gray-700\">\n                          {priority.aws.strengths.map((strength, idx) => (\n                            <li key={`aws-strength-${idx}`}>{strength}</li>\n                          ))}\n                        </ul>\n                        <div className=\"mt-3 p-3 bg-amber-50 rounded-lg\">\n                          <h4 className=\"font-medium text-amber-800 text-sm\">Business Case</h4>\n                          <p className=\"text-sm text-gray-700 mt-1\">{priority.aws.businessCase}</p>\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <h3 className=\"font-medium mb-2 text-blue-800\">Azure Strengths</h3>\n                        <ul className=\"list-disc pl-5 space-y-1 text-gray-700\">\n                          {priority.azure.strengths.map((strength, idx) => (\n                            <li key={`azure-strength-${idx}`}>{strength}</li>\n                          ))}\n                        </ul>\n                        <div className=\"mt-3 p-3 bg-blue-50 rounded-lg\">\n                          <h4 className=\"font-medium text-blue-800 text-sm\">Business Case</h4>\n                          <p className=\"text-sm text-gray-700 mt-1\">{priority.azure.businessCase}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n          \n          {/* Industry Guidance Section */}\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-xl transition-shadow mb-4\">\n            <h2 className=\"bg-gray-100 font-semibold p-3 text-gray-700\">Industry-Specific Guidance</h2>\n            \n            {cloudExecutiveSummary.industryGuidance.map((industry, idx) => (\n              <div key={`industry-${idx}`} className=\"border-t border-gray-200\">\n                <div \n                  className={`flex cursor-pointer hover:bg-gray-50 transition-colors ${expandedIndustry === idx ? 'bg-purple-50' : ''}`}\n                  onClick={() => toggleIndustryExpansion(idx)}\n                >\n                  <div className=\"w-1/4 p-4 font-medium\">\n                    {industry.industry}\n                  </div>\n                  \n                  <div className=\"w-2/3 p-4 border-l border-gray-200\">\n                    <div className=\"text-sm text-gray-700\">{industry.recommendation}</div>\n                  </div>\n                  \n                  <div className=\"flex items-center px-4\">\n                    <svg \n                      className={`w-5 h-5 text-gray-500 transition-transform ${expandedIndustry === idx ? 'transform rotate-180' : ''}`} \n                      fill=\"none\" \n                      viewBox=\"0 0 24 24\" \n                      stroke=\"currentColor\"\n                    >\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </div>\n                </div>\n                \n                {expandedIndustry === idx && (\n                  <div className=\"p-4 bg-gray-50 border-t border-gray-200\">\n                    <h3 className=\"font-medium mb-2\">Key Considerations</h3>\n                    <ul className=\"list-disc pl-5 space-y-1 text-gray-700\">\n                      {industry.keyConsiderations.map((consideration, cidx) => (\n                        <li key={`consideration-${idx}-${cidx}`}>{consideration}</li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n          \n          {/* Cost Structure & Migration Section */}\n          <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow mb-4\">\n            <h2 className=\"text-xl font-semibold mb-4 text-center\">Strategic Implementation Considerations</h2>\n            \n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-medium text-gray-800 mb-3\">Cost Profile</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"bg-amber-50 p-4 rounded-lg border border-amber-100\">\n                  <h4 className=\"font-medium text-amber-800 mb-2\">AWS Cost Structure</h4>\n                  <div className=\"space-y-2 text-sm text-gray-700\">\n                    <p><span className=\"font-medium\">Enterprise Fit:</span> {cloudExecutiveSummary.costProfile.aws.enterpriseFit}</p>\n                    <p><span className=\"font-medium\">Optimization Approach:</span> {cloudExecutiveSummary.costProfile.aws.savingsApproach}</p>\n                    <p><span className=\"font-medium\">Typical Savings:</span> {cloudExecutiveSummary.costProfile.aws.typicalSavings}</p>\n                    <p><span className=\"font-medium\">Hidden Costs:</span> {cloudExecutiveSummary.costProfile.aws.hiddenCosts}</p>\n                  </div>\n                </div>\n                <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-100\">\n                  <h4 className=\"font-medium text-blue-800 mb-2\">Azure Cost Structure</h4>\n                  <div className=\"space-y-2 text-sm text-gray-700\">\n                    <p><span className=\"font-medium\">Enterprise Fit:</span> {cloudExecutiveSummary.costProfile.azure.enterpriseFit}</p>\n                    <p><span className=\"font-medium\">Optimization Approach:</span> {cloudExecutiveSummary.costProfile.azure.savingsApproach}</p>\n                    <p><span className=\"font-medium\">Typical Savings:</span> {cloudExecutiveSummary.costProfile.azure.typicalSavings}</p>\n                    <p><span className=\"font-medium\">Hidden Costs:</span> {cloudExecutiveSummary.costProfile.azure.hiddenCosts}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div>\n              <h3 className=\"text-lg font-medium text-gray-800 mb-3\">Migration Considerations</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n                  <h4 className=\"font-medium text-amber-800 mb-2\">AWS Migration Profile</h4>\n                  <div className=\"space-y-2 text-sm text-gray-700\">\n                    <p><span className=\"font-medium\">Time to Value:</span> {cloudExecutiveSummary.migrationConsiderations.aws.timeToValue}</p>\n                    <p><span className=\"font-medium\">Skills Gap:</span> {cloudExecutiveSummary.migrationConsiderations.aws.skillsGap}</p>\n                    <p><span className=\"font-medium\">Enterprise Readiness:</span> {cloudExecutiveSummary.migrationConsiderations.aws.enterpriseReadiness}</p>\n                    <p><span className=\"font-medium\">Partner Ecosystem:</span> {cloudExecutiveSummary.migrationConsiderations.aws.partnersEcosystem}</p>\n                  </div>\n                </div>\n                <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n                  <h4 className=\"font-medium text-blue-800 mb-2\">Azure Migration Profile</h4>\n                  <div className=\"space-y-2 text-sm text-gray-700\">\n                    <p><span className=\"font-medium\">Time to Value:</span> {cloudExecutiveSummary.migrationConsiderations.azure.timeToValue}</p>\n                    <p><span className=\"font-medium\">Skills Gap:</span> {cloudExecutiveSummary.migrationConsiderations.azure.skillsGap}</p>\n                    <p><span className=\"font-medium\">Enterprise Readiness:</span> {cloudExecutiveSummary.migrationConsiderations.azure.enterpriseReadiness}</p>\n                    <p><span className=\"font-medium\">Partner Ecosystem:</span> {cloudExecutiveSummary.migrationConsiderations.azure.partnersEcosystem}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n\n      {/* Service Details Modal */}\n      {selectedService && (\n        <div \n          className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\" \n          onClick={() => setSelectedService(null)}\n        >\n          <div \n            className=\"bg-white p-6 rounded-lg max-w-md\"\n            onClick={(e) => e.stopPropagation()}\n            style={{ animation: 'scaleIn 0.2s ease-out' }}\n          >\n            <h3 className=\"text-xl font-semibold mb-2\">{selectedService.service}</h3>\n            <p className=\"text-gray-600\">{selectedService.description}</p>\n            <p className=\"text-sm text-gray-500 mt-2\">Category: {selectedService.category}</p>\n            <button\n              className=\"mt-4 btn btn-gradient\"\n              onClick={() => setSelectedService(null)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* CSS animation for modal */}\n      <style jsx>{`\n        @keyframes scaleIn {\n          from { transform: scale(0.9); opacity: 0; }\n          to { transform: scale(1); opacity: 1; }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default AwsVsAzureComparison;","import React, { useState } from 'react';\nimport '../styles/buttons.css';\n\n// Enhanced flow step explanations with more technical details\nconst flowExplanations = {\n  // AWS Flow\n  'Simplex CC': {\n    title: 'Simplex CC',\n    description: 'Source application generating transaction data and events',\n    details: 'The starting point of data collection, where raw transaction data is generated and captured for processing. Generates structured event data for payment processing systems.'\n  },\n  'Kafka': {\n    title: 'Apache Kafka',\n    description: 'Event streaming platform for high-throughput data pipelines',\n    details: 'Manages real-time data streams and provides a buffer between data producers and consumers. Offers fault-tolerant storage with configurable retention periods and scalable throughput. Supports multiple consumers for the same data.'\n  },\n  'S3': {\n    title: 'Amazon S3',\n    description: 'Object storage for raw and processed data',\n    details: 'Stores the raw data from Kafka in a durable, highly available storage layer. Acts as the data lake for all incoming transaction data. Supports versioning, lifecycle policies, and multiple storage tiers.'\n  },\n  'Snowflake': {\n    title: 'Snowflake',\n    description: 'Cloud data warehouse for analytics',\n    details: 'Processes and transforms the raw data from S3 into structured, queryable datasets ready for analysis. Features separation of storage and compute, allowing for independent scaling of resources based on workload demands.'\n  },\n  'DBT': {\n    title: 'DBT (Data Build Tool)',\n    description: 'Transformation and modeling tool',\n    details: 'Applies business logic, data cleaning, and transformations to prepare the data for analytics consumption. Uses SQL-based transformations with version control, testing, and documentation capabilities. Creates a transformation layer between raw data and analytics.'\n  },\n  'Amplitude': {\n    title: 'Amplitude',\n    description: 'Product analytics platform',\n    details: 'Provides insights, visualizations, and analytics on the processed data for business users and stakeholders. Offers user behavior analysis, funnel analysis, retention metrics, and custom event tracking for business intelligence.'\n  },\n  \n  // Azure Flow\n  'Nuvei App': {\n    title: 'Nuvei App',\n    description: 'Payment processing application',\n    details: 'Payment processing application that generates events and data that need to be processed and analyzed. Produces payment transaction events, user interactions, and system health metrics.'\n  },\n  'Azure Storage': {\n    title: 'Azure Data Lake Storage Gen2',\n    description: 'Hierarchical namespace storage for data lakes',\n    details: 'Combines the scalability of blob storage with the hierarchical namespace capabilities of a file system. Provides fine-grained ACLs, optimized directory operations, and high-performance access for big data analytics workloads.'\n  },\n  'Databricks': {\n    title: 'Azure Databricks',\n    description: 'Apache Spark-based analytics platform',\n    details: 'Processes data using Spark, combines Delta Lake for reliability, and enables data science workloads with collaborative notebooks and ML workflows. Implements the medallion architecture with Bronze (raw), Silver (validated), and Gold (aggregated) data layers for progressive refinement.'\n  },\n  'Power BI': {\n    title: 'Power BI',\n    description: 'Business intelligence and visualization tool',\n    details: 'Connects to Databricks to visualize processed data and deliver insights to business users through interactive dashboards. Supports direct query to Databricks clusters, scheduled refreshes, and enterprise data governance.'\n  }\n};\n\n// Architecture comparison data for the table\nconst architectureComparison = [\n  {\n    aspect: 'Processing Model',\n    aws: 'Separate specialized tools (Snowflake + DBT)',\n    azure: 'Integrated platform (Databricks)',\n    impact: 'Azure simplifies management with fewer tools; AWS offers more specialized capabilities for each stage.'\n  },\n  {\n    aspect: 'Data Quality Control',\n    aws: 'DBT testing and transformation validation',\n    azure: 'Medallion architecture (Bronze/Silver/Gold)',\n    impact: 'Both approaches ensure data quality, but Databricks medallion architecture offers more structured progression.'\n  },\n  {\n    aspect: 'ACID Transactions',\n    aws: 'Available in Snowflake; not native to S3',\n    azure: 'Native with Delta Lake throughout the pipeline',\n    impact: 'Azure offers consistent ACID transactions from ingestion to consumption; AWS requires moving to Snowflake first.'\n  },\n  {\n    aspect: 'Scalability',\n    aws: 'Independent scaling for each component',\n    azure: 'Unified auto-scaling through Databricks',\n    impact: 'AWS allows more granular scaling; Azure simplifies with unified scaling.'\n  },\n  {\n    aspect: 'Cost Model',\n    aws: 'Pay separately for each service',\n    azure: 'Consolidated billing with workload optimizations',\n    impact: 'AWS may have more predictable per-service costs; Azure can optimize across workloads more easily.'\n  }\n];\n\nconst DataProcessingFlows = () => {\n  const [selectedFlowStep, setSelectedFlowStep] = useState(null);\n  const [activeTab, setActiveTab] = useState('visual');\n\n  return (\n    <div>\n      {/* Header with purple-to-blue gradient */}\n      <div \n        className=\"bg-gradient-to-r from-blue-600 to-purple-600 p-6 rounded-xl shadow-lg mb-4 text-center\"\n      >\n        <h1 className=\"text-3xl font-bold text-white mb-2\">Data Processing Flows</h1>\n        <p className=\"text-white/80\">Compare cloud data processing pipelines across AWS and Azure</p>\n      </div>\n\n      {/* Tab navigation */}\n      <div className=\"flex mb-4 border-b\">\n        <button \n          onClick={() => setActiveTab('visual')}\n          className={`px-4 py-2 font-medium ${activeTab === 'visual' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-500'}`}\n        >\n          Visual Comparison\n        </button>\n        <button \n          onClick={() => setActiveTab('architecture')}\n          className={`px-4 py-2 font-medium ${activeTab === 'architecture' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-500'}`}\n        >\n          Architecture Comparison\n        </button>\n        <button \n          onClick={() => setActiveTab('detail')}\n          className={`px-4 py-2 font-medium ${activeTab === 'detail' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-500'}`}\n        >\n          Detailed Breakdown\n        </button>\n      </div>\n\n      {/* Visual Flow Comparison Tab */}\n      {activeTab === 'visual' && (\n        <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow\">\n          <h2 className=\"text-2xl font-semibold mb-6 text-center\">Pipeline Architecture Comparison</h2>\n          \n          {/* Legend */}\n          <div className=\"flex justify-center mb-8 flex-wrap gap-4\">\n            <div className=\"flex items-center\">\n              <span className=\"inline-block w-4 h-4 rounded-full bg-green-500 mr-2\"></span>\n              <span className=\"text-sm\">Data Source</span>\n            </div>\n            <div className=\"flex items-center\">\n              <span className=\"inline-block w-4 h-4 rounded-full bg-blue-500 mr-2\"></span>\n              <span className=\"text-sm\">Ingestion</span>\n            </div>\n            <div className=\"flex items-center\">\n              <span className=\"inline-block w-4 h-4 rounded-full bg-purple-500 mr-2\"></span>\n              <span className=\"text-sm\">Storage</span>\n            </div>\n            <div className=\"flex items-center\">\n              <span className=\"inline-block w-4 h-4 rounded-full bg-amber-500 mr-2\"></span>\n              <span className=\"text-sm\">Processing/Transformation</span>\n            </div>\n            <div className=\"flex items-center\">\n              <span className=\"inline-block w-4 h-4 rounded-full bg-red-500 mr-2\"></span>\n              <span className=\"text-sm\">Analytics/Visualization</span>\n            </div>\n          </div>\n          \n          {/* Horizontal Flow Comparison */}\n          <div className=\"overflow-x-auto\">\n            <div className=\"min-w-[900px]\"> {/* Ensure minimum width for small screens */}\n              <div className=\"flex flex-col space-y-16\">\n                {/* AWS Flow */}\n                <div>\n                  <h3 className=\"text-xl font-semibold text-amber-700 mb-4\">AWS Data Pipeline</h3>\n                  <div className=\"relative h-[180px]\">\n                    {/* Source */}\n                    <div \n                      className=\"absolute left-0 top-0 w-[120px] h-[100px] border border-green-300 rounded-lg bg-gradient-to-br from-green-50 to-green-100 flex flex-col items-center justify-center p-2 cursor-pointer shadow-sm hover:shadow-md transition-shadow\"\n                      onClick={() => setSelectedFlowStep(flowExplanations['Simplex CC'])}\n                    >\n                      <div className=\"font-semibold text-center\">Simplex CC</div>\n                      <div className=\"text-xs text-center mt-1\">Transaction Source</div>\n                    </div>\n                    \n                    {/* Kafka */}\n                    <div \n                      className=\"absolute left-[180px] top-0 w-[120px] h-[100px] border border-blue-300 rounded-lg bg-gradient-to-br from-blue-50 to-blue-100 flex flex-col items-center justify-center p-2 cursor-pointer shadow-sm hover:shadow-md transition-shadow\"\n                      onClick={() => setSelectedFlowStep(flowExplanations['Kafka'])}\n                    >\n                      <div className=\"font-semibold text-center\">Apache Kafka</div>\n                      <div className=\"text-xs text-center mt-1\">Event Streaming</div>\n                    </div>\n                    \n                    {/* S3 */}\n                    <div \n                      className=\"absolute left-[360px] top-0 w-[120px] h-[100px] border border-purple-300 rounded-lg bg-gradient-to-br from-purple-50 to-purple-100 flex flex-col items-center justify-center p-2 cursor-pointer shadow-sm hover:shadow-md transition-shadow\"\n                      onClick={() => setSelectedFlowStep(flowExplanations['S3'])}\n                    >\n                      <div className=\"font-semibold text-center\">Amazon S3</div>\n                      <div className=\"text-xs text-center mt-1\">Data Lake Storage</div>\n                    </div>\n                    \n                    {/* Snowflake */}\n                    <div \n                      className=\"absolute left-[540px] top-[10px] w-[120px] h-[90px] border border-amber-300 rounded-lg bg-gradient-to-br from-amber-50 to-amber-100 flex flex-col items-center justify-center p-2 cursor-pointer shadow-sm hover:shadow-md transition-shadow\"\n                      onClick={() => setSelectedFlowStep(flowExplanations['Snowflake'])}\n                    >\n                      <div className=\"font-semibold text-center\">Snowflake</div>\n                      <div className=\"text-xs text-center mt-1\">Data Warehouse</div>\n                    </div>\n                    \n                    {/* DBT - offset slightly */}\n                    <div \n                      className=\"absolute left-[540px] top-[120px] w-[120px] h-[60px] border border-amber-300 rounded-lg bg-gradient-to-br from-amber-50 to-amber-100 flex flex-col items-center justify-center p-2 cursor-pointer shadow-sm hover:shadow-md transition-shadow\"\n                      onClick={() => setSelectedFlowStep(flowExplanations['DBT'])}\n                    >\n                      <div className=\"font-semibold text-center\">DBT</div>\n                      <div className=\"text-xs text-center mt-1\">Transformation</div>\n                    </div>\n                    \n                    {/* Amplitude */}\n                    <div \n                      className=\"absolute left-[720px] top-0 w-[120px] h-[100px] border border-red-300 rounded-lg bg-gradient-to-br from-red-50 to-red-100 flex flex-col items-center justify-center p-2 cursor-pointer shadow-sm hover:shadow-md transition-shadow\"\n                      onClick={() => setSelectedFlowStep(flowExplanations['Amplitude'])}\n                    >\n                      <div className=\"font-semibold text-center\">Amplitude</div>\n                      <div className=\"text-xs text-center mt-1\">Analytics Platform</div>\n                    </div>\n                    \n                    {/* Connection Lines - Using SVG for better control */}\n                    <svg className=\"absolute inset-0 w-full h-full pointer-events-none\" width=\"900\" height=\"180\">\n                      {/* Simplex to Kafka */}\n                      <path \n                        d=\"M120,50 L180,50\" \n                        stroke=\"#22c55e\" \n                        strokeWidth=\"2\" \n                        fill=\"none\"\n                      />\n                      <polygon points=\"175,45 185,50 175,55\" fill=\"#22c55e\" />\n                      \n                      {/* Kafka to S3 */}\n                      <path \n                        d=\"M300,50 L360,50\" \n                        stroke=\"#3b82f6\" \n                        strokeWidth=\"2\" \n                        fill=\"none\"\n                      />\n                      <polygon points=\"355,45 365,50 355,55\" fill=\"#3b82f6\" />\n                      \n                      {/* S3 to Snowflake */}\n                      <path \n                        d=\"M480,50 L540,50\" \n                        stroke=\"#a855f7\" \n                        strokeWidth=\"2\" \n                        fill=\"none\"\n                      />\n                      <polygon points=\"535,45 545,50 535,55\" fill=\"#a855f7\" />\n                      \n                      {/* Kafka to Snowflake (alternative path) */}\n                      <path \n                        d=\"M300,70 C400,100 460,100 540,70\" \n                        stroke=\"#3b82f6\" \n                        strokeWidth=\"2\" \n                        strokeDasharray=\"5,5\"\n                        fill=\"none\"\n                      />\n                      <polygon points=\"535,75 545,70 535,65\" fill=\"#3b82f6\" />\n                      \n                      {/* S3 to DBT (alternative path) */}\n                      <path \n                        d=\"M480,70 C500,120 520,140 540,140\" \n                        stroke=\"#a855f7\" \n                        strokeWidth=\"2\" \n                        strokeDasharray=\"5,5\"\n                        fill=\"none\"\n                      />\n                      <polygon points=\"535,145 545,140 535,135\" fill=\"#a855f7\" />\n                      \n                      {/* Snowflake to DBT */}\n                      <path \n                        d=\"M600,100 L600,120\" \n                        stroke=\"#f59e0b\" \n                        strokeWidth=\"2\" \n                        fill=\"none\"\n                      />\n                      <polygon points=\"595,115 600,125 605,115\" fill=\"#f59e0b\" />\n                      \n                      {/* DBT to Amplitude */}\n                      <path \n                        d=\"M660,140 C680,120 700,80 720,50\" \n                        stroke=\"#f59e0b\" \n                        strokeWidth=\"2\" \n                        fill=\"none\"\n                      />\n                      <polygon points=\"715,55 725,50 715,45\" fill=\"#f59e0b\" />\n                      \n                      {/* Snowflake to Amplitude */}\n                      <path \n                        d=\"M660,50 L720,50\" \n                        stroke=\"#f59e0b\" \n                        strokeWidth=\"2\" \n                        fill=\"none\"\n                      />\n                      <polygon points=\"715,45 725,50 715,55\" fill=\"#f59e0b\" />\n                    </svg>\n                  </div>\n                </div>\n                \n                {/* Azure Flow */}\n                <div>\n                  <h3 className=\"text-xl font-semibold text-blue-700 mb-4\">Azure Data Pipeline</h3>\n                  <div className=\"relative h-[140px]\">\n                    {/* Nuvei App */}\n                    <div \n                      className=\"absolute left-0 top-0 w-[120px] h-[100px] border border-green-300 rounded-lg bg-gradient-to-br from-green-50 to-green-100 flex flex-col items-center justify-center p-2 cursor-pointer shadow-sm hover:shadow-md transition-shadow\"\n                      onClick={() => setSelectedFlowStep(flowExplanations['Nuvei App'])}\n                    >\n                      <div className=\"font-semibold text-center\">Nuvei App</div>\n                      <div className=\"text-xs text-center mt-1\">Payment Processing</div>\n                    </div>\n                    \n                    {/* Kafka */}\n                    <div \n                      className=\"absolute left-[180px] top-0 w-[120px] h-[100px] border border-blue-300 rounded-lg bg-gradient-to-br from-blue-50 to-blue-100 flex flex-col items-center justify-center p-2 cursor-pointer shadow-sm hover:shadow-md transition-shadow\"\n                      onClick={() => setSelectedFlowStep(flowExplanations['Kafka'])}\n                    >\n                      <div className=\"font-semibold text-center\">Apache Kafka</div>\n                      <div className=\"text-xs text-center mt-1\">Event Streaming</div>\n                    </div>\n                    \n                    {/* Azure Storage */}\n                    <div \n                      className=\"absolute left-[360px] top-0 w-[120px] h-[100px] border border-purple-300 rounded-lg bg-gradient-to-br from-purple-50 to-purple-100 flex flex-col items-center justify-center p-2 cursor-pointer shadow-sm hover:shadow-md transition-shadow\"\n                      onClick={() => setSelectedFlowStep(flowExplanations['Azure Storage'])}\n                    >\n                      <div className=\"font-semibold text-center\">Azure ADLS Gen2</div>\n                      <div className=\"text-xs text-center mt-1\">Hierarchical Storage</div>\n                    </div>\n                    \n                    {/* Databricks */}\n                    <div \n                      className=\"absolute left-[540px] top-0 w-[120px] h-[100px] border border-amber-300 rounded-lg bg-gradient-to-br from-amber-50 to-amber-100 flex flex-col items-center justify-center p-2 cursor-pointer shadow-sm hover:shadow-md transition-shadow\"\n                      onClick={() => setSelectedFlowStep(flowExplanations['Databricks'])}\n                    >\n                      <div className=\"font-semibold text-center\">Azure Databricks</div>\n                      <div className=\"text-xs text-center mt-1\">Processing + Delta Lake</div>\n                    </div>\n                    \n                    {/* Power BI */}\n                    <div \n                      className=\"absolute left-[720px] top-0 w-[120px] h-[100px] border border-red-300 rounded-lg bg-gradient-to-br from-red-50 to-red-100 flex flex-col items-center justify-center p-2 cursor-pointer shadow-sm hover:shadow-md transition-shadow\"\n                      onClick={() => setSelectedFlowStep(flowExplanations['Power BI'])}\n                    >\n                      <div className=\"font-semibold text-center\">Power BI</div>\n                      <div className=\"text-xs text-center mt-1\">Analytics & Dashboards</div>\n                    </div>\n                    \n                    {/* Connection Lines - Using SVG */}\n                    <svg className=\"absolute inset-0 w-full h-full pointer-events-none\" width=\"900\" height=\"140\">\n                      {/* Nuvei to Kafka */}\n                      <path \n                        d=\"M120,50 L180,50\" \n                        stroke=\"#22c55e\" \n                        strokeWidth=\"2\" \n                        fill=\"none\"\n                      />\n                      <polygon points=\"175,45 185,50 175,55\" fill=\"#22c55e\" />\n                      \n                      {/* Kafka to Azure Storage */}\n                      <path \n                        d=\"M300,50 L360,50\" \n                        stroke=\"#3b82f6\" \n                        strokeWidth=\"2\" \n                        fill=\"none\"\n                      />\n                      <polygon points=\"355,45 365,50 355,55\" fill=\"#3b82f6\" />\n                      \n                      {/* Azure Storage to Databricks */}\n                      <path \n                        d=\"M480,50 L540,50\" \n                        stroke=\"#a855f7\" \n                        strokeWidth=\"2\" \n                        fill=\"none\"\n                      />\n                      <polygon points=\"535,45 545,50 535,55\" fill=\"#a855f7\" />\n                      \n                      {/* Kafka to Databricks (direct ingestion) */}\n                      <path \n                        d=\"M300,70 C400,100 460,100 540,70\" \n                        stroke=\"#3b82f6\" \n                        strokeWidth=\"2\" \n                        strokeDasharray=\"5,5\"\n                        fill=\"none\"\n                      />\n                      <polygon points=\"535,75 545,70 535,65\" fill=\"#3b82f6\" />\n                      \n                      {/* Databricks to ADLS (write back) */}\n                      <path \n                        d=\"M550,70 C500,100 450,100 430,70\" \n                        stroke=\"#f59e0b\" \n                        strokeWidth=\"2\" \n                        strokeDasharray=\"5,5\"\n                        fill=\"none\"\n                      />\n                      <polygon points=\"435,75 425,70 435,65\" fill=\"#f59e0b\" />\n                      \n                      {/* Databricks to Power BI */}\n                      <path \n                        d=\"M660,50 L720,50\" \n                        stroke=\"#f59e0b\" \n                        strokeWidth=\"2\" \n                        fill=\"none\"\n                      />\n                      <polygon points=\"715,45 725,50 715,55\" fill=\"#f59e0b\" />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Flow Legend */}\n              <div className=\"mt-8 border-t pt-4\">\n                <h3 className=\"text-lg font-medium mb-2\">Flow Legend</h3>\n                <div className=\"flex flex-wrap gap-4\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-16 h-1 bg-gray-500 mr-2\"></div>\n                    <span className=\"text-sm\">Standard data flow</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <div className=\"w-16 h-1 bg-gray-500 mr-2\" style={{ borderTop: '2px dashed #6b7280' }}></div>\n                    <span className=\"text-sm\">Alternative/optional data flow</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Architecture Comparison Tab */}\n      {activeTab === 'architecture' && (\n        <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow\">\n          <h2 className=\"text-2xl font-semibold mb-6 text-center\">Architecture Characteristics Comparison</h2>\n          \n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full border-collapse\">\n              <thead>\n                <tr className=\"bg-gray-50\">\n                  <th className=\"border px-4 py-3 text-left\">Architecture Aspect</th>\n                  <th className=\"border px-4 py-3 text-left bg-amber-50\">AWS Approach</th>\n                  <th className=\"border px-4 py-3 text-left bg-blue-50\">Azure Approach</th>\n                  <th className=\"border px-4 py-3 text-left\">Business Impact</th>\n                </tr>\n              </thead>\n              <tbody>\n                {architectureComparison.map((item, idx) => (\n                  <tr key={`arch-${idx}`} className={idx % 2 === 0 ? 'bg-gray-50' : 'bg-white'}>\n                    <td className=\"border px-4 py-3 font-medium\">{item.aspect}</td>\n                    <td className=\"border px-4 py-3 bg-amber-50/30\">{item.aws}</td>\n                    <td className=\"border px-4 py-3 bg-blue-50/30\">{item.azure}</td>\n                    <td className=\"border px-4 py-3 text-gray-700\">{item.impact}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          \n          <div className=\"mt-8 p-4 bg-gray-50 rounded-lg border border-gray-200\">\n            <h3 className=\"font-semibold text-lg mb-2\">Key Architecture Differences</h3>\n            <ul className=\"list-disc pl-5 space-y-2\">\n              <li className=\"text-gray-700\">\n                <span className=\"font-medium\">AWS Pipeline</span>: Uses a best-of-breed approach with separate specialized tools for each pipeline stage.\n              </li>\n              <li className=\"text-gray-700\">\n                <span className=\"font-medium\">Azure Pipeline</span>: Leverages an integrated platform (Databricks) that handles multiple pipeline stages with unified governance.\n              </li>\n              <li className=\"text-gray-700\">\n                <span className=\"font-medium\">Data Quality Approach</span>: AWS implements quality controls through DBT tests and transformations, while Azure uses the medallion architecture with progressive data refinement.\n              </li>\n              <li className=\"text-gray-700\">\n                <span className=\"font-medium\">Integration Complexity</span>: AWS requires more integration work between components but offers more flexibility in tool selection; Azure simplifies integration but with less flexibility.\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n\n      {/* Detailed Breakdown Tab */}\n      {activeTab === 'detail' && (\n        <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow\">\n          <h2 className=\"text-2xl font-semibold mb-6 text-center\">Component Detailed Comparison</h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* AWS Components Details */}\n            <div>\n              <h3 className=\"text-xl font-medium text-amber-800 mb-4 pb-2 border-b border-amber-200\">AWS Pipeline Components</h3>\n              \n              <div className=\"space-y-6\">\n                <div className=\"p-4 border rounded-lg hover:shadow-md transition-shadow\">\n                  <h4 className=\"font-semibold text-amber-700 mb-2\">Data Flow Architecture</h4>\n                  <ul className=\"list-disc pl-5 space-y-2 text-gray-700\">\n                    <li>Multiple specialized tools connected through well-defined interfaces</li>\n                    <li>Clear separation between storage (S3) and processing (Snowflake)</li>\n                    <li>Transformation layer (DBT) sits on top of processing layer</li>\n                    <li>Analytics (Amplitude) consumes processed and transformed data</li>\n                    <li>Each component can be replaced independently</li>\n                  </ul>\n                </div>\n                \n                <div className=\"p-4 border rounded-lg hover:shadow-md transition-shadow\">\n                  <h4 className=\"font-semibold text-amber-700 mb-2\">Data Processing Characteristics</h4>\n                  <ul className=\"list-disc pl-5 space-y-2 text-gray-700\">\n                    <li>Batch-oriented processing with scheduled transformations</li>\n                    <li>SQL-based transformations through Snowflake and DBT</li>\n                    <li>Separate data modeling and transformation layer</li>\n                    <li>Data quality enforced through DBT tests and transformations</li>\n                    <li>Each processing stage can be scaled independently</li>\n                  </ul>\n                </div>\n                \n                <div className=\"p-4 border rounded-lg hover:shadow-md transition-shadow\">\n                  <h4 className=\"font-semibold text-amber-700 mb-2\">Key Advantages</h4>\n                  <ul className=\"list-disc pl-5 space-y-2 text-gray-700\">\n                    <li>Best-of-breed tools for each specific function</li>\n                    <li>Greater flexibility to replace individual components</li>\n                    <li>Specialized optimization for each processing stage</li>\n                    <li>Clear separation of concerns across the pipeline</li>\n                    <li>Amplitude provides product-specific analytics capabilities</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            \n            {/* Azure Components Details */}\n            <div>\n              <h3 className=\"text-xl font-medium text-blue-800 mb-4 pb-2 border-b border-blue-200\">Azure Pipeline Components</h3>\n              \n              <div className=\"space-y-6\">\n                <div className=\"p-4 border rounded-lg hover:shadow-md transition-shadow\">\n                  <h4 className=\"font-semibold text-blue-700 mb-2\">Data Flow Architecture</h4>\n                  <ul className=\"list-disc pl-5 space-y-2 text-gray-700\">\n                    <li>Integrated processing platform through Databricks</li>\n                    <li>Storage (ADLS Gen2) tightly integrated with processing</li>\n                    <li>Delta Lake provides ACID transactions throughout the pipeline</li>\n                    <li>Processing and transformation happen within the same platform</li>\n                    <li>Direct connection between processing and visualization (Power BI)</li>\n                  </ul>\n                </div>\n                \n                <div className=\"p-4 border rounded-lg hover:shadow-md transition-shadow\">\n                  <h4 className=\"font-semibold text-blue-700 mb-2\">Data Processing Characteristics</h4>\n                  <ul className=\"list-disc pl-5 space-y-2 text-gray-700\">\n                    <li>Medallion architecture for progressive data refinement</li>\n                    <li>Bronze layer: Raw data ingestion with minimal processing</li>\n                    <li>Silver layer: Cleansed, validated data with schema enforcement</li>\n                    <li>Gold layer: Business-level aggregations and metrics</li>\n                    <li>Support for both batch and streaming processing</li>\n                  </ul>\n                </div>\n                \n                <div className=\"p-4 border rounded-lg hover:shadow-md transition-shadow\">\n                  <h4 className=\"font-semibold text-blue-700 mb-2\">Key Advantages</h4>\n                  <ul className=\"list-disc pl-5 space-y-2 text-gray-700\">\n                    <li>Unified platform with consistent governance</li>\n                    <li>Simplified management with fewer components</li>\n                    <li>ACID transactions throughout the pipeline</li>\n                    <li>Native support for machine learning workloads</li>\n                    <li>Tight integration with Microsoft ecosystem (Power BI, Azure ML)</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"mt-8 p-4 bg-gradient-to-r from-blue-50 to-amber-50 rounded-lg border border-gray-200\">\n            <h3 className=\"font-semibold text-lg mb-2\">Implementation Considerations</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <h4 className=\"font-medium text-amber-800 mb-2\">When to Choose AWS Approach</h4>\n                <ul className=\"list-disc pl-5 space-y-1 text-gray-700\">\n                  <li>Need for specific capabilities in individual components</li>\n                  <li>Complex transformation requirements best suited for DBT</li>\n                  <li>Teams with specialized skills for each component</li>\n                  <li>Product analytics is the primary consumption pattern</li>\n                </ul>\n              </div>\n              <div>\n                <h4 className=\"font-medium text-blue-800 mb-2\">When to Choose Azure Approach</h4>\n                <ul className=\"list-disc pl-5 space-y-1 text-gray-700\">\n                  <li>Preference for unified platform with consistent governance</li>\n                  <li>Need for integrated machine learning capabilities</li>\n                  <li>Teams with data engineering and Spark expertise</li>\n                  <li>Business intelligence is the primary consumption pattern</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Flow Step Details Modal - Keep the existing modal */}\n      {selectedFlowStep && (\n        <div \n          className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\" \n          onClick={() => setSelectedFlowStep(null)}\n        >\n          <div \n            className=\"bg-white p-6 rounded-lg max-w-md w-full\"\n            onClick={(e) => e.stopPropagation()}\n            style={{ animation: 'scaleIn 0.2s ease-out' }}\n          >\n            <h3 className=\"text-xl font-semibold mb-2\">{selectedFlowStep.title}</h3>\n            <p className=\"text-gray-600 font-medium\">{selectedFlowStep.description}</p>\n            <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n              <p className=\"text-gray-700\">{selectedFlowStep.details}</p>\n            </div>\n            <button\n              className=\"mt-4 btn btn-gradient\"\n              onClick={() => setSelectedFlowStep(null)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Animation styles */}\n      <style jsx>{`\n        @keyframes scaleIn {\n          from { transform: scale(0.9); opacity: 0; }\n          to { transform: scale(1); opacity: 1; }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default DataProcessingFlows;","import React from 'react';\n\nconst CloudStorageComparison = () => {\n  const comparisonData = [\n    { azure: 'Azure Blob Storage', aws: 'Amazon S3', differences: 'Core object storage services with similar fundamentals' },\n    { azure: 'Storage Account', aws: 'S3 Bucket + IAM', differences: 'Azure requires a Storage Account container for all storage services' },\n    { azure: 'Blob Containers', aws: 'S3 Buckets', differences: 'Similar concept but S3 buckets are global namespace' },\n    { azure: 'Access Tiers (Hot/Cool/Archive)', aws: 'S3 Standard/S3 IA/Glacier', differences: 'Similar concept, different retrieval times and pricing' },\n    { azure: 'Lifecycle Management', aws: 'S3 Lifecycle Policies', differences: 'Nearly identical functionality, different configuration interface' },\n    { azure: 'Soft Delete', aws: 'S3 Versioning + Lifecycle', differences: 'Azure\\'s approach is simpler but less flexible' },\n    { azure: 'Blob Leases', aws: 'S3 Object Lock', differences: 'Azure\\'s leasing is more transaction-oriented' },\n    { azure: 'Azure Data Lake Storage Gen2', aws: 'S3 + Athena', differences: 'ADLS Gen2 builds on Blob Storage with hierarchical namespace' },\n    { azure: 'Azure CDN', aws: 'CloudFront', differences: 'Similar functionality for content delivery' },\n    { azure: 'Azure Files', aws: 'Amazon EFS', differences: 'SMB file shares vs NFS file system' }\n  ];\n\n  const architecturalDifferences = [\n    {\n      title: 'Storage Account Structure',\n      aws: 'Direct creation of S3 buckets',\n      azure: 'Storage Account required as container for blobs, files, queues, tables'\n    },\n    {\n      title: 'Data Access Control',\n      aws: 'IAM + Bucket Policies (more flexible)',\n      azure: 'Azure AD + SAS Tokens (more integrated with MS ecosystem)'\n    },\n    {\n      title: 'Analytics Integration',\n      aws: 'S3 → Athena/EMR/SageMaker',\n      azure: 'Blob Storage → Databricks/Synapse/Azure ML'\n    },\n    {\n      title: 'Performance Considerations',\n      aws: 'S3 has higher baseline throughput',\n      azure: 'Premium Blob Storage offers more consistent performance'\n    }\n  ];\n\n  return (\n    <div>\n      {/* Header with blue-to-purple gradient */}\n      <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 p-6 rounded-xl shadow-lg mb-4 text-center\">\n        <h1 className=\"text-3xl font-bold text-white mb-2\">Azure Blob Storage vs AWS S3</h1>\n        <p className=\"text-white/80\">Cloud Storage Comparison</p>\n      </div>\n\n      {/* Main comparison table */}\n      <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow mb-4\">\n        <h2 className=\"text-2xl font-semibold mb-4 text-center\">Service Mapping</h2>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full\">\n            <thead>\n              <tr>\n                <th className=\"px-4 py-2 border-b-2 text-left bg-blue-50\">Azure Concept</th>\n                <th className=\"px-4 py-2 border-b-2 text-left bg-amber-50\">AWS Equivalent</th>\n                <th className=\"px-4 py-2 border-b-2 text-left\">Key Differences</th>\n              </tr>\n            </thead>\n            <tbody>\n              {comparisonData.map((item, idx) => (\n                <tr key={`item-${idx}`} className=\"border-b hover:bg-gray-50\">\n                  <td className=\"px-4 py-3 bg-blue-50/30 font-medium\">{item.azure}</td>\n                  <td className=\"px-4 py-3 bg-amber-50/30 font-medium\">{item.aws}</td>\n                  <td className=\"px-4 py-3\">{item.differences}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Architectural differences */}\n      <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow\">\n        <h2 className=\"text-2xl font-semibold mb-4 text-center\">High-Level Architectural Differences</h2>\n        <div className=\"grid md:grid-cols-2 gap-4\">\n          {architecturalDifferences.map((diff, idx) => (\n            <div key={`arch-${idx}`} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\n              <h3 className=\"text-lg font-semibold mb-2 text-purple-700\">{diff.title}</h3>\n              <div className=\"flex flex-col space-y-2\">\n                <div className=\"flex items-start\">\n                  <div className=\"w-20 flex-shrink-0\">\n                    <span className=\"inline-block px-2 py-1 bg-blue-100 text-blue-800 rounded text-sm\">Azure</span>\n                  </div>\n                  <p className=\"ml-2\">{diff.azure}</p>\n                </div>\n                <div className=\"flex items-start\">\n                  <div className=\"w-20 flex-shrink-0\">\n                    <span className=\"inline-block px-2 py-1 bg-amber-100 text-amber-800 rounded text-sm\">AWS</span>\n                  </div>\n                  <p className=\"ml-2\">{diff.aws}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Usage Examples section (optional) */}\n      <div className=\"mt-4 bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow\">\n        <h2 className=\"text-2xl font-semibold mb-4 text-center\">Integration with Databricks</h2>\n        <div className=\"grid md:grid-cols-2 gap-6\">\n          <div className=\"border-r pr-4\">\n            <h3 className=\"text-xl font-medium mb-3 text-blue-700\">Azure Blob Storage + Databricks</h3>\n            <ul className=\"list-disc pl-5 space-y-2\">\n              <li>Native integration through Azure Databricks service</li>\n              <li>Simplified authentication with Azure managed identity</li>\n              <li>Direct mount points with DBFS</li>\n              <li>Optimized for Azure Synapse Analytics integration</li>\n            </ul>\n          </div>\n          <div className=\"pl-4\">\n            <h3 className=\"text-xl font-medium mb-3 text-amber-700\">AWS S3 + Databricks</h3>\n            <ul className=\"list-disc pl-5 space-y-2\">\n              <li>Integration via S3 APIs and AWS Databricks</li>\n              <li>IAM role-based access control</li>\n              <li>S3A connector for Spark</li>\n              <li>Compatible with AWS Glue catalog</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CloudStorageComparison;\n","import React, { useState } from 'react';\n\nconst DatabricksArchitecture = () => {\n  const [activeTooltip, setActiveTooltip] = useState(null);\n  const [activeTab, setActiveTab] = useState('architecture');\n  \n  const handleMouseEnter = (id) => {\n    setActiveTooltip(id);\n  };\n  \n  const handleMouseLeave = () => {\n    setActiveTooltip(null);\n  };\n  \n  // Simple SVG icons\n  const Icons = {\n    Database: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <ellipse cx=\"12\" cy=\"5\" rx=\"9\" ry=\"3\"></ellipse>\n        <path d=\"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3\"></path>\n        <path d=\"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5\"></path>\n      </svg>\n    ),\n    Cloud: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <path d=\"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z\"></path>\n      </svg>\n    ),\n    Server: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <rect x=\"2\" y=\"2\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect>\n        <rect x=\"2\" y=\"14\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect>\n        <line x1=\"6\" y1=\"6\" x2=\"6.01\" y2=\"6\"></line>\n        <line x1=\"6\" y1=\"18\" x2=\"6.01\" y2=\"18\"></line>\n      </svg>\n    ),\n    Box: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path>\n      </svg>\n    ),\n    Code: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <polyline points=\"16 18 22 12 16 6\"></polyline>\n        <polyline points=\"8 6 2 12 8 18\"></polyline>\n      </svg>\n    ),\n    Table: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <path d=\"M3 3h18v18H3zM3 9h18M9 21V9\"></path>\n      </svg>\n    ),\n    Chart: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"10\"></line>\n        <line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"4\"></line>\n        <line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"16\"></line>\n      </svg>\n    ),\n    Cogs: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n        <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path>\n      </svg>\n    ),\n    Network: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <circle cx=\"6\" cy=\"18\" r=\"3\"></circle>\n        <circle cx=\"18\" cy=\"18\" r=\"3\"></circle>\n        <circle cx=\"12\" cy=\"6\" r=\"3\"></circle>\n        <line x1=\"6\" y1=\"15\" x2=\"12\" y2=\"9\"></line>\n        <line x1=\"12\" y1=\"9\" x2=\"18\" y2=\"15\"></line>\n      </svg>\n    ),\n    Fire: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <path d=\"M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3s.5-2 1.5-2.5C10 6 8 7 8 8.5c0 1.36.5 1 .5 2.5-.5 1-1.5 1-1.5 2-1 1 .5 1.5 1.5 1.5zm9-1.5c0 1.38-.5 2-1 3s.5 2 1.5 2.5c-1.5 0-3-1-3-2.5 0-1.36.5-1 .5-2.5-.5-1-1.5-1-1.5-2-1-1 .5-1.5 1.5-1.5.5 0 1.5 1 1.5 2.5h-.5z\"></path>\n      </svg>\n    ),\n    Download: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <path d=\"M3 15v4c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2v-4M17 9l-5 5-5-5M12 12.8V2.5\"></path>\n      </svg>\n    ),\n    Info: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n        <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\n        <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\n      </svg>\n    ),\n    Project: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <polygon points=\"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2\"></polygon>\n        <line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"15.5\"></line>\n        <polyline points=\"22 8.5 12 15.5 2 8.5\"></polyline>\n      </svg>\n    ),\n    ArrowDown: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n        <polyline points=\"19 12 12 19 5 12\"></polyline>\n      </svg>\n    ),\n    Money: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line>\n        <line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>\n      </svg>\n    ),\n    Scale: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <path d=\"M16 16v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2\"></path>\n        <path d=\"M22 12V5a2 2 0 0 0-2-2h-7\"></path>\n        <path d=\"M22 12h-7a2 2 0 0 1-2-2V3\"></path>\n      </svg>\n    ),\n    CheckSquare: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <polyline points=\"9 11 12 14 22 4\"></polyline>\n        <path d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path>\n      </svg>\n    )\n  };\n  \n  // Component for displaying tooltips\n  const Tooltip = ({ id, content }) => {\n    if (activeTooltip !== id) return null;\n    \n    return (\n      <div className=\"absolute z-10 p-3 bg-gray-800 text-white text-xs rounded shadow-lg max-w-xs\">\n        {content}\n        <div className=\"absolute -bottom-1 left-1/2 transform -translate-x-1/2 rotate-45 w-2 h-2 bg-gray-800\"></div>\n      </div>\n    );\n  };\n\n  // Component for boxes in the diagram\n  const ArchBox = ({ id, icon: Icon, title, description, color, onMouseEnter, onMouseLeave, tooltip, width = \"w-full\" }) => {\n    const colorClasses = {\n      blue: \"bg-blue-50 border-blue-200 hover:bg-blue-100\",\n      green: \"bg-green-50 border-green-200 hover:bg-green-100\",\n      purple: \"bg-purple-50 border-purple-200 hover:bg-purple-100\",\n      orange: \"bg-orange-50 border-orange-200 hover:bg-orange-100\",\n      indigo: \"bg-indigo-50 border-indigo-200 hover:bg-indigo-100\",\n      red: \"bg-red-50 border-red-200 hover:bg-red-100\",\n      gray: \"bg-gray-50 border-gray-200 hover:bg-gray-100\",\n      yellow: \"bg-yellow-50 border-yellow-200 hover:bg-yellow-100\"\n    };\n    \n    const iconColors = {\n      blue: \"text-blue-600\",\n      green: \"text-green-600\",\n      purple: \"text-purple-600\",\n      orange: \"text-orange-600\",\n      indigo: \"text-indigo-600\",\n      red: \"text-red-600\",\n      gray: \"text-gray-600\",\n      yellow: \"text-yellow-600\"\n    };\n    \n    return (\n      <div \n        className={`p-3 rounded-lg shadow-sm border ${colorClasses[color]} transition-all duration-300 relative flex flex-col ${width}`}\n        onMouseEnter={() => onMouseEnter(id)}\n        onMouseLeave={onMouseLeave}\n      >\n        <div className=\"flex items-center mb-1\">\n          <span className={`${iconColors[color]} mr-2`}><Icon /></span>\n          <h4 className=\"font-semibold\">{title}</h4>\n        </div>\n        <p className=\"text-xs text-gray-600\">{description}</p>\n        <Tooltip id={id} content={tooltip} />\n      </div>\n    );\n  };\n\n  // Arrow connector component\n  const ArrowConnector = ({ className = \"\" }) => (\n    <div className={`flex justify-center my-2 ${className}`}>\n      <span className=\"text-blue-500\">\n        <Icons.ArrowDown />\n      </span>\n    </div>\n  );\n\n  // Cost table data\n  const costData = [\n    { tier: \"Standard\", description: \"Development & lightweight workloads\", computing: \"$0.40/DBU\", sql: \"$0.22/DBU\" },\n    { tier: \"Premium\", description: \"Production workloads with SLA\", computing: \"$0.55/DBU\", sql: \"$0.33/DBU\" },\n    { tier: \"Enterprise\", description: \"Enterprise security & compliance\", computing: \"$0.65/DBU\", sql: \"$0.39/DBU\" }\n  ];\n\n  // Implementation timeline data\n  const implementationSteps = [\n    {\n      phase: \"Phase 1: Foundation\",\n      timeframe: \"1-2 weeks\",\n      tasks: [\n        \"Create Azure subscription and resource groups\",\n        \"Deploy Databricks workspace\",\n        \"Set up ADLS Gen2 storage\",\n        \"Configure networking and security\"\n      ]\n    },\n    {\n      phase: \"Phase 2: Data Platform\",\n      timeframe: \"2-4 weeks\",\n      tasks: [\n        \"Implement data ingestion pipelines\",\n        \"Set up Bronze/Silver/Gold medallion architecture\",\n        \"Create initial Delta tables\",\n        \"Configure data access and permissions\"\n      ]\n    },\n    {\n      phase: \"Phase 3: Development\",\n      timeframe: \"4-8 weeks\",\n      tasks: [\n        \"Develop transformation notebooks\",\n        \"Implement workflows and jobs\",\n        \"Set up monitoring and alerts\",\n        \"Establish CI/CD processes\"\n      ]\n    },\n    {\n      phase: \"Phase 4: Operations\",\n      timeframe: \"Ongoing\",\n      tasks: [\n        \"Scale compute resources as needed\",\n        \"Optimize cost and performance\",\n        \"Maintain data quality and lineage\",\n        \"Implement disaster recovery\"\n      ]\n    }\n  ];\n\n  // Use case data\n  const useCaseData = [\n    {\n      name: \"Data Engineering\",\n      description: \"Build scalable ETL/ELT pipelines\",\n      examples: [\n        \"Batch processing of large datasets\",\n        \"Real-time streaming analytics\",\n        \"Data quality validation and cleansing\",\n        \"Incremental data loading\"\n      ],\n      benefits: \"Reduced development time, improved data quality, scalable processing\"\n    },\n    {\n      name: \"Machine Learning\",\n      description: \"End-to-end ML lifecycle\",\n      examples: [\n        \"Feature engineering at scale\",\n        \"Model training and hyperparameter tuning\",\n        \"Model registry and versioning\",\n        \"Batch and real-time inference\"\n      ],\n      benefits: \"Unified platform for data and ML, streamlined deployment, collaborative environment\"\n    },\n    {\n      name: \"Business Intelligence\",\n      description: \"Self-service analytics and dashboards\",\n      examples: [\n        \"Interactive SQL queries\",\n        \"Data visualization\",\n        \"Scheduled reports\",\n        \"Ad-hoc analysis\"\n      ],\n      benefits: \"Direct access to data lake, fast query performance, integrated with BI tools\"\n    }\n  ];\n\n  // The main architecture diagram component\n  const ArchitectureDiagram = () => {\n    return (\n      <div>\n        {/* LEVEL 1: Azure Subscription */}\n        <div className=\"mb-3 flex justify-center\">\n          <div className=\"w-2/3\">\n            <ArchBox\n              id=\"azure-subscription\"\n              icon={Icons.Cloud}\n              title=\"Azure Subscription\"\n              description=\"The foundation - contains all your Azure resources and services\"\n              color=\"blue\"\n              onMouseEnter={handleMouseEnter}\n              onMouseLeave={handleMouseLeave}\n              tooltip=\"An Azure subscription is the fundamental billing unit that contains all your Azure resources. It provides authenticated and authorized access to Azure products and services.\"\n            />\n          </div>\n        </div>\n        \n        <ArrowConnector />\n        \n        {/* LEVEL 2: Storage */}\n        <div className=\"mb-3\">\n          <h3 className=\"text-lg font-semibold text-center bg-blue-100 py-1 rounded mb-3\">Storage Layer</h3>\n          <div className=\"flex justify-center space-x-4\">\n            <div className=\"w-1/3\">\n              <ArchBox\n                id=\"adls-gen2\"\n                icon={Icons.Database}\n                title=\"Azure Data Lake Storage Gen2\"\n                description=\"Hierarchical namespace storage for analytics\"\n                color=\"green\"\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n                tooltip=\"ADLS Gen2 combines the file system semantics of Data Lake Storage Gen1 with the scalability and economy of Blob Storage. It supports hierarchical directories and POSIX-compliant access control.\"\n              />\n            </div>\n            \n            <div className=\"w-1/3\">\n              <ArchBox\n                id=\"blob-storage\"\n                icon={Icons.Box}\n                title=\"Azure Blob Storage\"\n                description=\"Object storage for unstructured data\"\n                color=\"blue\"\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n                tooltip=\"Azure Blob Storage is an object storage solution optimized for storing massive amounts of unstructured data. It's the underlying technology for ADLS Gen2.\"\n              />\n            </div>\n          </div>\n          \n          <ArrowConnector />\n          \n          <div className=\"flex justify-center\">\n            <div className=\"w-2/3\">\n              <ArchBox\n                id=\"data-formats\"\n                icon={Icons.Table}\n                title=\"Data Format Organization\"\n                description=\"How data is organized in storage\"\n                color=\"indigo\"\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n                tooltip=\"Data is organized in zones: Raw (original formats), Bronze (validated raw data), Silver (cleaned/transformed), and Gold (business-level aggregates), often using Delta Lake format for reliability.\"\n              />\n              \n              <div className=\"grid grid-cols-3 gap-2 mt-2\">\n                <div className=\"bg-gray-50 p-2 rounded border border-gray-200 text-xs text-center\">\n                  <div className=\"font-semibold\">Raw Zone</div>\n                  <div className=\"text-gray-600\">Original data formats</div>\n                </div>\n                \n                <div className=\"bg-gray-50 p-2 rounded border border-gray-200 text-xs text-center\">\n                  <div className=\"font-semibold\">Bronze/Silver/Gold</div>\n                  <div className=\"text-gray-600\">Progressive refinement</div>\n                </div>\n                \n                <div className=\"bg-gray-50 p-2 rounded border border-gray-200 text-xs text-center\">\n                  <div className=\"font-semibold\">Delta Tables</div>\n                  <div className=\"text-gray-600\">Reliable data storage</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <ArrowConnector />\n        \n        {/* LEVEL 3: Databricks Workspace */}\n        <div className=\"mb-3\">\n          <h3 className=\"text-lg font-semibold text-center bg-purple-100 py-1 rounded mb-3\">Databricks Workspace</h3>\n          <div className=\"flex justify-center\">\n            <div className=\"w-2/3\">\n              <ArchBox\n                id=\"workspace\"\n                icon={Icons.Code}\n                title=\"Databricks Workspace\"\n                description=\"Web-based interface for managing all Databricks assets\"\n                color=\"purple\"\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n                tooltip=\"The Databricks workspace is a SaaS application that serves as the main interface for users to access notebooks, create clusters, run jobs, and manage data. It's managed by Databricks but connects to resources in your Azure subscription.\"\n              />\n              \n              <div className=\"grid grid-cols-3 gap-2 mt-2\">\n                <div className=\"bg-purple-50 p-2 rounded border border-purple-200 text-xs text-center\">\n                  <div className=\"font-semibold\">Control Plane</div>\n                  <div className=\"text-gray-600\">Databricks-managed UI</div>\n                </div>\n                \n                <div className=\"bg-purple-50 p-2 rounded border border-purple-200 text-xs text-center\">\n                  <div className=\"font-semibold\">Data Plane</div>\n                  <div className=\"text-gray-600\">Your Azure VNet</div>\n                </div>\n                \n                <div className=\"bg-purple-50 p-2 rounded border border-purple-200 text-xs text-center\">\n                  <div className=\"font-semibold\">Unity Catalog</div>\n                  <div className=\"text-gray-600\">Data governance</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <ArrowConnector />\n        \n        {/* LEVEL 4: Compute Infrastructure */}\n        <div className=\"mb-3\">\n          <h3 className=\"text-lg font-semibold text-center bg-orange-100 py-1 rounded mb-3\">Compute Infrastructure</h3>\n          <div className=\"flex justify-center\">\n            <div className=\"w-2/3\">\n              <ArchBox\n                id=\"clusters\"\n                icon={Icons.Server}\n                title=\"Databricks Clusters\"\n                description=\"Spark compute resources that process your data\"\n                color=\"orange\"\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n                tooltip=\"Databricks clusters are groups of computers that process your data as a single unit. They're powered by Apache Spark and run in your Azure VNet. You can configure node types, autoscaling, and other properties.\"\n              />\n              \n              <div className=\"grid grid-cols-2 gap-2 mt-2\">\n                <div className=\"p-2 rounded border border-orange-200 bg-orange-50 text-xs\">\n                  <div className=\"font-semibold flex items-center\">\n                    <span className=\"text-orange-600 mr-1\"><Icons.Server /></span>\n                    Driver Node\n                  </div>\n                  <ul className=\"list-disc pl-5 text-gray-600 mt-1\">\n                    <li>Coordinates the cluster</li>\n                    <li>Maintains state information</li>\n                    <li>Hosts Spark Context</li>\n                  </ul>\n                </div>\n                \n                <div className=\"p-2 rounded border border-orange-200 bg-orange-50 text-xs\">\n                  <div className=\"font-semibold flex items-center\">\n                    <span className=\"text-orange-600 mr-1\"><Icons.Server /></span>\n                    Worker Nodes\n                  </div>\n                  <ul className=\"list-disc pl-5 text-gray-600 mt-1\">\n                    <li>Execute tasks in parallel</li>\n                    <li>Cache data in memory</li>\n                    <li>Process data partitions</li>\n                  </ul>\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-3 gap-2 mt-2\">\n                <div className=\"bg-white p-2 rounded shadow-sm text-xs text-center border border-orange-100\">\n                  <div className=\"font-semibold\">All-Purpose Clusters</div>\n                  <div className=\"text-gray-600\">Interactive development</div>\n                </div>\n                \n                <div className=\"bg-white p-2 rounded shadow-sm text-xs text-center border border-orange-100\">\n                  <div className=\"font-semibold\">Job Clusters</div>\n                  <div className=\"text-gray-600\">Scheduled jobs</div>\n                </div>\n                \n                <div className=\"bg-white p-2 rounded shadow-sm text-xs text-center border border-orange-100\">\n                  <div className=\"font-semibold\">SQL Warehouses</div>\n                  <div className=\"text-gray-600\">SQL & BI workloads</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <ArrowConnector />\n        \n        {/* LEVEL 5: Processing Layer */}\n        <div className=\"mb-3\">\n          <h3 className=\"text-lg font-semibold text-center bg-red-100 py-1 rounded mb-3\">Data Processing Layer</h3>\n          <div className=\"flex justify-center\">\n            <div className=\"w-full px-16\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <ArchBox\n                  id=\"spark-processing\"\n                  icon={Icons.Fire}\n                  title=\"Apache Spark\"\n                  description=\"Distributed computing engine\"\n                  color=\"red\"\n                  onMouseEnter={handleMouseEnter}\n                  onMouseLeave={handleMouseLeave}\n                  tooltip=\"Apache Spark is an open-source distributed computing system that provides parallel processing for big data. It includes APIs for SQL, DataFrames, machine learning, graph processing, and streaming.\"\n                />\n                \n                <ArchBox\n                  id=\"delta-lake\"\n                  icon={Icons.Table}\n                  title=\"Delta Lake\"\n                  description=\"ACID transactions on cloud storage\"\n                  color=\"blue\"\n                  onMouseEnter={handleMouseEnter}\n                  onMouseLeave={handleMouseLeave}\n                  tooltip=\"Delta Lake is an open-source storage layer that brings reliability to data lakes through ACID transactions, scalable metadata handling, schema enforcement, time travel (data versioning), and more.\"\n                />\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-4 mt-2\">\n                <ArchBox\n                  id=\"spark-apis\"\n                  icon={Icons.Project}\n                  title=\"Spark Processing APIs\"\n                  description=\"Tools for data processing\"\n                  color=\"green\"\n                  onMouseEnter={handleMouseEnter}\n                  onMouseLeave={handleMouseLeave}\n                  tooltip=\"Spark offers multiple APIs for data processing including DataFrames/Datasets (structured data), Spark SQL (SQL queries), Streaming (real-time data), MLlib (machine learning), and GraphX (graph computation).\"\n                />\n                \n                <ArchBox\n                  id=\"mlflow\"\n                  icon={Icons.Chart}\n                  title=\"MLflow\"\n                  description=\"ML lifecycle management\"\n                  color=\"indigo\"\n                  onMouseEnter={handleMouseEnter}\n                  onMouseLeave={handleMouseLeave}\n                  tooltip=\"MLflow is an open-source platform to manage the ML lifecycle, including experimentation, reproducibility, deployment, and a central model registry.\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <ArrowConnector />\n        \n        {/* LEVEL 6: Developer Tools */}\n        <div className=\"mb-3\">\n          <h3 className=\"text-lg font-semibold text-center bg-green-100 py-1 rounded mb-3\">Developer & Orchestration Tools</h3>\n          <div className=\"flex justify-center\">\n            <div className=\"w-full px-16\">\n              <div className=\"grid grid-cols-3 gap-4\">\n                <ArchBox\n                  id=\"notebooks\"\n                  icon={Icons.Code}\n                  title=\"Notebooks\"\n                  description=\"Interactive development environment\"\n                  color=\"purple\"\n                  onMouseEnter={handleMouseEnter}\n                  onMouseLeave={handleMouseLeave}\n                  tooltip=\"Notebooks provide an interactive environment for data exploration, visualization, and collaboration. They support multiple languages including Python, SQL, R, and Scala.\"\n                />\n                \n                <ArchBox\n                  id=\"workflows\"\n                  icon={Icons.Cogs}\n                  title=\"Workflows\"\n                  description=\"Multi-task job orchestration\"\n                  color=\"blue\"\n                  onMouseEnter={handleMouseEnter}\n                  onMouseLeave={handleMouseLeave}\n                  tooltip=\"Databricks Workflows is a managed orchestration service for coordinating notebooks, SQL, and other tasks into reliable data pipelines with monitoring, error handling, and recovery capabilities.\"\n                />\n                \n                <ArchBox\n                  id=\"jobs\"\n                  icon={Icons.Cogs}\n                  title=\"Jobs Scheduler\"\n                  description=\"Schedule & monitor workloads\"\n                  color=\"green\"\n                  onMouseEnter={handleMouseEnter}\n                  onMouseLeave={handleMouseLeave}\n                  tooltip=\"The Jobs service allows you to schedule execution of notebooks or JARs, monitor their progress, and configure alerts for failures, all with ephemeral clusters that start/stop automatically.\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <ArrowConnector />\n        \n        {/* LEVEL 7: Data Consumption */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold text-center bg-indigo-100 py-1 rounded mb-3\">Data Consumption Layer</h3>\n          <div className=\"flex justify-center\">\n            <div className=\"w-2/3\">\n              <ArchBox\n                id=\"data-consumption\"\n                icon={Icons.Download}\n                title=\"Data Consumption Options\"\n                description=\"Ways to use and analyze processed data\"\n                color=\"indigo\"\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n                tooltip=\"The final stage where processed data is used for business insights, applications, and decision making.\"\n              />\n              \n              <div className=\"grid grid-cols-3 gap-2 mt-2\">\n                <div className=\"bg-indigo-50 p-2 rounded border border-indigo-200 text-xs text-center\">\n                  <div className=\"font-semibold\">Databricks SQL</div>\n                  <div className=\"text-gray-600\">SQL and dashboards</div>\n                </div>\n                \n                <div className=\"bg-indigo-50 p-2 rounded border border-indigo-200 text-xs text-center\">\n                  <div className=\"font-semibold\">BI Tools</div>\n                  <div className=\"text-gray-600\">Power BI, Tableau, etc.</div>\n                </div>\n                \n                <div className=\"bg-indigo-50 p-2 rounded border border-indigo-200 text-xs text-center\">\n                  <div className=\"font-semibold\">Custom Apps</div>\n                  <div className=\"text-gray-600\">APIs and applications</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Data Flow Summary */}\n        <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200 mb-6\">\n          <h3 className=\"font-semibold flex items-center mb-3\">\n            <span className=\"text-blue-500 mr-2\"><Icons.Info /></span>\n            End-to-End Data Flow Summary\n          </h3>\n          <ol className=\"list-decimal pl-6 text-sm text-gray-700 space-y-2\">\n            <li><span className=\"font-medium\">Data Ingestion:</span> Raw data lands in Azure Storage (Blob/ADLS Gen2) from various sources</li>\n            <li><span className=\"font-medium\">Processing:</span> Databricks clusters read from storage, process data using Spark</li>\n            <li><span className=\"font-medium\">Transformation:</span> Data moves through medallion architecture (Bronze → Silver → Gold)</li>\n            <li><span className=\"font-medium\">Storage:</span> Processed data stored as Delta Lake tables for reliability</li>\n            <li><span className=\"font-medium\">Serving:</span> Data made available through SQL warehouses, APIs, or direct table access</li>\n            <li><span className=\"font-medium\">Consumption:</span> Analysis in notebooks, dashboards, BI tools, or applications</li>\n          </ol>\n        </div>\n        \n        {/* Key terms and concepts */}\n        <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\n          <h3 className=\"font-semibold flex items-center mb-3\">\n            <span className=\"text-gray-500 mr-2\"><Icons.Info /></span>\n            Key Databricks Concepts & Terminology\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n            <div>\n              <ul className=\"list-disc pl-6 text-gray-700 space-y-1\">\n                <li><span className=\"font-medium\">RDD (Resilient Distributed Dataset):</span> Low-level data structure in Spark</li>\n                <li><span className=\"font-medium\">DataFrame/Dataset:</span> High-level APIs for structured data</li>\n                <li><span className=\"font-medium\">Partition:</span> A division of data for parallel processing</li>\n                <li><span className=\"font-medium\">Shuffle:</span> The process of redistributing data across partitions</li>\n                <li><span className=\"font-medium\">Executor:</span> A JVM process on a worker node that runs tasks</li>\n                <li><span className=\"font-medium\">Task:</span> A unit of work sent to one executor</li>\n              </ul>\n            </div>\n            <div>\n              <ul className=\"list-disc pl-6 text-gray-700 space-y-1\">\n                <li><span className=\"font-medium\">DBU (Databricks Unit):</span> Billing unit for Databricks usage</li>\n                <li><span className=\"font-medium\">Medallion Architecture:</span> Bronze (raw), Silver (filtered), Gold (aggregated)</li>\n                <li><span className=\"font-medium\">Metastore:</span> Repository of table metadata/schema information</li>\n                <li><span className=\"font-medium\">Mount Point:</span> Connection to storage that persists across clusters</li>\n                <li><span className=\"font-medium\">Notebook:</span> Interactive document combining code, visuals, and text</li>\n                <li><span className=\"font-medium\">Delta Table:</span> A set of Parquet files and a transaction log</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // The cost and scaling component\n  const CostScalingComponent = () => {\n    return (\n      <div>\n        <h2 className=\"text-2xl font-bold text-blue-700 mb-6 text-center\">Databricks Cost & Scaling Considerations</h2>\n        \n        {/* Pricing table */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-xl font-semibold text-center mb-4\">Databricks Pricing Tiers</h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full border-collapse\">\n              <thead>\n                <tr className=\"bg-blue-50\">\n                  <th className=\"border px-4 py-2 text-left\">Edition</th>\n                  <th className=\"border px-4 py-2 text-left\">Best For</th>\n                  <th className=\"border px-4 py-2 text-left\">Computing (DBU)</th>\n                  <th className=\"border px-4 py-2 text-left\">SQL (DBU)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {costData.map((tier, idx) => (\n                  <tr key={`tier-${idx}`} className={idx % 2 === 0 ? 'bg-gray-50' : ''}>\n                    <td className=\"border px-4 py-2 font-medium\">{tier.tier}</td>\n                    <td className=\"border px-4 py-2\">{tier.description}</td>\n                    <td className=\"border px-4 py-2\">{tier.computing}</td>\n                    <td className=\"border px-4 py-2\">{tier.sql}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <p className=\"text-xs text-gray-500 mt-2\">* Pricing is approximate and varies by region and commitment term. Azure infrastructure costs are additional.</p>\n        </div>\n        \n        {/* Cost optimization strategies */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-xl font-semibold text-center mb-4\">Cost Optimization Strategies</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n              <h4 className=\"font-semibold mb-2 flex items-center\">\n                <span className=\"text-blue-500 mr-2\"><Icons.Money /></span>\n                Compute Optimization\n              </h4>\n              <ul className=\"list-disc pl-5 text-sm space-y-1\">\n                <li>Use autoscaling clusters to match resources to workload</li>\n                <li>Set appropriate cluster termination policies</li>\n                <li>Use job clusters instead of all-purpose clusters when possible</li>\n                <li>Consider spot instances for non-critical workloads (30-90% savings)</li>\n                <li>Right-size clusters based on workload requirements</li>\n              </ul>\n            </div>\n            \n            <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\n              <h4 className=\"font-semibold mb-2 flex items-center\">\n                <span className=\"text-green-500 mr-2\"><Icons.Money /></span>\n                Storage & Data Optimization\n              </h4>\n              <ul className=\"list-disc pl-5 text-sm space-y-1\">\n                <li>Implement data lifecycle management policies</li>\n                <li>Use Delta Lake's data skipping and Z-Order for performance</li>\n                <li>Optimize file sizes to avoid small file problems</li>\n                <li>Partition data appropriately to minimize data scanning</li>\n                <li>Use table caching for frequently accessed data</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        \n        {/* Scaling patterns */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-xl font-semibold text-center mb-4\">Scaling Patterns</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"p-4 rounded-lg border border-gray-200 bg-gray-50\">\n              <h4 className=\"font-semibold mb-2 flex items-center\">\n                <span className=\"text-gray-500 mr-2\"><Icons.Scale /></span>\n                Vertical Scaling\n              </h4>\n              <p className=\"text-sm mb-2\">Increasing the size of your cluster nodes</p>\n              <div className=\"bg-white p-2 rounded text-xs\">\n                <div className=\"font-medium\">When to use:</div>\n                <ul className=\"list-disc pl-4 mt-1\">\n                  <li>Memory-intensive operations</li>\n                  <li>Operations that can't be parallelized</li>\n                  <li>Driver node bottlenecks</li>\n                </ul>\n              </div>\n            </div>\n            \n            <div className=\"p-4 rounded-lg border border-gray-200 bg-gray-50\">\n              <h4 className=\"font-semibold mb-2 flex items-center\">\n                <span className=\"text-gray-500 mr-2\"><Icons.Scale /></span>\n                Horizontal Scaling\n              </h4>\n              <p className=\"text-sm mb-2\">Adding more nodes to your cluster</p>\n              <div className=\"bg-white p-2 rounded text-xs\">\n                <div className=\"font-medium\">When to use:</div>\n                <ul className=\"list-disc pl-4 mt-1\">\n                  <li>Highly parallelizable workloads</li>\n                  <li>Processing very large datasets</li>\n                  <li>Improving throughput</li>\n                </ul>\n              </div>\n            </div>\n            \n            <div className=\"p-4 rounded-lg border border-gray-200 bg-gray-50\">\n              <h4 className=\"font-semibold mb-2 flex items-center\">\n                <span className=\"text-gray-500 mr-2\"><Icons.Scale /></span>\n                Workload Isolation\n              </h4>\n              <p className=\"text-sm mb-2\">Separate clusters for different workloads</p>\n              <div className=\"bg-white p-2 rounded text-xs\">\n                <div className=\"font-medium\">When to use:</div>\n                <ul className=\"list-disc pl-4 mt-1\">\n                  <li>Production vs. development</li>\n                  <li>ETL vs. ML workloads</li>\n                  <li>Critical vs. batch processes</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Performance benchmarks */}\n        <div className=\"bg-yellow-50 p-4 rounded-lg border border-yellow-200 mb-6\">\n          <h3 className=\"font-semibold flex items-center mb-3\">\n            <span className=\"text-yellow-500 mr-2\"><Icons.Chart /></span>\n            Performance Benchmarks\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h4 className=\"font-medium mb-2\">Processing Performance</h4>\n              <ul className=\"list-disc pl-5 text-sm space-y-1\">\n                <li>1TB data processing: 5-20 minutes (depends on transformation complexity)</li>\n                <li>Daily incremental load (50GB): 2-5 minutes</li>\n                <li>Complex aggregations (100GB): 3-8 minutes</li>\n                <li>Machine learning training (10GB): 10-30 minutes</li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-medium mb-2\">Scaling Metrics</h4>\n              <ul className=\"list-disc pl-5 text-sm space-y-1\">\n                <li>Cluster startup time: 2-5 minutes</li>\n                <li>Autoscaling response time: 3-5 minutes</li>\n                <li>Linear scaling up to ~100 nodes for most workloads</li>\n                <li>Diminishing returns beyond 100-200 nodes due to coordination overhead</li>\n              </ul>\n            </div>\n          </div>\n          <p className=\"text-xs text-gray-600 mt-3\">* These are approximate benchmarks and will vary based on data characteristics, cluster configuration, and workload complexity.</p>\n        </div>\n      </div>\n    );\n  };\n\n  // The implementation component\n  const ImplementationComponent = () => {\n    return (\n      <div>\n        <h2 className=\"text-2xl font-bold text-blue-700 mb-6 text-center\">Databricks Implementation Guide</h2>\n        \n        {/* Implementation timeline */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-xl font-semibold mb-4\">Implementation Timeline</h3>\n          <div className=\"space-y-6\">\n            {implementationSteps.map((step, idx) => (\n              <div key={`step-${idx}`} className=\"bg-gray-50 rounded-lg border border-gray-200 p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h4 className=\"font-semibold text-blue-700\">{step.phase}</h4>\n                  <span className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-medium\">\n                    {step.timeframe}\n                  </span>\n                </div>\n                <ul className=\"list-disc pl-5 text-sm space-y-1\">\n                  {step.tasks.map((task, taskIdx) => (\n                    <li key={`task-${idx}-${taskIdx}`}>{task}</li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        {/* Best practices */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-xl font-semibold mb-4\">Implementation Best Practices</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\n              <h4 className=\"font-semibold mb-2 flex items-center\">\n                <span className=\"text-green-500 mr-2\"><Icons.CheckSquare /></span>\n                Architecture Best Practices\n              </h4>\n              <ul className=\"list-disc pl-5 text-sm space-y-1\">\n                <li>Follow medallion architecture for progressive data refinement</li>\n                <li>Use mount points for consistent storage access</li>\n                <li>Implement proper networking with private endpoints</li>\n                <li>Set up cluster pools for faster startup times</li>\n                <li>Use Unity Catalog for unified data governance</li>\n              </ul>\n            </div>\n            \n            <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n              <h4 className=\"font-semibold mb-2 flex items-center\">\n                <span className=\"text-blue-500 mr-2\"><Icons.CheckSquare /></span>\n                Development Best Practices\n              </h4>\n              <ul className=\"list-disc pl-5 text-sm space-y-1\">\n                <li>Use Databricks Repos for version control</li>\n                <li>Implement CI/CD pipelines for notebook deployment</li>\n                <li>Create reusable code modules with Notebooks or wheels</li>\n                <li>Follow the testing pyramid (unit, integration, e2e)</li>\n                <li>Use workflows for orchestration rather than notebooks calling notebooks</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        \n        {/* Common pitfalls */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-xl font-semibold mb-4\">Common Implementation Pitfalls</h3>\n          <div className=\"bg-red-50 p-4 rounded-lg border border-red-200\">\n            <ul className=\"list-disc pl-5 text-sm space-y-2\">\n              <li><span className=\"font-medium\">Small file problem:</span> Generating too many small files leads to performance issues. Implement file compaction strategies.</li>\n              <li><span className=\"font-medium\">Inappropriate partitioning:</span> Over-partitioning or partitioning on high-cardinality columns. Analyze query patterns first.</li>\n              <li><span className=\"font-medium\">Ignoring cloud costs:</span> Not implementing proper cluster termination or using oversized clusters. Monitor and optimize regularly.</li>\n              <li><span className=\"font-medium\">Poor dependency management:</span> Not properly managing library dependencies across clusters. Use cluster libraries or init scripts.</li>\n              <li><span className=\"font-medium\">Neglecting monitoring:</span> Not setting up proper monitoring and alerting. Use cluster logs and metrics for visibility.</li>\n            </ul>\n          </div>\n        </div>\n        \n        {/* Use cases */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-xl font-semibold mb-4\">Common Use Cases</h3>\n          <div className=\"space-y-4\">\n            {useCaseData.map((useCase, idx) => (\n              <div key={`use-case-${idx}`} className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\n                <h4 className=\"font-semibold text-indigo-700 mb-2\">{useCase.name}</h4>\n                <p className=\"text-sm mb-3\">{useCase.description}</p>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <h5 className=\"font-medium text-sm mb-1\">Example Scenarios:</h5>\n                    <ul className=\"list-disc pl-5 text-xs space-y-1\">\n                      {useCase.examples.map((example, exIdx) => (\n                        <li key={`example-${idx}-${exIdx}`}>{example}</li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <h5 className=\"font-medium text-sm mb-1\">Business Benefits:</h5>\n                    <p className=\"text-xs\">{useCase.benefits}</p>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"p-6 bg-white rounded-lg shadow-lg\">\n      {/* Tab navigation */}\n      <div className=\"flex border-b mb-6\">\n        <button\n          className={`px-4 py-2 font-medium ${activeTab === 'architecture' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-500 hover:text-gray-700'}`}\n          onClick={() => setActiveTab('architecture')}\n        >\n          Architecture Overview\n        </button>\n        <button\n          className={`px-4 py-2 font-medium ${activeTab === 'cost' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-500 hover:text-gray-700'}`}\n          onClick={() => setActiveTab('cost')}\n        >\n          Cost & Scaling\n        </button>\n        <button\n          className={`px-4 py-2 font-medium ${activeTab === 'implementation' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-500 hover:text-gray-700'}`}\n          onClick={() => setActiveTab('implementation')}\n        >\n          Implementation Guide\n        </button>\n      </div>\n      \n      {/* Tab content */}\n      {activeTab === 'architecture' && <ArchitectureDiagram />}\n      {activeTab === 'cost' && <CostScalingComponent />}\n      {activeTab === 'implementation' && <ImplementationComponent />}\n    </div>\n  );\n};\n\nexport default DatabricksArchitecture;","import React, { useState } from 'react';\n\nconst StoragePricingComparison = () => {\n  // State for data volume selector\n  const [dataVolume, setDataVolume] = useState('medium');\n  \n  // Pricing data for different storage tiers - EXAMPLE PRICES (need verification)\n  const storageTierPricing = [\n    {\n      tier: 'Hot / Standard',\n      azure: '$0.0184 per GB/month',\n      aws: '$0.023 per GB/month',\n      diff: -20, // Azure is 20% cheaper\n      notes: 'Frequently accessed data, immediate availability'\n    },\n    {\n      tier: 'Cool / Infrequent Access',\n      azure: '$0.01 per GB/month',\n      aws: '$0.0125 per GB/month',\n      diff: -20, // Azure is 20% cheaper\n      notes: 'Less frequently accessed, small retrieval fee'\n    },\n    {\n      tier: 'Archive / Glacier',\n      azure: '$0.00099 per GB/month',\n      aws: '$0.004 per GB/month',\n      diff: -75, // Azure is 75% cheaper\n      notes: 'Rarely accessed, higher retrieval fees and latency'\n    },\n    {\n      tier: 'API Operations (PUT/GET)',\n      azure: '$0.005-$0.05 per 10,000 operations',\n      aws: '$0.0004-$0.005 per 1,000 requests',\n      diff: null, // Complex comparison, can't express as simple %\n      notes: 'Varies by operation type and data tier'\n    },\n    {\n      tier: 'Data Transfer Out',\n      azure: '$0.05-$0.08 per GB (first 10TB)',\n      aws: '$0.05-$0.09 per GB (first 10TB)',\n      diff: -5, // Azure averages ~5% cheaper\n      notes: 'Significant cost factor for data-heavy workloads'\n    }\n  ];\n\n  // 3-year TCO projections for different data volumes - EXAMPLE VALUES\n  const tcoProjections = {\n    small: [\n      {\n        scenario: 'Basic Storage (10TB, low operations)',\n        azure: {\n          monthly: 192,\n          year1: 2300,\n          year2: 4600,\n          year3: 6900,\n          total: 13800\n        },\n        aws: {\n          monthly: 230,\n          year1: 2760,\n          year2: 5520,\n          year3: 8280,\n          total: 16560\n        },\n        diff: -16.7, // Azure is 16.7% cheaper over 3 years\n        notes: '10TB with 80% hot, 15% cool, 5% archive storage'\n      },\n      {\n        scenario: 'Active Analytics (10TB, high operations)',\n        azure: {\n          monthly: 258,\n          year1: 3100,\n          year2: 6200,\n          year3: 9300,\n          total: 18600\n        },\n        aws: {\n          monthly: 283,\n          year1: 3400,\n          year2: 6800,\n          year3: 10200,\n          total: 20400\n        },\n        diff: -8.8, // Azure is 8.8% cheaper over 3 years\n        notes: 'Frequent data access with regular query operations'\n      }\n    ],\n    medium: [\n      {\n        scenario: 'Basic Storage (100TB, low operations)',\n        azure: {\n          monthly: 1833,\n          year1: 22000,\n          year2: 44000,\n          year3: 66000,\n          total: 132000\n        },\n        aws: {\n          monthly: 2300,\n          year1: 27600,\n          year2: 55200,\n          year3: 82800,\n          total: 165600\n        },\n        diff: -20.3, // Azure is 20.3% cheaper over 3 years\n        notes: '100TB with 70% hot, 20% cool, 10% archive storage'\n      },\n      {\n        scenario: 'Active Analytics (100TB, high operations)',\n        azure: {\n          monthly: 2417,\n          year1: 29000,\n          year2: 58000,\n          year3: 87000,\n          total: 174000\n        },\n        aws: {\n          monthly: 2792,\n          year1: 33500,\n          year2: 67000,\n          year3: 100500,\n          total: 201000\n        },\n        diff: -13.4, // Azure is 13.4% cheaper over 3 years\n        notes: 'Frequent data analysis with ML workloads'\n      },\n      {\n        scenario: 'Hybrid Usage (100TB, mixed operations)',\n        azure: {\n          monthly: 2125,\n          year1: 25500,\n          year2: 51000,\n          year3: 76500,\n          total: 153000\n        },\n        aws: {\n          monthly: 2508,\n          year1: 30100,\n          year2: 60200,\n          year3: 90300,\n          total: 180600\n        },\n        diff: -15.3, // Azure is 15.3% cheaper over 3 years\n        notes: 'Mix of storage and compute workloads'\n      }\n    ],\n    large: [\n      {\n        scenario: 'Enterprise Storage (1PB, optimized)',\n        azure: {\n          monthly: 14833,\n          year1: 178000,\n          year2: 356000,\n          year3: 534000,\n          total: 1068000\n        },\n        aws: {\n          monthly: 18417,\n          year1: 221000,\n          year2: 442000,\n          year3: 663000,\n          total: 1326000\n        },\n        diff: -19.5, // Azure is 19.5% cheaper over 3 years\n        notes: '1PB with tiered storage strategy and reserved capacity'\n      },\n      {\n        scenario: 'Data Lake (1PB, heavy analytics)',\n        azure: {\n          monthly: 17917,\n          year1: 215000,\n          year2: 430000,\n          year3: 645000,\n          total: 1290000\n        },\n        aws: {\n          monthly: 21500,\n          year1: 258000,\n          year2: 516000,\n          year3: 774000,\n          total: 1548000\n        },\n        diff: -16.7, // Azure is 16.7% cheaper over 3 years\n        notes: 'Heavy query and analysis workloads with data lake patterns'\n      },\n      {\n        scenario: 'Mixed Workload (1PB, varied usage)',\n        azure: {\n          monthly: 16333,\n          year1: 196000,\n          year2: 392000,\n          year3: 588000,\n          total: 1176000\n        },\n        aws: {\n          monthly: 19583,\n          year1: 235000,\n          year2: 470000,\n          year3: 705000,\n          total: 1410000\n        },\n        diff: -16.6, // Azure is 16.6% cheaper over 3 years\n        notes: 'Mix of archival, hot storage, and analytics workloads'\n      }\n    ]\n  };\n\n  // Cost efficiency factors\n  const costEfficiencyFactors = [\n    {\n      factor: 'Reserved Capacity Discounts',\n      azure: 'Up to 38% savings with 3-year reserved capacity',\n      aws: 'Up to 30% with S3 Reservations or 62% with Storage Lens optimizations',\n      impact: 'Significant for stable, predictable workloads',\n      example: 'A company with 500TB of consistent storage needs could save ~$55,000 annually by committing to 3-year reserved capacity instead of pay-as-you-go'\n    },\n    {\n      factor: 'Lifecycle Management',\n      azure: 'Automated tiering can reduce costs by 40-60%',\n      aws: 'S3 Intelligent-Tiering can reduce costs by 30-50%',\n      impact: 'Critical for data with changing access patterns',\n      example: 'Transaction logs older than 90 days are automatically moved from hot to cool storage, and after 1 year to archive storage, reducing costs by 75%'\n    },\n    {\n      factor: 'Regional Price Variations',\n      azure: 'Up to 25% difference between regions',\n      aws: 'Up to 40% difference between regions',\n      impact: 'Consider for global deployments',\n      example: 'Storing 100TB in US Central regions vs. Europe North can save approximately $2,000/month while maintaining similar performance'\n    },\n    {\n      factor: 'Egress Costs',\n      azure: 'First 5GB free, then tiered pricing',\n      aws: 'All outbound data charged, tiered pricing',\n      impact: 'Major cost factor for data-sharing workloads',\n      example: 'A data warehouse with 10TB monthly analytics exports to external systems could face $800-$1,000 in monthly egress fees alone'\n    }\n  ];\n\n  // Hidden cost considerations\n  const hiddenCosts = [\n    {\n      category: 'Operation Costs',\n      description: 'API calls, data retrieval, and monitoring can add 10-15% to base storage costs',\n      recommendation: 'Use batch operations and optimize access patterns',\n      example: 'Each GET/PUT/LIST operation costs money. Example: 10 million API calls per month could add $50-100 to your bill. Reading 1000 small files costs more than reading 1 large file with the same total data.'\n    },\n    {\n      category: 'Data Transfer Between Services',\n      description: 'Moving data between storage and compute services incurs costs even within the same cloud',\n      recommendation: 'Co-locate services and use private endpoints where possible',\n      example: 'Transferring 1TB of data from storage to a compute service in different regions could cost $90, whereas keeping them in the same region might only cost $10 or be free.'\n    },\n    {\n      category: 'Data Retrieval Penalties',\n      description: 'Early deletion or retrieval from cool/archive tiers incurs penalties',\n      recommendation: 'Carefully plan data lifecycle policies',\n      example: 'Retrieving 1TB from archive storage before the minimum duration (e.g., 180 days) could incur a $100+ penalty charge on top of standard retrieval fees.'\n    },\n    {\n      category: 'Monitoring & Management',\n      description: 'Advanced monitoring features add costs but provide optimization opportunities',\n      recommendation: 'Invest in monitoring for large deployments to identify cost-saving opportunities',\n      example: 'Azure Storage Analytics or AWS S3 Storage Lens might cost $200/month for a large deployment, but could identify $1000+ in monthly savings through usage pattern optimization.'\n    },\n    {\n      category: 'Payment Industry Compliance Storage',\n      description: 'PCI-DSS and other payment regulations require specific data retention and protection',\n      recommendation: 'Design storage architecture with compliance-specific tiers',\n      example: 'Transaction data requiring 7-year retention with encryption and audit trails might cost 30% more than standard storage due to compliance requirements for access controls and redundancy.'\n    }\n  ];\n\n  // Function to format currency\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n\n  return (\n    <div>\n      {/* Header with blue-to-purple gradient */}\n      <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 p-6 rounded-xl shadow-lg mb-4 text-center\">\n        <h1 className=\"text-3xl font-bold text-white mb-2\">Cloud Storage Pricing Analysis</h1>\n        <p className=\"text-white/80\">3-Year Total Cost of Ownership Comparison</p>\n      </div>\n\n      {/* Basic pricing table */}\n      <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow mb-6\">\n        <h2 className=\"text-2xl font-semibold mb-4 text-center\">Base Pricing Comparison</h2>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full\">\n            <thead>\n              <tr>\n                <th className=\"px-4 py-2 border-b-2 text-left\">Storage Tier/Service</th>\n                <th className=\"px-4 py-2 border-b-2 text-left bg-blue-50\">Azure Blob Storage</th>\n                <th className=\"px-4 py-2 border-b-2 text-left bg-amber-50\">AWS S3</th>\n                <th className=\"px-4 py-2 border-b-2 text-center\">Difference</th>\n                <th className=\"px-4 py-2 border-b-2 text-left\">Notes</th>\n              </tr>\n            </thead>\n            <tbody>\n              {storageTierPricing.map((item, idx) => (\n                <tr key={`pricing-${idx}`} className=\"border-b hover:bg-gray-50\">\n                  <td className=\"px-4 py-3 font-medium\">{item.tier}</td>\n                  <td className=\"px-4 py-3 bg-blue-50/30\">{item.azure}</td>\n                  <td className=\"px-4 py-3 bg-amber-50/30\">{item.aws}</td>\n                  <td className=\"px-4 py-3 text-center\">\n                    {item.diff !== null ? (\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        item.diff < 0 \n                          ? 'bg-green-100 text-green-800' \n                          : item.diff > 0 \n                            ? 'bg-red-100 text-red-800'\n                            : 'bg-gray-100 text-gray-800'\n                      }`}>\n                        {item.diff < 0 \n                          ? `Azure ${Math.abs(item.diff)}% cheaper` \n                          : item.diff > 0 \n                            ? `AWS ${item.diff}% cheaper`\n                            : 'Same cost'}\n                      </span>\n                    ) : (\n                      <span className=\"text-xs text-gray-500\">Varies by usage</span>\n                    )}\n                  </td>\n                  <td className=\"px-4 py-3 text-gray-600 text-sm\">{item.notes}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <p className=\"mt-3 text-sm text-gray-500\">\n          <span className=\"font-semibold text-amber-700\">IMPORTANT:</span> These are example prices for illustration purposes. \n          Actual pricing varies by region and changes frequently. Verify current pricing on cloud provider websites before making decisions.\n        </p>\n      </div>\n\n      {/* TCO Comparison with data volume selector */}\n      <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow mb-6\">\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between mb-4\">\n          <h2 className=\"text-2xl font-semibold\">3-Year TCO Projections</h2>\n          <div className=\"mt-3 md:mt-0\">\n            <label className=\"mr-2 font-medium\">Data Volume:</label>\n            <div className=\"inline-flex rounded-md shadow-sm\">\n              <button\n                type=\"button\"\n                className={`px-4 py-2 text-sm font-medium rounded-l-lg ${\n                  dataVolume === 'small' \n                    ? 'bg-blue-600 text-white' \n                    : 'bg-white text-gray-700 hover:bg-gray-50'\n                } border border-gray-300`}\n                onClick={() => setDataVolume('small')}\n              >\n                Small (10TB)\n              </button>\n              <button\n                type=\"button\"\n                className={`px-4 py-2 text-sm font-medium ${\n                  dataVolume === 'medium' \n                    ? 'bg-blue-600 text-white' \n                    : 'bg-white text-gray-700 hover:bg-gray-50'\n                } border-t border-b border-gray-300`}\n                onClick={() => setDataVolume('medium')}\n              >\n                Medium (100TB)\n              </button>\n              <button\n                type=\"button\"\n                className={`px-4 py-2 text-sm font-medium rounded-r-lg ${\n                  dataVolume === 'large' \n                    ? 'bg-blue-600 text-white' \n                    : 'bg-white text-gray-700 hover:bg-gray-50'\n                } border border-gray-300`}\n                onClick={() => setDataVolume('large')}\n              >\n                Large (1PB)\n              </button>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full\">\n            <thead>\n              <tr>\n                <th className=\"px-4 py-2 border-b-2 text-left\">Usage Scenario</th>\n                <th className=\"px-4 py-2 border-b-2 text-center\" colSpan=\"3\">Azure Blob Storage</th>\n                <th className=\"px-4 py-2 border-b-2 text-center\" colSpan=\"3\">AWS S3</th>\n                <th className=\"px-4 py-2 border-b-2 text-center\">Difference</th>\n                <th className=\"px-4 py-2 border-b-2 text-left\">Notes</th>\n              </tr>\n              <tr>\n                <th className=\"px-4 py-2 border-b-2 text-left\"></th>\n                <th className=\"px-4 py-2 border-b-2 text-center bg-blue-50\">Monthly</th>\n                <th className=\"px-4 py-2 border-b-2 text-center bg-blue-50\">Annual</th>\n                <th className=\"px-4 py-2 border-b-2 text-center bg-blue-100\">3-Year</th>\n                <th className=\"px-4 py-2 border-b-2 text-center bg-amber-50\">Monthly</th>\n                <th className=\"px-4 py-2 border-b-2 text-center bg-amber-50\">Annual</th>\n                <th className=\"px-4 py-2 border-b-2 text-center bg-amber-100\">3-Year</th>\n                <th className=\"px-4 py-2 border-b-2 text-center\"></th>\n                <th className=\"px-4 py-2 border-b-2 text-left\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {tcoProjections[dataVolume].map((scenario, idx) => (\n                <tr key={`tco-${idx}`} className=\"border-b hover:bg-gray-50\">\n                  <td className=\"px-4 py-3 font-medium\">{scenario.scenario}</td>\n                  <td className=\"px-4 py-3 text-center bg-blue-50/30\">\n                    {formatCurrency(scenario.azure.monthly)}\n                  </td>\n                  <td className=\"px-4 py-3 text-center bg-blue-50/30\">\n                    {formatCurrency(scenario.azure.year1)}\n                  </td>\n                  <td className=\"px-4 py-3 text-center bg-blue-100/40 font-bold\">\n                    {formatCurrency(scenario.azure.total)}\n                  </td>\n                  <td className=\"px-4 py-3 text-center bg-amber-50/30\">\n                    {formatCurrency(scenario.aws.monthly)}\n                  </td>\n                  <td className=\"px-4 py-3 text-center bg-amber-50/30\">\n                    {formatCurrency(scenario.aws.year1)}\n                  </td>\n                  <td className=\"px-4 py-3 text-center bg-amber-100/40 font-bold\">\n                    {formatCurrency(scenario.aws.total)}\n                  </td>\n                  <td className=\"px-4 py-3 text-center\">\n                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                      scenario.diff < 0 \n                        ? 'bg-green-100 text-green-800' \n                        : scenario.diff > 0\n                          ? 'bg-red-100 text-red-800'\n                          : 'bg-gray-100 text-gray-800'\n                    }`}>\n                      {scenario.diff < 0 \n                        ? `Azure ${Math.abs(scenario.diff)}% cheaper` \n                        : scenario.diff > 0\n                          ? `AWS ${scenario.diff}% cheaper`\n                          : 'Same cost'}\n                    </span>\n                  </td>\n                  <td className=\"px-4 py-3 text-gray-600 text-sm\">{scenario.notes}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <p className=\"mt-3 text-sm text-gray-500\">\n          <span className=\"font-semibold text-amber-700\">IMPORTANT:</span> These are example prices for illustration. \n          Actual costs will vary based on your specific usage patterns, regional pricing, and negotiated enterprise discounts.\n          All pricing should be verified with cloud providers' current pricing calculators.\n        </p>\n      </div>\n\n      {/* Cost efficiency factors */}\n      <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow mb-6\">\n        <h2 className=\"text-2xl font-semibold mb-4 text-center\">Cost Efficiency Factors</h2>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full\">\n            <thead>\n              <tr>\n                <th className=\"px-4 py-2 border-b-2 text-left\">Factor</th>\n                <th className=\"px-4 py-2 border-b-2 text-left bg-blue-50\">Azure Capability</th>\n                <th className=\"px-4 py-2 border-b-2 text-left bg-amber-50\">AWS Capability</th>\n                <th className=\"px-4 py-2 border-b-2 text-left\">Business Impact</th>\n                <th className=\"px-4 py-2 border-b-2 text-left\">Real-World Example</th>\n              </tr>\n            </thead>\n            <tbody>\n              {costEfficiencyFactors.map((item, idx) => (\n                <tr key={`factor-${idx}`} className=\"border-b hover:bg-gray-50\">\n                  <td className=\"px-4 py-3 font-medium\">{item.factor}</td>\n                  <td className=\"px-4 py-3 bg-blue-50/30\">{item.azure}</td>\n                  <td className=\"px-4 py-3 bg-amber-50/30\">{item.aws}</td>\n                  <td className=\"px-4 py-3\">{item.impact}</td>\n                  <td className=\"px-4 py-3 text-sm text-gray-700\">{item.example}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Hidden cost considerations */}\n      <div className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-xl transition-shadow\">\n        <h2 className=\"text-2xl font-semibold mb-4 text-center\">Hidden Cost Considerations</h2>\n        <div className=\"grid md:grid-cols-1 gap-4\">\n          {hiddenCosts.map((cost, idx) => (\n            <div key={`hidden-${idx}`} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\n              <h3 className=\"text-lg font-semibold mb-2 text-purple-700\">{cost.category}</h3>\n              <p className=\"mb-3 text-gray-700\">{cost.description}</p>\n              \n              <div className=\"bg-amber-50 border border-amber-100 rounded-md p-3 mb-3\">\n                <h4 className=\"font-medium text-amber-800 mb-1\">Example:</h4>\n                <p className=\"text-gray-700\">{cost.example}</p>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <div className=\"flex-shrink-0\">\n                  <span className=\"inline-block px-2 py-1 bg-green-100 text-green-800 rounded text-sm\">Recommendation</span>\n                </div>\n                <p className=\"ml-2 text-sm\">{cost.recommendation}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Bottom insight box */}\n      <div className=\"mt-6 bg-gradient-to-r from-purple-50 to-blue-50 rounded-lg border border-blue-100 p-4\">\n        <h3 className=\"text-lg font-semibold text-purple-800 mb-2\">Key Pricing Insights</h3>\n        <div className=\"mb-2 p-2 bg-amber-50 border border-amber-200 rounded-md\">\n          <p className=\"text-amber-800 text-sm font-medium\">\n            <span className=\"font-bold\">Note:</span> Pricing should be verified with cloud provider calculators. The comparative insights below \n            remain valid even as specific prices change.\n          </p>\n        </div>\n        <ul className=\"list-disc pl-5 space-y-1 text-gray-700\">\n          <li>Azure Blob Storage is generally 15-20% less expensive than AWS S3 for equivalent storage volumes</li>\n          <li>The cost gap widens for archival storage, with Azure Archive up to 75% cheaper than AWS Glacier</li>\n          <li>AWS offers more granular cost optimization tools but requires more active management</li>\n          <li>Data egress costs can overshadow storage costs for data-sharing intensive workloads</li>\n          <li>The cost advantage of either platform changes at different scale thresholds and usage patterns</li>\n          <li>For Databricks workloads, the native cloud provider integration typically provides 5-15% better cost efficiency</li>\n          <li>Enterprise discounts can significantly alter this comparison - negotiate with both vendors</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default StoragePricingComparison;","import React, { useState } from 'react';\nimport '../styles/buttons.css';\n\nconst SimplifiedComparison = () => {\n  const [activeTab, setActiveTab] = useState('plain-english');\n\n  // Simple tab switching\n  const tabs = [\n    { id: 'plain-english', label: 'In Plain English' },\n    { id: 'when-to-choose', label: 'When to Choose' },\n    { id: 'team-needs', label: 'Team Needs' },\n    { id: 'budget', label: 'Budget Impact' },\n    { id: 'getting-started', label: 'Getting Started' }\n  ];\n\n  return (\n    <div>\n      {/* Header with blue-to-purple gradient */}\n      <div \n        className=\"bg-gradient-to-r from-blue-600 to-purple-600 p-6 rounded-xl shadow-lg mb-4 text-center\"\n      >\n        <h1 className=\"text-3xl font-bold text-white mb-2\">\n          Database Comparison: Simplified\n        </h1>\n        <p className=\"text-white/80\">The essentials without the technical complexity</p>\n      </div>\n\n      {/* Simple tabs */}\n      <div className=\"bg-white rounded-lg shadow-md p-4 mb-6\">\n        <div className=\"flex flex-wrap justify-center gap-2\">\n          {tabs.map(tab => (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`px-4 py-2 rounded-full text-sm font-medium ${\n                activeTab === tab.id\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              {tab.label}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Tab content container */}\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        \n        {/* IN PLAIN ENGLISH TAB */}\n        {activeTab === 'plain-english' && (\n          <div>\n            <h2 className=\"text-xl font-semibold text-center mb-6\">What Are These Platforms - In Plain English</h2>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n              {/* SingleStore */}\n              <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-100\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-blue-100 rounded-full p-3 mr-3\">\n                    <svg className=\"w-8 h-8 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-blue-800\">SingleStore</h3>\n                </div>\n                <p className=\"text-gray-700 mb-3\">\n                  <span className=\"font-medium\">It's like:</span> A super-fast sports car that can also carry some luggage\n                </p>\n                <p className=\"text-gray-700 mb-4\">\n                  SingleStore is designed for speed. It processes transactions lightning fast (like processing orders or updating accounts), while also letting you run some analytics. It keeps data in memory for speed, similar to how a computer works faster when using RAM instead of hard drive.\n                </p>\n                <div className=\"bg-white p-3 rounded border border-blue-100\">\n                  <p className=\"text-sm font-medium text-blue-800 mb-1\">In one sentence:</p>\n                  <p className=\"text-sm text-gray-700\">\n                    \"A super-fast database that excels at processing transactions while also handling some analytics.\"\n                  </p>\n                </div>\n              </div>\n              \n              {/* Databricks */}\n              <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-100\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-purple-100 rounded-full p-3 mr-3\">\n                    <svg className=\"w-8 h-8 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-purple-800\">Databricks</h3>\n                </div>\n                <p className=\"text-gray-700 mb-3\">\n                  <span className=\"font-medium\">It's like:</span> A research lab with powerful tools for scientists\n                </p>\n                <p className=\"text-gray-700 mb-4\">\n                  Databricks is built for analyzing huge amounts of data and building AI/machine learning models. It organizes your data in what's called a \"lakehouse\" (combining the best parts of data warehouses and data lakes). It's particularly good for data scientists who want to discover insights and build predictive models.\n                </p>\n                <div className=\"bg-white p-3 rounded border border-purple-100\">\n                  <p className=\"text-sm font-medium text-purple-800 mb-1\">In one sentence:</p>\n                  <p className=\"text-sm text-gray-700\">\n                    \"A platform for analyzing massive datasets and building AI/ML models with a unified approach to data.\"\n                  </p>\n                </div>\n              </div>\n              \n              {/* Snowflake */}\n              <div className=\"bg-cyan-50 p-6 rounded-lg border border-cyan-100\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-cyan-100 rounded-full p-3 mr-3\">\n                    <svg className=\"w-8 h-8 text-cyan-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-cyan-800\">Snowflake</h3>\n                </div>\n                <p className=\"text-gray-700 mb-3\">\n                  <span className=\"font-medium\">It's like:</span> A self-driving car that adjusts to traffic automatically\n                </p>\n                <p className=\"text-gray-700 mb-4\">\n                  Snowflake is a cloud data warehouse built for simplicity. It automatically handles scaling up or down based on your needs. It's particularly good at running lots of queries at the same time from different teams. It makes sharing data between departments or even with external partners really easy.\n                </p>\n                <div className=\"bg-white p-3 rounded border border-cyan-100\">\n                  <p className=\"text-sm font-medium text-cyan-800 mb-1\">In one sentence:</p>\n                  <p className=\"text-sm text-gray-700\">\n                    \"A cloud data warehouse that automatically scales and makes it easy to share and analyze data.\"\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 text-center\">\n              <p className=\"text-gray-600 text-sm\">Still confused? Think of them like vehicles:</p>\n              <div className=\"flex flex-wrap justify-center gap-3 mt-2\">\n                <div className=\"px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm\">SingleStore = Sports Car</div>\n                <div className=\"px-3 py-1 bg-purple-100 text-purple-700 rounded-full text-sm\">Databricks = Research Laboratory</div>\n                <div className=\"px-3 py-1 bg-cyan-100 text-cyan-700 rounded-full text-sm\">Snowflake = Self-Driving Car</div>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* WHEN TO CHOOSE TAB */}\n        {activeTab === 'when-to-choose' && (\n          <div>\n            <h2 className=\"text-xl font-semibold text-center mb-6\">When to Choose Each Platform</h2>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              {/* When to choose SingleStore */}\n              <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-blue-100 rounded-full p-2 mr-3\">\n                    <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-blue-800\">Choose SingleStore When...</h3>\n                </div>\n                <ul className=\"space-y-3\">\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>You need incredibly fast transaction processing (like processing orders)</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>Your application needs both transactions and some analytics capabilities</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>You want to combine transactional and analytical workloads in one system</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>You need consistent, predictable performance for real-time applications</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>You want to deploy on-premises or in your own data center</span>\n                  </li>\n                </ul>\n                <div className=\"mt-4 bg-blue-50 p-3 rounded border border-blue-100\">\n                  <p className=\"text-sm text-blue-800 font-medium\">Perfect for:</p>\n                  <p className=\"text-sm text-gray-700\">Financial trading platforms, real-time inventory systems, game leaderboards, IoT monitoring</p>\n                </div>\n              </div>\n              \n              {/* When to choose Databricks */}\n              <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-purple-100 rounded-full p-2 mr-3\">\n                    <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-purple-800\">Choose Databricks When...</h3>\n                </div>\n                <ul className=\"space-y-3\">\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>You want to build AI and machine learning models</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>You need to process massive amounts of data</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>Your team includes data scientists who need flexible tools</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>You want to combine data lake storage with warehouse capabilities</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>You need support for multiple programming languages (Python, SQL, R, etc.)</span>\n                  </li>\n                </ul>\n                <div className=\"mt-4 bg-purple-50 p-3 rounded border border-purple-100\">\n                  <p className=\"text-sm text-purple-800 font-medium\">Perfect for:</p>\n                  <p className=\"text-sm text-gray-700\">Recommendation engines, fraud detection systems, predictive maintenance, customer segmentation</p>\n                </div>\n              </div>\n              \n              {/* When to choose Snowflake */}\n              <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-cyan-100 rounded-full p-2 mr-3\">\n                    <svg className=\"w-6 h-6 text-cyan-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-cyan-800\">Choose Snowflake When...</h3>\n                </div>\n                <ul className=\"space-y-3\">\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>You need minimal administration and automatic scaling</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>You want to share data easily between departments or partners</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>You need to support many users running queries simultaneously</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>You want pay-as-you-go pricing with no minimum commitments</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">✓</span>\n                    <span>Your workloads are unpredictable with peaks and valleys</span>\n                  </li>\n                </ul>\n                <div className=\"mt-4 bg-cyan-50 p-3 rounded border border-cyan-100\">\n                  <p className=\"text-sm text-cyan-800 font-medium\">Perfect for:</p>\n                  <p className=\"text-sm text-gray-700\">Business intelligence, cross-department analytics, data marketplaces, reporting dashboards</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"mt-6 bg-yellow-50 p-4 rounded-lg\">\n              <h3 className=\"font-medium mb-2 text-yellow-800\">Quick Decision Guide</h3>\n              <ul className=\"space-y-2 text-gray-700\">\n                <li>💡 <span className=\"font-medium\">If you're processing transactions in real-time</span> → SingleStore</li>\n                <li>💡 <span className=\"font-medium\">If you're building AI/ML models</span> → Databricks</li>\n                <li>💡 <span className=\"font-medium\">If you need simple analytics with minimal management</span> → Snowflake</li>\n              </ul>\n            </div>\n          </div>\n        )}\n        \n        {/* TEAM NEEDS TAB */}\n        {activeTab === 'team-needs' && (\n          <div>\n            <h2 className=\"text-xl font-semibold text-center mb-6\">Team Skills Needed</h2>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n              {/* SingleStore Skills */}\n              <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                <div className=\"flex items-center mb-4\">\n                  <span className=\"bg-blue-100 text-blue-800 text-xl font-bold rounded-full w-8 h-8 flex items-center justify-center mr-3\">S</span>\n                  <h3 className=\"text-lg font-medium text-blue-800\">SingleStore Team</h3>\n                </div>\n                \n                <div className=\"mb-4\">\n                  <h4 className=\"font-medium mb-2 text-gray-700\">Must Have Skills:</h4>\n                  <ul className=\"space-y-1\">\n                    <li className=\"flex items-center\">\n                      <span className=\"text-blue-500 mr-2\">●</span>\n                      <span>SQL expertise</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <span className=\"text-blue-500 mr-2\">●</span>\n                      <span>Database administration</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <span className=\"text-blue-500 mr-2\">●</span>\n                      <span>Performance tuning experience</span>\n                    </li>\n                  </ul>\n                </div>\n                \n                <div className=\"mb-4\">\n                  <h4 className=\"font-medium mb-2 text-gray-700\">Nice to Have:</h4>\n                  <ul className=\"space-y-1\">\n                    <li className=\"flex items-center\">\n                      <span className=\"text-gray-400 mr-2\">○</span>\n                      <span>Distributed systems knowledge</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <span className=\"text-gray-400 mr-2\">○</span>\n                      <span>Memory optimization skills</span>\n                    </li>\n                  </ul>\n                </div>\n                \n                <div className=\"bg-blue-50 p-3 rounded-lg\">\n                  <h4 className=\"font-medium mb-1 text-blue-800\">Learning Curve:</h4>\n                  <div className=\"flex items-center\">\n                    <div className=\"h-2 flex-grow rounded-full bg-gray-200\">\n                      <div className=\"h-2 rounded-full bg-blue-500\" style={{ width: '40%' }}></div>\n                    </div>\n                    <span className=\"ml-2 text-sm\">Medium</span>\n                  </div>\n                  <p className=\"mt-2 text-sm text-gray-600\">Easy transition for SQL database experts, minimal new concepts</p>\n                </div>\n              </div>\n              \n              {/* Databricks Skills */}\n              <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                <div className=\"flex items-center mb-4\">\n                  <span className=\"bg-purple-100 text-purple-800 text-xl font-bold rounded-full w-8 h-8 flex items-center justify-center mr-3\">D</span>\n                  <h3 className=\"text-lg font-medium text-purple-800\">Databricks Team</h3>\n                </div>\n                \n                <div className=\"mb-4\">\n                  <h4 className=\"font-medium mb-2 text-gray-700\">Must Have Skills:</h4>\n                  <ul className=\"space-y-1\">\n                    <li className=\"flex items-center\">\n                      <span className=\"text-purple-500 mr-2\">●</span>\n                      <span>Data engineering experience</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <span className=\"text-purple-500 mr-2\">●</span>\n                      <span>Python or Scala knowledge</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <span className=\"text-purple-500 mr-2\">●</span>\n                      <span>SQL proficiency</span>\n                    </li>\n                  </ul>\n                </div>\n                \n                <div className=\"mb-4\">\n                  <h4 className=\"font-medium mb-2 text-gray-700\">Nice to Have:</h4>\n                  <ul className=\"space-y-1\">\n                    <li className=\"flex items-center\">\n                      <span className=\"text-gray-400 mr-2\">○</span>\n                      <span>Machine learning experience</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <span className=\"text-gray-400 mr-2\">○</span>\n                      <span>Apache Spark knowledge</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <span className=\"text-gray-400 mr-2\">○</span>\n                      <span>Data science background</span>\n                    </li>\n                  </ul>\n                </div>\n                \n                <div className=\"bg-purple-50 p-3 rounded-lg\">\n                  <h4 className=\"font-medium mb-1 text-purple-800\">Learning Curve:</h4>\n                  <div className=\"flex items-center\">\n                    <div className=\"h-2 flex-grow rounded-full bg-gray-200\">\n                      <div className=\"h-2 rounded-full bg-purple-500\" style={{ width: '70%' }}></div>\n                    </div>\n                    <span className=\"ml-2 text-sm\">Steep</span>\n                  </div>\n                  <p className=\"mt-2 text-sm text-gray-600\">Multiple languages and concepts to master, especially for ML workflows</p>\n                </div>\n              </div>\n              \n              {/* Snowflake Skills */}\n              <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                <div className=\"flex items-center mb-4\">\n                  <span className=\"bg-cyan-100 text-cyan-800 text-xl font-bold rounded-full w-8 h-8 flex items-center justify-center mr-3\">S</span>\n                  <h3 className=\"text-lg font-medium text-cyan-800\">Snowflake Team</h3>\n                </div>\n                \n                <div className=\"mb-4\">\n                  <h4 className=\"font-medium mb-2 text-gray-700\">Must Have Skills:</h4>\n                  <ul className=\"space-y-1\">\n                    <li className=\"flex items-center\">\n                      <span className=\"text-cyan-500 mr-2\">●</span>\n                      <span>SQL proficiency</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <span className=\"text-cyan-500 mr-2\">●</span>\n                      <span>Data warehouse concepts</span>\n                    </li>\n                  </ul>\n                </div>\n                \n                <div className=\"mb-4\">\n                  <h4 className=\"font-medium mb-2 text-gray-700\">Nice to Have:</h4>\n                  <ul className=\"space-y-1\">\n                    <li className=\"flex items-center\">\n                      <span className=\"text-gray-400 mr-2\">○</span>\n                      <span>Cloud infrastructure knowledge</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <span className=\"text-gray-400 mr-2\">○</span>\n                      <span>ETL/ELT experience</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <span className=\"text-gray-400 mr-2\">○</span>\n                      <span>Business intelligence tools</span>\n                    </li>\n                  </ul>\n                </div>\n                \n                <div className=\"bg-cyan-50 p-3 rounded-lg\">\n                  <h4 className=\"font-medium mb-1 text-cyan-800\">Learning Curve:</h4>\n                  <div className=\"flex items-center\">\n                    <div className=\"h-2 flex-grow rounded-full bg-gray-200\">\n                      <div className=\"h-2 rounded-full bg-cyan-500\" style={{ width: '30%' }}></div>\n                    </div>\n                    <span className=\"ml-2 text-sm\">Gentle</span>\n                  </div>\n                  <p className=\"mt-2 text-sm text-gray-600\">Very SQL-centric, familiar concepts with minimal administration</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 p-5 rounded-lg border border-gray-200\">\n              <h3 className=\"font-medium mb-4 text-center text-gray-800\">Team Structure Comparison</h3>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full\">\n                  <thead>\n                    <tr>\n                      <th className=\"px-4 py-2 text-left font-medium text-gray-700\">Role Type</th>\n                      <th className=\"px-4 py-2 text-center font-medium text-blue-700\">SingleStore</th>\n                      <th className=\"px-4 py-2 text-center font-medium text-purple-700\">Databricks</th>\n                      <th className=\"px-4 py-2 text-center font-medium text-cyan-700\">Snowflake</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y\">\n                    <tr>\n                      <td className=\"px-4 py-2 font-medium text-gray-700\">Database Admin</td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">Essential</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">Helpful</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-cyan-100 text-cyan-800\">Minimal</span>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"px-4 py-2 font-medium text-gray-700\">Data Engineer</td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">Helpful</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">Essential</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-cyan-100 text-cyan-800\">Helpful</span>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"px-4 py-2 font-medium text-gray-700\">Data Scientist</td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">Optional</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">Essential</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">Optional</span>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"px-4 py-2 font-medium text-gray-700\">SQL Analyst</td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">Essential</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">Helpful</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-cyan-100 text-cyan-800\">Essential</span>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* BUDGET TAB */}\n        {activeTab === 'budget' && (\n          <div>\n            <h2 className=\"text-xl font-semibold text-center mb-6\">Budget Impact: The Financial Picture</h2>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n              {/* SingleStore Cost */}\n              <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-blue-100 rounded-full p-2 mr-3\">\n                    <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-blue-800\">SingleStore Costs</h3>\n                </div>\n                \n                <div className=\"space-y-4\">\n                  <div>\n                    <div className=\"flex justify-between mb-1\">\n                      <span className=\"text-sm font-medium text-gray-700\">Upfront Costs</span>\n                      <span className=\"text-sm text-gray-600\">High</span>\n                    </div>\n                    <div className=\"h-2 w-full bg-gray-200 rounded-full\">\n                      <div className=\"h-2 bg-blue-500 rounded-full\" style={{ width: '75%' }}></div>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <div className=\"flex justify-between mb-1\">\n                      <span className=\"text-sm font-medium text-gray-700\">Ongoing Costs</span>\n                      <span className=\"text-sm text-gray-600\">Medium</span>\n                    </div>\n                    <div className=\"h-2 w-full bg-gray-200 rounded-full\">\n                      <div className=\"h-2 bg-blue-500 rounded-full\" style={{ width: '50%' }}></div>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <div className=\"flex justify-between mb-1\">\n                      <span className=\"text-sm font-medium text-gray-700\">Staff Costs</span>\n                      <span className=\"text-sm text-gray-600\">Medium</span>\n                    </div>\n                    <div className=\"h-2 w-full bg-gray-200 rounded-full\">\n                      <div className=\"h-2 bg-blue-500 rounded-full\" style={{ width: '60%' }}></div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"mt-5 bg-blue-50 p-3 rounded-lg\">\n                  <h4 className=\"font-medium text-blue-800 mb-1\">Budget Highlights:</h4>\n                  <ul className=\"text-sm space-y-1 text-gray-700\">\n                    <li>• Predictable licensing costs</li>\n                    <li>• Higher upfront hardware investments</li>\n                    <li>• Lower storage costs for small to medium data</li>\n                    <li>• Potential cost savings for transaction-heavy workloads</li>\n                  </ul>\n                </div>\n              </div>\n              \n              {/* Databricks Cost */}\n              <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-purple-100 rounded-full p-2 mr-3\">\n                    <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-purple-800\">Databricks Costs</h3>\n                </div>\n                \n                <div className=\"space-y-4\">\n                  <div>\n                    <div className=\"flex justify-between mb-1\">\n                      <span className=\"text-sm font-medium text-gray-700\">Upfront Costs</span>\n                      <span className=\"text-sm text-gray-600\">Medium</span>\n                    </div>\n                    <div className=\"h-2 w-full bg-gray-200 rounded-full\">\n                      <div className=\"h-2 bg-purple-500 rounded-full\" style={{ width: '60%' }}></div>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <div className=\"flex justify-between mb-1\">\n                      <span className=\"text-sm font-medium text-gray-700\">Ongoing Costs</span>\n                      <span className=\"text-sm text-gray-600\">Medium-High</span>\n                    </div>\n                    <div className=\"h-2 w-full bg-gray-200 rounded-full\">\n                      <div className=\"h-2 bg-purple-500 rounded-full\" style={{ width: '70%' }}></div>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <div className=\"flex justify-between mb-1\">\n                      <span className=\"text-sm font-medium text-gray-700\">Staff Costs</span>\n                      <span className=\"text-sm text-gray-600\">High</span>\n                    </div>\n                    <div className=\"h-2 w-full bg-gray-200 rounded-full\">\n                      <div className=\"h-2 bg-purple-500 rounded-full\" style={{ width: '80%' }}></div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"mt-5 bg-purple-50 p-3 rounded-lg\">\n                  <h4 className=\"font-medium text-purple-800 mb-1\">Budget Highlights:</h4>\n                  <ul className=\"text-sm space-y-1 text-gray-700\">\n                    <li>• Usage-based pricing (compute units)</li>\n                    <li>• Lower storage costs for large data volumes</li>\n                    <li>• Higher skilled staff requirements increase personnel costs</li>\n                    <li>• Optimization potential to reduce ongoing costs</li>\n                  </ul>\n                </div>\n              </div>\n              \n              {/* Snowflake Cost */}\n              <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-cyan-100 rounded-full p-2 mr-3\">\n                    <svg className=\"w-6 h-6 text-cyan-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-cyan-800\">Snowflake Costs</h3>\n                </div>\n                \n                <div className=\"space-y-4\">\n                  <div>\n                    <div className=\"flex justify-between mb-1\">\n                      <span className=\"text-sm font-medium text-gray-700\">Upfront Costs</span>\n                      <span className=\"text-sm text-gray-600\">Low</span>\n                    </div>\n                    <div className=\"h-2 w-full bg-gray-200 rounded-full\">\n                      <div className=\"h-2 bg-cyan-500 rounded-full\" style={{ width: '30%' }}></div>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <div className=\"flex justify-between mb-1\">\n                      <span className=\"text-sm font-medium text-gray-700\">Ongoing Costs</span>\n                      <span className=\"text-sm text-gray-600\">Variable</span>\n                    </div>\n                    <div className=\"h-2 w-full bg-gray-200 rounded-full\">\n                      <div className=\"h-2 bg-cyan-500 rounded-full\" style={{ width: '65%' }}></div>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <div className=\"flex justify-between mb-1\">\n                      <span className=\"text-sm font-medium text-gray-700\">Staff Costs</span>\n                      <span className=\"text-sm text-gray-600\">Low</span>\n                    </div>\n                    <div className=\"h-2 w-full bg-gray-200 rounded-full\">\n                      <div className=\"h-2 bg-cyan-500 rounded-full\" style={{ width: '35%' }}></div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"mt-5 bg-cyan-50 p-3 rounded-lg\">\n                  <h4 className=\"font-medium text-cyan-800 mb-1\">Budget Highlights:</h4>\n                  <ul className=\"text-sm space-y-1 text-gray-700\">\n                    <li>• Pay-as-you-go consumption model</li>\n                    <li>• Separate storage and compute costs</li>\n                    <li>• Lower administration overhead costs</li>\n                    <li>• Can get expensive with unoptimized queries</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-white p-5 rounded-lg border border-gray-200\">\n              <h3 className=\"font-medium mb-4 text-gray-800\">Simplified Cost Comparison</h3>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full\">\n                  <thead>\n                    <tr className=\"border-b\">\n                      <th className=\"px-4 py-2 text-left font-medium text-gray-700\">Cost Factor</th>\n                      <th className=\"px-4 py-2 text-center font-medium text-blue-700\">SingleStore</th>\n                      <th className=\"px-4 py-2 text-center font-medium text-purple-700\">Databricks</th>\n                      <th className=\"px-4 py-2 text-center font-medium text-cyan-700\">Snowflake</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y\">\n                    <tr>\n                      <td className=\"px-4 py-2\">Small Projects (&lt;1TB)</td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐⭐</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐⭐⭐</span>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"px-4 py-2\">Medium Projects (1-10TB)</td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐⭐</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐⭐</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐⭐</span>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"px-4 py-2\">Large Projects (&gt;10TB)</td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐⭐⭐</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐⭐</span>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"px-4 py-2\">Pay-as-you-go Flexibility</td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐⭐</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐⭐⭐</span>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"px-4 py-2\">Staff Cost Savings</td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐⭐</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐</span>\n                      </td>\n                      <td className=\"px-4 py-2 text-center\">\n                        <span className=\"text-yellow-500\">⭐⭐⭐⭐</span>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              \n              <div className=\"mt-4 bg-yellow-50 p-3 rounded\">\n                <p className=\"text-sm text-yellow-800\">\n                  <strong>Note:</strong> Cost effectiveness depends heavily on your specific use case. More stars indicate better cost efficiency for that factor.\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* GETTING STARTED TAB */}\n        {activeTab === 'getting-started' && (\n          <div>\n            <h2 className=\"text-xl font-semibold text-center mb-6\">Getting Started: First Steps</h2>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n              {/* SingleStore Getting Started */}\n              <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-blue-100 rounded-full p-2 mr-3\">\n                    <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-blue-800\">SingleStore First Steps</h3>\n                </div>\n                \n                <ol className=\"space-y-4 mb-6\">\n                  <li className=\"flex\">\n                    <span className=\"flex-shrink-0 h-6 w-6 rounded-full bg-blue-100 text-blue-800 flex items-center justify-center font-bold text-sm\">1</span>\n                    <div className=\"ml-3\">\n                      <p className=\"text-gray-700\">Start with a free trial of SingleStore Managed Service</p>\n                      <p className=\"text-sm text-gray-500 mt-1\">No credit card required for initial testing</p>\n                    </div>\n                  </li>\n                  <li className=\"flex\">\n                    <span className=\"flex-shrink-0 h-6 w-6 rounded-full bg-blue-100 text-blue-800 flex items-center justify-center font-bold text-sm\">2</span>\n                    <div className=\"ml-3\">\n                      <p className=\"text-gray-700\">Connect with standard SQL tools</p>\n                      <p className=\"text-sm text-gray-500 mt-1\">Works with any SQL client or BI tool</p>\n                    </div>\n                  </li>\n                  <li className=\"flex\">\n                    <span className=\"flex-shrink-0 h-6 w-6 rounded-full bg-blue-100 text-blue-800 flex items-center justify-center font-bold text-sm\">3</span>\n                    <div className=\"ml-3\">\n                      <p className=\"text-gray-700\">Import a sample dataset</p>\n                      <p className=\"text-sm text-gray-500 mt-1\">Use the provided examples or your own data</p>\n                    </div>\n                  </li>\n                  <li className=\"flex\">\n                    <span className=\"flex-shrink-0 h-6 w-6 rounded-full bg-blue-100 text-blue-800 flex items-center justify-center font-bold text-sm\">4</span>\n                    <div className=\"ml-3\">\n                      <p className=\"text-gray-700\">Run sample queries and test performance</p>\n                      <p className=\"text-sm text-gray-500 mt-1\">Compare with your existing solution</p>\n                    </div>\n                  </li>\n                </ol>\n                \n                <div className=\"bg-blue-50 p-3 rounded-lg\">\n                  <h4 className=\"font-medium text-blue-800 mb-1\">Time Investment:</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    <span className=\"font-medium\">Initial setup:</span> 1-2 hours<br />\n                    <span className=\"font-medium\">Basic POC:</span> 1-2 days<br />\n                    <span className=\"font-medium\">Production readiness:</span> 2-4 weeks\n                  </p>\n                </div>\n              </div>\n              \n              {/* Databricks Getting Started */}\n              <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-purple-100 rounded-full p-2 mr-3\">\n                    <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-purple-800\">Databricks First Steps</h3>\n                </div>\n                \n                <ol className=\"space-y-4 mb-6\">\n                  <li className=\"flex\">\n                    <span className=\"flex-shrink-0 h-6 w-6 rounded-full bg-purple-100 text-purple-800 flex items-center justify-center font-bold text-sm\">1</span>\n                    <div className=\"ml-3\">\n                      <p className=\"text-gray-700\">Sign up for a free Databricks Community Edition</p>\n                      <p className=\"text-sm text-gray-500 mt-1\">For learning, or start a trial on AWS/Azure/GCP</p>\n                    </div>\n                  </li>\n                  <li className=\"flex\">\n                    <span className=\"flex-shrink-0 h-6 w-6 rounded-full bg-purple-100 text-purple-800 flex items-center justify-center font-bold text-sm\">2</span>\n                    <div className=\"ml-3\">\n                      <p className=\"text-gray-700\">Complete the getting started notebook tutorials</p>\n                      <p className=\"text-sm text-gray-500 mt-1\">Built-in examples teach the basics</p>\n                    </div>\n                  </li>\n                  <li className=\"flex\">\n                    <span className=\"flex-shrink-0 h-6 w-6 rounded-full bg-purple-100 text-purple-800 flex items-center justify-center font-bold text-sm\">3</span>\n                    <div className=\"ml-3\">\n                      <p className=\"text-gray-700\">Create a cluster and first notebook</p>\n                      <p className=\"text-sm text-gray-500 mt-1\">Start with a small cluster for experimentation</p>\n                    </div>\n                  </li>\n                  <li className=\"flex\">\n                    <span className=\"flex-shrink-0 h-6 w-6 rounded-full bg-purple-100 text-purple-800 flex items-center justify-center font-bold text-sm\">4</span>\n                    <div className=\"ml-3\">\n                      <p className=\"text-gray-700\">Import your data and run simple transformations</p>\n                      <p className=\"text-sm text-gray-500 mt-1\">Test with both SQL and Python/Scala</p>\n                    </div>\n                  </li>\n                </ol>\n                \n                <div className=\"bg-purple-50 p-3 rounded-lg\">\n                  <h4 className=\"font-medium text-purple-800 mb-1\">Time Investment:</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    <span className=\"font-medium\">Initial setup:</span> 2-4 hours<br />\n                    <span className=\"font-medium\">Basic POC:</span> 3-7 days<br />\n                    <span className=\"font-medium\">Production readiness:</span> 1-3 months\n                  </p>\n                </div>\n              </div>\n              \n              {/* Snowflake Getting Started */}\n              <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-cyan-100 rounded-full p-2 mr-3\">\n                    <svg className=\"w-6 h-6 text-cyan-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-cyan-800\">Snowflake First Steps</h3>\n                </div>\n                \n                <ol className=\"space-y-4 mb-6\">\n                  <li className=\"flex\">\n                    <span className=\"flex-shrink-0 h-6 w-6 rounded-full bg-cyan-100 text-cyan-800 flex items-center justify-center font-bold text-sm\">1</span>\n                    <div className=\"ml-3\">\n                      <p className=\"text-gray-700\">Start with a 30-day free trial</p>\n                      <p className=\"text-sm text-gray-500 mt-1\">$400 in credits to explore all features</p>\n                    </div>\n                  </li>\n                  <li className=\"flex\">\n                    <span className=\"flex-shrink-0 h-6 w-6 rounded-full bg-cyan-100 text-cyan-800 flex items-center justify-center font-bold text-sm\">2</span>\n                    <div className=\"ml-3\">\n                      <p className=\"text-gray-700\">Use Snowflake web interface (Snowsight)</p>\n                      <p className=\"text-sm text-gray-500 mt-1\">No additional tools required to get started</p>\n                    </div>\n                  </li>\n                  <li className=\"flex\">\n                    <span className=\"flex-shrink-0 h-6 w-6 rounded-full bg-cyan-100 text-cyan-800 flex items-center justify-center font-bold text-sm\">3</span>\n                    <div className=\"ml-3\">\n                      <p className=\"text-gray-700\">Load sample data from Marketplace</p>\n                      <p className=\"text-sm text-gray-500 mt-1\">Free datasets available to experiment with</p>\n                    </div>\n                  </li>\n                  <li className=\"flex\">\n                    <span className=\"flex-shrink-0 h-6 w-6 rounded-full bg-cyan-100 text-cyan-800 flex items-center justify-center font-bold text-sm\">4</span>\n                    <div className=\"ml-3\">\n                      <p className=\"text-gray-700\">Create a virtual warehouse and run queries</p>\n                      <p className=\"text-sm text-gray-500 mt-1\">Start small and scale as needed</p>\n                    </div>\n                  </li>\n                </ol>\n                \n                <div className=\"bg-cyan-50 p-3 rounded-lg\">\n                  <h4 className=\"font-medium text-cyan-800 mb-1\">Time Investment:</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    <span className=\"font-medium\">Initial setup:</span> 1 hour<br />\n                    <span className=\"font-medium\">Basic POC:</span> 1-2 days<br />\n                    <span className=\"font-medium\">Production readiness:</span> 2-6 weeks\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 p-5 rounded-lg border border-gray-200\">\n              <h3 className=\"font-medium mb-4 text-gray-800 text-center\">Quick Start Checklist</h3>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"p-4 bg-white rounded shadow-sm\">\n                  <h4 className=\"font-medium text-blue-800 mb-2\">SingleStore Essentials</h4>\n                  <ul className=\"space-y-2 text-sm\">\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 mr-2 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                      </svg>\n                      SQL client (DBeaver, MySQL Workbench)\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 mr-2 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                      </svg>\n                      Understanding of distributed tables\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 mr-2 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                      </svg>\n                      Basic SQL knowledge\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 mr-2 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                      </svg>\n                      Sample dataset for testing\n                    </li>\n                  </ul>\n                </div>\n                \n                <div className=\"p-4 bg-white rounded shadow-sm\">\n                  <h4 className=\"font-medium text-purple-800 mb-2\">Databricks Essentials</h4>\n                  <ul className=\"space-y-2 text-sm\">\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 mr-2 text-purple-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                      </svg>\n                      Cloud account (AWS, Azure, or GCP)\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 mr-2 text-purple-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                      </svg>\n                      Basic Python or SQL knowledge\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 mr-2 text-purple-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                      </svg>\n                      Storage bucket/container for data\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 mr-2 text-purple-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                      </svg>\n                      Sample dataset or ML use case\n                    </li>\n                  </ul>\n                </div>\n                \n                <div className=\"p-4 bg-white rounded shadow-sm\">\n                  <h4 className=\"font-medium text-cyan-800 mb-2\">Snowflake Essentials</h4>\n                  <ul className=\"space-y-2 text-sm\">\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 mr-2 text-cyan-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                      </svg>\n                      Web browser (Snowsight interface)\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 mr-2 text-cyan-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                      </svg>\n                      Basic SQL knowledge\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 mr-2 text-cyan-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                      </svg>\n                      Data to import (or use samples)\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 mr-2 text-cyan-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                      </svg>\n                      Familiarity with cloud concepts\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              \n              <div className=\"mt-5 bg-green-50 p-3 rounded-lg\">\n                <h4 className=\"font-medium text-green-800 mb-1\">Pro Tip:</h4>\n                <p className=\"text-sm text-gray-700\">Start with a small proof-of-concept using a real business problem you need to solve. This will give you practical insights into which platform best fits your specific needs.</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SimplifiedComparison;","import React, { useState } from 'react';\nimport DatabaseComparison from './components/DatabaseComparison';\nimport DataEngineeringGlossary from './components/DataEngineeringGlossary';\nimport AwsVsAzureComparison from './components/AwsVsAzureComparison';\nimport DataProcessingFlows from './components/DataProcessingFlows';\nimport CloudStorageComparison from './components/CloudStorageComparison';\nimport AzureDatabricksInfraDetail from './components/AzureDatabricksInfra';\nimport StoragePricingComparison from './components/StoragePricingComparison';\nimport SimplifiedComparison from './components/SimplifiedComparison'; // Import the new component\nimport './App.css';\nimport './styles/buttons.css';\n\nfunction App() {\n  // State to track active primary category and subcategory\n  const [activeCategory, setActiveCategory] = useState('cloud-compare');\n  const [activeSubcategory, setActiveSubcategory] = useState('overview');\n  // View mode for database section only\n  const [databaseViewMode, setDatabaseViewMode] = useState('technical');\n\n  // Navigation structure with categories and subcategories\n  const navigation = {\n    'cloud-compare': {\n      label: 'AWS vs Azure',\n      subcategories: {\n        'overview': { \n          label: 'Services Overview', \n          component: <AwsVsAzureComparison />\n        },\n        'storage': { \n          label: 'Storage Services', \n          component: <CloudStorageComparison />\n        },\n        'storage-pricing': { \n          label: 'Storage Pricing', \n          component: <StoragePricingComparison />\n        },\n        'data-flows': { \n          label: 'Data Processing Flows', \n          component: <DataProcessingFlows />\n        }\n      }\n    },\n    'database-compare': {\n      label: 'Database Technologies',\n      subcategories: {\n        'database': { \n          label: 'SingleStore vs Databricks vs Snowflake',\n          // For database section, we'll use the view mode to determine which component to show\n          hasMutipleViews: true\n        }\n      }\n    },\n    'architecture': {\n      label: 'Architecture',\n      subcategories: {\n        'databricks': { \n          label: 'Databricks Architecture', \n          component: <AzureDatabricksInfraDetail />\n        }\n      }\n    },\n    'reference': {\n      label: 'Reference',\n      subcategories: {\n        'glossary': { \n          label: 'Data Engineering Glossary', \n          component: <DataEngineeringGlossary />\n        }\n      }\n    }\n  };\n\n  const handleCategoryClick = (category) => {\n    setActiveCategory(category);\n    // Select the first subcategory when changing categories\n    setActiveSubcategory(Object.keys(navigation[category].subcategories)[0]);\n  };\n\n  // Get the current component based on active category and subcategory\n  const getCurrentComponent = () => {\n    const subcategory = navigation[activeCategory].subcategories[activeSubcategory];\n    \n    // Special handling for database section which has multiple view modes\n    if (activeCategory === 'database-compare' && activeSubcategory === 'database') {\n      if (databaseViewMode === 'simplified') {\n        return <SimplifiedComparison />;\n      } else {\n        return <DatabaseComparison audienceView={databaseViewMode} />;\n      }\n    }\n    \n    // For other sections, just return the regular component\n    return subcategory.component;\n  };\n\n  // Check if the current section has multiple view modes\n  const hasMultipleViews = () => {\n    return navigation[activeCategory].subcategories[activeSubcategory].hasMutipleViews;\n  };\n\n  return (\n    <div className=\"App bg-gray-50 min-h-screen\">\n      {/* Primary navigation - Categories */}\n      <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 p-6 shadow-md\">\n        <div className=\"flex justify-center w-full max-w-6xl mx-auto flex-wrap\">\n          {Object.entries(navigation).map(([category, { label }]) => (\n            <button \n              key={category}\n              onClick={() => handleCategoryClick(category)} \n              className={`btn-nav ${\n                activeCategory === category \n                  ? 'btn-nav-active' \n                  : 'btn-nav-inactive'\n              }`}\n            >\n              {label}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Secondary navigation - Subcategories */}\n      <div className=\"bg-gray-100 py-3 px-6 border-b\">\n        <div className=\"flex justify-center w-full max-w-6xl mx-auto flex-wrap\">\n          {Object.entries(navigation[activeCategory].subcategories).map(([subcategory, { label }]) => (\n            <button \n              key={subcategory}\n              onClick={() => setActiveSubcategory(subcategory)} \n              className={`px-4 py-2 mx-1 text-sm font-medium rounded-md ${\n                activeSubcategory === subcategory \n                  ? 'bg-white shadow text-blue-600' \n                  : 'text-gray-600 hover:text-gray-900 hover:bg-gray-200'\n              }`}\n            >\n              {label}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* View mode selector - Only show for database comparison */}\n      {hasMultipleViews() && (\n        <div className=\"bg-white py-3 px-6 shadow-sm mb-6\">\n          <div className=\"flex justify-center w-full max-w-6xl mx-auto\">\n            <div className=\"bg-gray-100 p-1 rounded-lg inline-flex\">\n              <button\n                onClick={() => setDatabaseViewMode('technical')}\n                className={`px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n                  databaseViewMode === 'technical'\n                    ? 'bg-blue-600 text-white'\n                    : 'text-gray-700 hover:bg-gray-200'\n                }`}\n              >\n                Technical Details\n              </button>\n              <button\n                onClick={() => setDatabaseViewMode('executive')}\n                className={`px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n                  databaseViewMode === 'executive'\n                    ? 'bg-blue-600 text-white'\n                    : 'text-gray-700 hover:bg-gray-200'\n                }`}\n              >\n                Executive Summary\n              </button>\n              <button\n                onClick={() => setDatabaseViewMode('simplified')}\n                className={`px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n                  databaseViewMode === 'simplified'\n                    ? 'bg-blue-600 text-white'\n                    : 'text-gray-700 hover:bg-gray-200'\n                }`}\n              >\n                Simplified View\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Container for component content */}\n      <div className=\"container max-w-6xl mx-auto p-6\">\n        {getCurrentComponent()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}